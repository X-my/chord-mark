{"version":3,"file":"chord-mark-converters.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;ACVA;;AAEA;AACA,EAAE,KAA4D;AAC9D,EAAE,CACwG;AAC1G,CAAC,uBAAuB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI,UAAU;AACd;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe,UAAU;AACzB;AACA;AACA;AACA,6FAA6F,aAAa;AAC1G;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;AACvB,eAAe,UAAU;AACzB;AACA;AACA;AACA,6EAA6E,eAAe;AAC5F;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,EAAE,iBAAiB,EAAE,MAAM;AAC3D;AACA,+BAA+B,QAAQ;AACvC,wDAAwD;AACxD,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,0BAA0B;AACvC,aAAa,mBAAmB;AAChC,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA,4CAA4C;;AAE5C;AACA;AACA,kBAAkB,sBAAsB;AACxC,kBAAkB,sBAAsB;AACxC,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wDAAwD;AACxD,wDAAwD;AACxD,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D,sDAAsD;AACtD,sDAAsD;AACtD;AACA,uDAAuD;AACvD,uDAAuD;AACvD,sEAAsE;AACtE,yEAAyE;AACzE,4DAA4D;AAC5D,oDAAoD;AACpD,4CAA4C;AAC5C,8DAA8D;AAC9D,8DAA8D;AAC9D,4CAA4C;AAC5C,iDAAiD;AACjD,gEAAgE;AAChE,iDAAiD;AACjD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD,+CAA+C;;AAE/C;AACA;AACA;AACA;AACA,oDAAoD;;AAEpD;AACA;AACA;AACA,oCAAoC;AACpC,uCAAuC;;AAEvC;AACA,gBAAgB,SAAS;AACzB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,UAAU;AACV;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,MAAM;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C;AAC5C,sFAAsF,6DAA6D;AACnJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uTAAuT;AACvT;AACA;AACA;AACA,QAAQ,wCAAwC,oFAAoF,oKAAoK,iHAAiH;AACzZ;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,QAAQ;AACxB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB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ACA;;AAEA;;;;;;;;ACxBA,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA,gBAAgB,mBAAO,CAAC,IAAc;AACtC,kBAAkB,mBAAO,CAAC,IAAe;AACzC,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;AACnC,cAAc,mBAAO,CAAC,IAAY;AAClC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,SAAS,mBAAO,CAAC,IAAM;;AAEvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3BA,SAAS,mBAAO,CAAC,IAAM;;AAEvB;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,WAAW,mBAAO,CAAC,GAAQ;;AAE3B;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,aAAa,mBAAO,CAAC,IAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,qBAAqB,mBAAO,CAAC,IAAmB;;AAEhD;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;;;;;;;;ACxBA,YAAY,mBAAO,CAAC,IAAU;AAC9B,gBAAgB,mBAAO,CAAC,IAAc;AACtC,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,iBAAiB,mBAAO,CAAC,IAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,gBAAgB,mBAAO,CAAC,IAAc;AACtC,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,oBAAoB,mBAAO,CAAC,IAAkB;AAC9C,iBAAiB,mBAAO,CAAC,IAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,aAAa,mBAAO,CAAC,GAAW;AAChC,qBAAqB,mBAAO,CAAC,IAAmB;AAChD,qBAAqB,mBAAO,CAAC,IAAmB;AAChD,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;AACnC,YAAY,mBAAO,CAAC,IAAS;AAC7B,eAAe,mBAAO,CAAC,IAAY;AACnC,YAAY,mBAAO,CAAC,IAAS;AAC7B,WAAW,mBAAO,CAAC,GAAQ;AAC3B,aAAa,mBAAO,CAAC,IAAU;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,SAAS;AACpB;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACrKA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC7BA,eAAe,mBAAO,CAAC,IAAa;AACpC,oBAAoB,mBAAO,CAAC,IAAkB;AAC9C,wBAAwB,mBAAO,CAAC,IAAsB;AACtD,eAAe,mBAAO,CAAC,GAAa;AACpC,gBAAgB,mBAAO,CAAC,IAAc;AACtC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvBA,gBAAgB,mBAAO,CAAC,IAAc;AACtC,oBAAoB,mBAAO,CAAC,IAAkB;;AAE9C;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrCA,oBAAoB,mBAAO,CAAC,IAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;;AAEA;;;;;;;;ACfA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Y;AACnC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClFA,aAAa,mBAAO,CAAC,GAAW;AAChC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,YAAY,mBAAO,CAAC,IAAU;AAC9B,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACXA,iBAAiB,mBAAO,CAAC,IAAc;AACvC,eAAe,mBAAO,CAAC,IAAa;AACpC,eAAe,mBAAO,CAAC,IAAY;AACnC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9CA,aAAa,mBAAO,CAAC,GAAW;AAChC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,eAAe,mBAAO,CAAC,IAAY;AACnC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3DA,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,0BAA0B,mBAAO,CAAC,IAAwB;AAC1D,eAAe,mBAAO,CAAC,IAAY;AACnC,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9BA,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA,eAAe,mBAAO,CAAC,IAAY;AACnC,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChCA,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,8BAA8B,mBAAO,CAAC,IAA4B;;AAElE;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,UAAU,mBAAO,CAAC,IAAO;AACzB,YAAY,mBAAO,CAAC,IAAS;AAC7B,YAAY,mBAAO,CAAC,IAAU;AAC9B,yBAAyB,mBAAO,CAAC,IAAuB;AACxD,8BAA8B,mBAAO,CAAC,IAA4B;AAClE,YAAY,mBAAO,CAAC,IAAU;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChCA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA,cAAc,mBAAO,CAAC,IAAY;;AAElC;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,eAAe,mBAAO,CAAC,IAAY;AACnC,eAAe,mBAAO,CAAC,IAAa;AACpC,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,eAAe,mBAAO,CAAC,IAAY;AACnC,qBAAqB,mBAAO,CAAC,IAAmB;AAChD,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA,aAAa,mBAAO,CAAC,GAAW;AAChC,eAAe,mBAAO,CAAC,GAAa;AACpC,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA,sBAAsB,mBAAO,CAAC,IAAoB;;AAElD;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClBA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA,eAAe,mBAAO,CAAC,IAAa;AACpC,oBAAoB,mBAAO,CAAC,IAAkB;AAC9C,wBAAwB,mBAAO,CAAC,IAAsB;AACtD,eAAe,mBAAO,CAAC,IAAa;AACpC,gBAAgB,mBAAO,CAAC,IAAc;AACtC,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvEA,eAAe,mBAAO,CAAC,IAAa;AACpC,WAAW,mBAAO,CAAC,IAAQ;AAC3B,aAAa,mBAAO,CAAC,IAAW;AAChC,YAAY,mBAAO,CAAC,IAAU;;AAE9B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACZA,wBAAwB,mBAAO,CAAC,IAAqB;;AAErD;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,cAAc;AAC3B;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA,cAAc,mBAAO,CAAC,IAAW;AACjC,YAAY,mBAAO,CAAC,IAAU;AAC9B,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACfA,WAAW,mBAAO,CAAC,IAAS;;AAE5B;AACA,kBAAkB,KAA0B;;AAE5C;AACA,gCAAgC,QAAa;;AAE7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AClCA,uBAAuB,mBAAO,CAAC,IAAqB;;AAEpD;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,aAAa,mBAAO,CAAC,GAAW;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,uBAAuB,mBAAO,CAAC,IAAqB;;AAEpD;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA,kBAAkB,mBAAO,CAAC,EAAgB;AAC1C,sBAAsB,mBAAO,CAAC,IAAoB;;AAElD;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,QAAQ,UAAU;AAC7B,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,wBAAwB;;AAExB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvCA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,iBAAiB,mBAAO,CAAC,GAAe;;AAExC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,UAAU;AAC7B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,GAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ,UAAU;AAC7B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,WAAW,mBAAO,CAAC,IAAS;;AAE5B;AACA;;AAEA;;;;;;;;ACLA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,kBAAkB,mBAAO,CAAC,IAAe;AACzC,WAAW,mBAAO,CAAC,GAAQ;;AAE3B;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA,gEAAgE;AAChE;AACA;;AAEA;;;;;;;;AChBA,UAAU,mBAAO,CAAC,IAAQ;AAC1B,WAAW,mBAAO,CAAC,IAAQ;AAC3B,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;AClBA,oBAAoB,mBAAO,CAAC,IAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,gBAAgB,mBAAO,CAAC,IAAc;;AAEtC;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA,IAAI;AACJ,CAAC;;AAED;;;;;;;;ACVA,eAAe,mBAAO,CAAC,IAAa;AACpC,gBAAgB,mBAAO,CAAC,IAAc;AACtC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnFA,aAAa,mBAAO,CAAC,GAAW;AAChC,iBAAiB,mBAAO,CAAC,IAAe;AACxC,SAAS,mBAAO,CAAC,IAAM;AACvB,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,iBAAiB,mBAAO,CAAC,IAAe;AACxC,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/GA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzFA,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAa;AACpC,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA;AACA,wBAAwB,qBAAM,gBAAgB,qBAAM,IAAI,qBAAM,sBAAsB,qBAAM;;AAE1F;;;;;;;;ACHA,qBAAqB,mBAAO,CAAC,IAAmB;AAChD,iBAAiB,mBAAO,CAAC,GAAe;AACxC,WAAW,mBAAO,CAAC,GAAQ;;AAE3B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA,uBAAuB,mBAAO,CAAC,IAAqB;AACpD,oBAAoB,mBAAO,CAAC,IAAkB;AAC9C,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,kBAAkB,mBAAO,CAAC,GAAgB;AAC1C,sBAAsB,mBAAO,CAAC,IAAoB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5EA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,aAAa,mBAAO,CAAC,GAAW;AAChC,kBAAkB,mBAAO,CAAC,IAAe;AACzC,cAAc,mBAAO,CAAC,IAAW;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,cAAc,mBAAO,CAAC,IAAW;AACjC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACjBA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACZA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;AClBA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA,WAAW,mBAAO,CAAC,IAAS;AAC5B,gBAAgB,mBAAO,CAAC,GAAc;AACtC,UAAU,mBAAO,CAAC,GAAQ;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA,cAAc,mBAAO,CAAC,GAAW;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;;;;;;;ACzBA,gBAAgB,mBAAO,CAAC,IAAc;;AAEtC;AACA;;AAEA;;;;;;;;ACLA,cAAc,mBAAO,CAAC,GAAY;;AAElC;AACA;;AAEA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;ACnBA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA,kBAAkB,KAA0B;;AAE5C;AACA,gCAAgC,QAAa;;AAE7C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,CAAC;;AAED;;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA,YAAY,mBAAO,CAAC,IAAU;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnCA,cAAc,mBAAO,CAAC,IAAY;AAClC,gBAAgB,mBAAO,CAAC,IAAc;;AAEtC;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;ACfA,iBAAiB,mBAAO,CAAC,IAAe;;AAExC;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACRA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;;;;;ACjBA,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;;AAEA;;;;;;;;ACbA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA,gBAAgB,mBAAO,CAAC,GAAc;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;;;;;;;ACbA,gBAAgB,mBAAO,CAAC,GAAc;AACtC,UAAU,mBAAO,CAAC,GAAQ;AAC1B,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA,oBAAoB,mBAAO,CAAC,IAAkB;;AAE9C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;;;;;;;;AC1BA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;;;;;;;ACzBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AClBA,gBAAgB,mBAAO,CAAC,IAAc;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA;AACA,oBAAoB,QAAQ,IAAI,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnCA,gBAAgB,mBAAO,CAAC,IAAc;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA;AACA,oBAAoB,QAAQ,IAAI,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,UAAU;AACvB;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA,YAAY,QAAQ,IAAI,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA,qBAAqB,mBAAO,CAAC,IAAmB;AAChD,kBAAkB,mBAAO,CAAC,IAAgB;AAC1C,eAAe,mBAAO,CAAC,IAAa;AACpC,wBAAwB,mBAAO,CAAC,IAAqB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA,8BAA8B,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,gBAAgB,mBAAO,CAAC,IAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,GAAG;AAChB;AACA;AACA;AACA,OAAO,8CAA8C;AACrD,OAAO,+CAA+C;AACtD,OAAO;AACP;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzCA,oBAAoB,mBAAO,CAAC,IAAkB;AAC9C,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,gBAAgB,mBAAO,CAAC,IAAa;;AAErC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA,OAAO,oCAAoC;AAC3C,OAAO,oCAAoC;AAC3C,OAAO;AACP;AACA;AACA,oCAAoC,4BAA4B;AAChE;AACA;AACA;AACA,wBAAwB,iCAAiC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtDA,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA,cAAc,mBAAO,CAAC,IAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA,kBAAkB,QAAQ,OAAO,UAAU;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChCA,gBAAgB,mBAAO,CAAC,GAAc;AACtC,cAAc,mBAAO,CAAC,IAAY;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,cAAc;AACzB,aAAa,SAAS;AACtB;AACA;AACA,2BAA2B,gBAAgB,QAAQ,GAAG;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpBA,eAAe,mBAAO,CAAC,GAAa;AACpC,uBAAuB,mBAAO,CAAC,IAAqB;AACpD,eAAe,mBAAO,CAAC,IAAa;AACpC,0BAA0B,mBAAO,CAAC,IAAwB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC7BA,eAAe,mBAAO,CAAC,IAAY;AACnC,qBAAqB,mBAAO,CAAC,GAAmB;AAChD,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;;;;;;ACzCA,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA,8BAA8B,mBAAmB;AACjD;AACA;AACA;AACA;AACA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA;;AAEA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzBA,iBAAiB,mBAAO,CAAC,IAAc;AACvC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChCA,kBAAkB,mBAAO,CAAC,IAAe;AACzC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AChCA,WAAW,mBAAO,CAAC,IAAS;AAC5B,gBAAgB,mBAAO,CAAC,IAAa;;AAErC;AACA,kBAAkB,KAA0B;;AAE5C;AACA,gCAAgC,QAAa;;AAE7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrCA,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA,WAAW,mBAAO,CAAC,IAAS;;AAE5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnCA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AClCA,gBAAgB,mBAAO,CAAC,IAAc;AACtC,gBAAgB,mBAAO,CAAC,IAAc;AACtC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAiB;AAC5C,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7DA,gBAAgB,mBAAO,CAAC,IAAc;AACtC,gBAAgB,mBAAO,CAAC,IAAc;AACtC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1BA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,cAAc,mBAAO,CAAC,IAAW;AACjC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7BA,iBAAiB,mBAAO,CAAC,IAAe;AACxC,mBAAmB,mBAAO,CAAC,IAAgB;;AAE3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA,uBAAuB,mBAAO,CAAC,IAAqB;AACpD,gBAAgB,mBAAO,CAAC,IAAc;AACtC,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1BA,oBAAoB,mBAAO,CAAC,IAAkB;AAC9C,eAAe,mBAAO,CAAC,IAAa;AACpC,kBAAkB,mBAAO,CAAC,IAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACpCA,oBAAoB,mBAAO,CAAC,IAAkB;AAC9C,iBAAiB,mBAAO,CAAC,IAAe;AACxC,kBAAkB,mBAAO,CAAC,IAAe;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnBA,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa,UAAU;AACvB;AACA;AACA,kBAAkB;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AChBA,eAAe,mBAAO,CAAC,GAAa;AACpC,gBAAgB,mBAAO,CAAC,IAAc;AACtC,gBAAgB,mBAAO,CAAC,IAAc;AACtC,eAAe,mBAAO,CAAC,IAAa;AACpC,iBAAiB,mBAAO,CAAC,GAAe;AACxC,sBAAsB,mBAAO,CAAC,IAAoB;AAClD,eAAe,mBAAO,CAAC,IAAa;AACpC,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,sBAAsB;AACjC,aAAa,QAAQ;AACrB;AACA;AACA,kBAAkB;AAClB;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACxDA,mBAAmB,mBAAO,CAAC,GAAiB;AAC5C,uBAAuB,mBAAO,CAAC,IAAqB;AACpD,YAAY,mBAAO,CAAC,IAAU;AAC9B,YAAY,mBAAO,CAAC,IAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa,UAAU;AACvB;AACA;AACA;AACA,OAAO,OAAO,UAAU;AACxB,OAAO,OAAO;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACjBA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACzCA,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACnCA,eAAe,mBAAO,CAAC,IAAa;AACpC,eAAe,mBAAO,CAAC,IAAY;AACnC,eAAe,mBAAO,CAAC,IAAY;;AAEnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC/DA,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC3BA,eAAe,mBAAO,CAAC,IAAa;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACxBA,qBAAqB,mBAAO,CAAC,IAAmB;AAChD,eAAe,mBAAO,CAAC,IAAa;AACpC,wBAAwB,mBAAO,CAAC,IAAqB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;UC9BA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;;;;;;;;;;;;;;;;;;ACJkC;AAEnB,SAASC,mBAASA,CAACC,IAAI,EAAE;EACvC,OAAOF,yBAAkB,CAACE,IAAI,EAAE;IAC/BE,YAAY,EAAE,CAAC,OAAO,CAAC;IACvBC,YAAY,EAAE;EACf,CAAC,CAAC;AACH;;ACPA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,GAAG;AACd,aAAa,GAAG;AAChB;AACe;AACf;AACA;AACA,EAAE;AACF;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,kBAAkB,EAAC;;;;;;;;;ACVE;AACJ;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,cAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG,yCAAyC;AAC5C,GAAG,uCAAuC;AAC1C,GAAG,qCAAqC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,gBAAO;;AAiB3B;;;AC5M8B;;AAEzB;AACP,kBAAkB,KAAK;AACvB,kBAAkB,KAAK;AACvB;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA,2CAA2C,uBAAuB,+CAA+C,aAAa;AAC9H;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,UAAU;AACtB;AACA;AACA;AACA,OAAO,mBAAmB;AAC1B;AACA;AACA;AACA;;AAQE;;;;;;;;;AC/EoC;AACA;;AAEtC;AACA,qBAAqB,iBAAQ;AAC7B,QAAQ,iBAAQ;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,iBAAQ;;AAE7B;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEmD;;;AChCD;AACsB;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;;AAEA;AACA,EAAE,MAAM;AACR;;AAEA;AACA,YAAY,qBAAqB;AACjC;;AAEA;AACA;;;ACzCA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf,SAAS,+CAA+C;;AAExD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqD;;;ACpCI;AACJ;;AAErD;AACA,EAAE,SAAS;AACX,EAAE,SAAS;AACX;AACA,EAAE,SAAS;AACX,EAAE,SAAS;AACX;;AAEA,EAAE,SAAS;AACX,EAAE,SAAS;AACX;AACA,EAAE,SAAS;AACX,EAAE,SAAS;;AAEX,EAAE,SAAS;AACX,EAAE,SAAS;AACX,EAAE,SAAS;;AAEX,EAAE,SAAS;AACX,EAAE,SAAS;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,SAAS;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,SAAS,MAAM,SAAS;AAC7B;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;;AC5HA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,UAAU,OAAO;AACjB;AACA,QAAQ,OAAO;AACf;AACA;AACA,UAAU,OAAO;AACjB;AACA,QAAQ,OAAO;AACf;AACA,SAAS,OAAO;AAChB;AACA,EAAE;AACF;AACA;AACA,UAAU,QAAQ;AAClB;AACA;AACA,QAAQ,QAAQ;AAChB;AACA,UAAU,QAAQ;AAClB;AACA;AACA,QAAQ,QAAQ;AAChB;AACA,SAAS,QAAQ;AACjB,EAAE;AACF;;;AClCqE;AACN;AACU;;AAEzE,MAAM,qBAAC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,qBAAC,MAAM;AACd,QAAQ,qBAAC,MAAM;AACf;AACA,MAAM,qBAAC,MAAM;AACb,OAAO,qBAAC,MAAM;AACd;AACA;AACA;AACA;AACA,MAAM,qBAAC,MAAM;AACb;AACA;AACA,OAAO,qBAAC,MAAM;AACd,MAAM,qBAAC,MAAM;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,qBAAC,MAAM;AACZ;AACA;AACA,KAAK,qBAAC,MAAM;AACZ,KAAK,qBAAC,MAAM;AACZ;AACA;AACA,MAAM,qBAAC,MAAM;AACb;AACA,KAAK,qBAAC,MAAM;AACZ,OAAO,qBAAC,MAAM;AACd,MAAM,qBAAC,MAAM;AACb,KAAK,qBAAC,MAAM;AACZ,KAAK,qBAAC,MAAM;AACZ;AACA;AACA;AACA;AACA,KAAK,qBAAC,OAAO;AACb;AACA;AACA,KAAK,qBAAC,OAAO;AACb,KAAK,qBAAC,OAAO;AACb;AACA;AACA;AACA,OAAO,qBAAC,MAAM;AACd,KAAK,qBAAC,OAAO,KAAK,qBAAC,MAAM;AACzB;AACA,MAAM,qBAAC,MAAM;AACb,KAAK,qBAAC,OAAO,IAAI,qBAAC,MAAM;AACxB,KAAK,qBAAC,OAAO;AACb;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,cAAc;AACpC;AACA;;AAEA;;AAEA;AACA,oBAAoB,uCAAmB;AACvC;AACA;AACA;;AAEA,aAAa,OAAO,EAAE,WAAW;;AAEjC;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,cAAc,OAAO,EAAE,WAAW;AAClC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;;AAEtC;AACA;;AAEA;AACA,oBAAoB,UAAU,SAAS,aAAa;AACpD,oBAAoB,UAAU,SAAS,aAAa;AACpD;AACA;;AAEA,MAAM,uCAAmB;AACzB,EAAE,SAAS;AACX,EAAE,SAAS;AACX,EAAE,SAAS;AACX,EAAE,SAAS;AACX,wBAAwB,qBAAC,MAAM;;AAE/B,EAAE,SAAS;AACX,EAAE,SAAS;AACX,EAAE,SAAS;AACX;AACA;AACA,IAAI;AACJ,gCAAgC,qBAAC,MAAM;AACvC;AACA,EAAE;AACF,EAAE,SAAS;;AAEX,EAAE,SAAS;AACX,EAAE,SAAS;AACX,EAAE,SAAS;AACX,yBAAyB,qBAAC,MAAM;;AAEhC,EAAE,SAAS;AACX,EAAE,SAAS;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC,qBAAC,MAAM,EAAE,qBAAC,MAAM,OAAO,qBAAC,MAAM;AACnE,IAAI;AACJ;AACA,SAAS,qBAAC,MAAM,EAAE,qBAAC,MAAM;AACzB,SAAS,qBAAC,MAAM,EAAE,qBAAC,MAAM;AACzB,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE,SAAS;AACX,EAAE,SAAS;AACX,EAAE,SAAS;AACX,EAAE,SAAS;AACX,EAAE,SAAS;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,aAAa;AACf;AACA,EAAE,aAAa;AACf;;AAEA;AACA;;;ACpQwC;;AAExC;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,EAAE;AACF;;;AC5E0C;;AAE1C;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACe,2CAA2C;AAC1D;AACA;AACA;AACA,GAAG;AACH,gBAAgB;AAChB,eAAe;AACf,uBAAuB,mBAAU;AACjC;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEiD;;;AC1Ba;AACG;AACF;;AAE/D;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;AACA;;AAEA;AACA,KAAK,cAAc;AACnB;AACA;AACA;AACA,EAAE,kBAAkB,sBAAsB,UAAU,GAAG,SAAS;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AClC8D;;AAE9D;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf,6BAA6B,kBAAkB;;AAE/C;AACA,8BAA8B,kBAAkB;AAChD;;AAEA;AACA;;;;;;;;;;;;;;;AChBkC;AACF;AACA;AACM;;AAEE;;AAON;;AAEuB;;AAEzD;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf,sBAAsB,eAAM;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,SAAS;AAChC,GAAG;AACH,uBAAuB,SAAS;AAChC,GAAG;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ACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,QAAQ,UAAU;AAClB;;AAEA;AACA,QAAQ,UAAU;AAClB;;AAEA;AACA,QAAQ,UAAU;AAClB;;AAEA;AACA;AACA;;;;;;AC1E4C;;AAEJ;;AAEmC;AACJ;AACc;AACV;;AAEtB;;AAErD;AACA,WAAW,OAAO;AAClB,WAAW,uBAAuB;AAClC,aAAa;AACb;AACe,SAAS,iBAAQ;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,oBAAW;AAC9B;AACA;AACA;;AAEA,KAAK,SAAS;AACd;AACA;;AAEA,KAAK,SAAS;AACd;AACA;;AAEA;AACA;AACA,gBAAgB,oBAAoB;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,mBAAmB;AACrB,EAAE,iBAAiB;AACnB,EAAE,wBAAwB;AAC1B;;AAEA,QAAQ,KAAK;AACb;;;ACpEkC;;AAEmD;;AAEtE;AACf,SAAS,qBAAqB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,wBAAwB;AAChC;;AAEA;AACA,mBAAmB,UAAU;AAC7B;;AAEA;AACA;;AAEA,oBAAoB,UAAU;;AAE9B;AACA,IAAI,aAAa;AACjB;AACA;;AAEA;AACA,QAAQ,aAAa;AACrB;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA,WAAW,qCAAqC;AAChD,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;ACjEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;AACA;AACA;;;ACR0C;;AAET;AACgC;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACe;AACf;AACA;;AAEA,gBAAgB,mBAAU;;AAE1B;AACA,qBAAqB,WAAW;AAChC,oBAAoB,yBAAkB;AACtC;AACA;;AAEA;AACA;;;AC5B0C;;AAEL;AAC0B;;AAEH;AACZ;AACJ;AACwB;AACV;AACjB;AACF;;AAEvC;AACA;AACA,WAAW,uBAAuB;AAClC,aAAa;AACb;AACA,SAAS,yCAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI;AACN,CAAC,0BAAkB;;AAEnB;;AAEA;AACA,kBAAkB,iBAAc;AAChC;;AAEA;AACA,kBAAkB,SAAS;AAC3B;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;;AAEA;AACA,EAAE,qBAAqB;AACvB,EAAE,YAAY;AACd;AACA;;AAEA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA,wBAAwB,KAAK,aAAa,mBAAU;;AAEpD;AACA,KAAK,UAAU;AACf,KAAK,WAAW;AAChB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oEAAe,yCAAoB,EAAC;;;AC5EhB;;AAEyC;AACM;;AAEf;;;ACLF;AAElD,IAAME,WAAW,GAAG,WAAW;AAC/B,IAAMC,cAAc,GAAG,cAAc;AAErC,IAAMC,yBAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAI,EAAK;EAC7B,IAAMC,SAAS,GAAGD,IAAI,C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","sources":["webpack://chord-mark-converters/webpack/universalModuleDefinition","webpack://chord-mark-converters/../../node_modules/dompurify/dist/purify.js","webpack://chord-mark-converters/../../node_modules/lodash/_DataView.js","webpack://chord-mark-converters/../../node_modules/lodash/_Hash.js","webpack://chord-mark-converters/../../node_modules/lodash/_ListCache.js","webpack://chord-mark-converters/../../node_modules/lodash/_Map.js","webpack://chord-mark-converters/../../node_modules/lodash/_MapCache.js","webpack://chord-mark-converters/../../node_modules/lodash/_Promise.js","webpack://chord-mark-converters/../../node_modules/lodash/_Set.js","webpack://chord-mark-converters/../../node_modules/lodash/_SetCache.js","webpack://chord-mark-converters/../../node_modules/lodash/_Stack.js","webpack://chord-mark-converters/../../node_modules/lodash/_Symbol.js","webpack://chord-mark-converters/../../node_modules/lodash/_Uint8Array.js","webpack://chord-mark-converters/../../node_modules/lodash/_WeakMap.js","webpack://chord-mark-converters/../../node_modules/lodash/_apply.js","webpack://chord-mark-converters/../../node_modules/lodash/_arrayEach.js","webpack://chord-mark-converters/../../node_modules/lodash/_arrayFilter.js","webpack://chord-mark-converters/../../node_modules/lodash/_arrayIncludes.js","webpack://chord-mark-converters/../../node_modules/lodash/_arrayIncludesWith.js","webpack://chord-mark-converters/../../node_modules/lodash/_arrayLikeKeys.js","webpack://chord-mark-converters/../../node_modules/lodash/_arrayMap.js","webpack://chord-mark-converters/../../node_modules/lodash/_arrayPush.js","webpack://chord-mark-converters/../../node_modules/lodash/_arraySome.js","webpack://chord-mark-converters/../../node_modules/lodash/_assignValue.js","webpack://chord-mark-converters/../../node_modules/lodash/_assocIndexOf.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseAssign.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseAssignIn.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseAssignValue.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseClone.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseCreate.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseDifference.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseFindIndex.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseFlatten.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseFor.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseForOwn.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseGet.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseGetAllKeys.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseGetTag.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseHasIn.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIndexOf.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIntersection.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseInverter.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsArguments.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsEqual.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsEqualDeep.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsMap.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsMatch.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsNaN.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsNative.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsSet.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIsTypedArray.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseIteratee.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseKeys.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseKeysIn.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseMatches.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseMatchesProperty.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseProperty.js","webpack://chord-mark-converters/../../node_modules/lodash/_basePropertyDeep.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseRest.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseSetToString.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseSlice.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseTimes.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseToString.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseTrim.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseUnary.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseUniq.js","webpack://chord-mark-converters/../../node_modules/lodash/_baseUnset.js","webpack://chord-mark-converters/../../node_modules/lodash/_cacheHas.js","webpack://chord-mark-converters/../../node_modules/lodash/_castArrayLikeObject.js","webpack://chord-mark-converters/../../node_modules/lodash/_castPath.js","webpack://chord-mark-converters/../../node_modules/lodash/_cloneArrayBuffer.js","webpack://chord-mark-converters/../../node_modules/lodash/_cloneBuffer.js","webpack://chord-mark-converters/../../node_modules/lodash/_cloneDataView.js","webpack://chord-mark-converters/../../node_modules/lodash/_cloneRegExp.js","webpack://chord-mark-converters/../../node_modules/lodash/_cloneSymbol.js","webpack://chord-mark-converters/../../node_modules/lodash/_cloneTypedArray.js","webpack://chord-mark-converters/../../node_modules/lodash/_copyArray.js","webpack://chord-mark-converters/../../node_modules/lodash/_copyObject.js","webpack://chord-mark-converters/../../node_modules/lodash/_copySymbols.js","webpack://chord-mark-converters/../../node_modules/lodash/_copySymbolsIn.js","webpack://chord-mark-converters/../../node_modules/lodash/_coreJsData.js","webpack://chord-mark-converters/../../node_modules/lodash/_createBaseFor.js","webpack://chord-mark-converters/../../node_modules/lodash/_createFind.js","webpack://chord-mark-converters/../../node_modules/lodash/_createInverter.js","webpack://chord-mark-converters/../../node_modules/lodash/_createSet.js","webpack://chord-mark-converters/../../node_modules/lodash/_customOmitClone.js","webpack://chord-mark-converters/../../node_modules/lodash/_defineProperty.js","webpack://chord-mark-converters/../../node_modules/lodash/_equalArrays.js","webpack://chord-mark-converters/../../node_modules/lodash/_equalByTag.js","webpack://chord-mark-converters/../../node_modules/lodash/_equalObjects.js","webpack://chord-mark-converters/../../node_modules/lodash/_flatRest.js","webpack://chord-mark-converters/../../node_modules/lodash/_freeGlobal.js","webpack://chord-mark-converters/../../node_modules/lodash/_getAllKeys.js","webpack://chord-mark-converters/../../node_modules/lodash/_getAllKeysIn.js","webpack://chord-mark-converters/../../node_modules/lodash/_getMapData.js","webpack://chord-mark-converters/../../node_modules/lodash/_getMatchData.js","webpack://chord-mark-converters/../../node_modules/lodash/_getNative.js","webpack://chord-mark-converters/../../node_modules/lodash/_getPrototype.js","webpack://chord-mark-converters/../../node_modules/lodash/_getRawTag.js","webpack://chord-mark-converters/../../node_modules/lodash/_getSymbols.js","webpack://chord-mark-converters/../../node_modules/lodash/_getSymbolsIn.js","webpack://chord-mark-converters/../../node_modules/lodash/_getTag.js","webpack://chord-mark-converters/../../node_modules/lodash/_getValue.js","webpack://chord-mark-converters/../../node_modules/lodash/_hasPath.js","webpack://chord-mark-converters/../../node_modules/lodash/_hashClear.js","webpack://chord-mark-converters/../../node_modules/lodash/_hashDelete.js","webpack://chord-mark-converters/../../node_modules/lodash/_hashGet.js","webpack://chord-mark-converters/../../node_modules/lodash/_hashHas.js","webpack://chord-mark-converters/../../node_modules/lodash/_hashSet.js","webpack://chord-mark-converters/../../node_modules/lodash/_initCloneArray.js","webpack://chord-mark-converters/../../node_modules/lodash/_initCloneByTag.js","webpack://chord-mark-converters/../../node_modules/lodash/_initCloneObject.js","webpack://chord-mark-converters/../../node_modules/lodash/_isFlattenable.js","webpack://chord-mark-converters/../../node_modules/lodash/_isIndex.js","webpack://chord-mark-converters/../../node_modules/lodash/_isKey.js","webpack://chord-mark-converters/../../node_modules/lodash/_isKeyable.js","webpack://chord-mark-converters/../../node_modules/lodash/_isMasked.js","webpack://chord-mark-converters/../../node_modules/lodash/_isPrototype.js","webpack://chord-mark-converters/../../node_modules/lodash/_isStrictComparable.js","webpack://chord-mark-converters/../../node_modules/lodash/_listCacheClear.js","webpack://chord-mark-converters/../../node_modules/lodash/_listCacheDelete.js","webpack://chord-mark-converters/../../node_modules/lodash/_listCacheGet.js","webpack://chord-mark-converters/../../node_modules/lodash/_listCacheHas.js","webpack://chord-mark-converters/../../node_modules/lodash/_listCacheSet.js","webpack://chord-mark-converters/../../node_modules/lodash/_mapCacheClear.js","webpack://chord-mark-converters/../../node_modules/lodash/_mapCacheDelete.js","webpack://chord-mark-converters/../../node_modules/lodash/_mapCacheGet.js","webpack://chord-mark-converters/../../node_modules/lodash/_mapCacheHas.js","webpack://chord-mark-converters/../../node_modules/lodash/_mapCacheSet.js","webpack://chord-mark-converters/../../node_modules/lodash/_mapToArray.js","webpack://chord-mark-converters/../../node_modules/lodash/_matchesStrictComparable.js","webpack://chord-mark-converters/../../node_modules/lodash/_memoizeCapped.js","webpack://chord-mark-converters/../../node_modules/lodash/_nativeCreate.js","webpack://chord-mark-converters/../../node_modules/lodash/_nativeKeys.js","webpack://chord-mark-converters/../../node_modules/lodash/_nativeKeysIn.js","webpack://chord-mark-converters/../../node_modules/lodash/_nodeUtil.js","webpack://chord-mark-converters/../../node_modules/lodash/_objectToString.js","webpack://chord-mark-converters/../../node_modules/lodash/_overArg.js","webpack://chord-mark-converters/../../node_modules/lodash/_overRest.js","webpack://chord-mark-converters/../../node_modules/lodash/_parent.js","webpack://chord-mark-converters/../../node_modules/lodash/_root.js","webpack://chord-mark-converters/../../node_modules/lodash/_setCacheAdd.js","webpack://chord-mark-converters/../../node_modules/lodash/_setCacheHas.js","webpack://chord-mark-converters/../../node_modules/lodash/_setToArray.js","webpack://chord-mark-converters/../../node_modules/lodash/_setToString.js","webpack://chord-mark-converters/../../node_modules/lodash/_shortOut.js","webpack://chord-mark-converters/../../node_modules/lodash/_stackClear.js","webpack://chord-mark-converters/../../node_modules/lodash/_stackDelete.js","webpack://chord-mark-converters/../../node_modules/lodash/_stackGet.js","webpack://chord-mark-converters/../../node_modules/lodash/_stackHas.js","webpack://chord-mark-converters/../../node_modules/lodash/_stackSet.js","webpack://chord-mark-converters/../../node_modules/lodash/_strictIndexOf.js","webpack://chord-mark-converters/../../node_modules/lodash/_stringToPath.js","webpack://chord-mark-converters/../../node_modules/lodash/_toKey.js","webpack://chord-mark-converters/../../node_modules/lodash/_toSource.js","webpack://chord-mark-converters/../../node_modules/lodash/_trimmedEndIndex.js","webpack://chord-mark-converters/../../node_modules/lodash/clone.js","webpack://chord-mark-converters/../../node_modules/lodash/cloneDeep.js","webpack://chord-mark-converters/../../node_modules/lodash/constant.js","webpack://chord-mark-converters/../../node_modules/lodash/difference.js","webpack://chord-mark-converters/../../node_modules/lodash/eq.js","webpack://chord-mark-converters/../../node_modules/lodash/escapeRegExp.js","webpack://chord-mark-converters/../../node_modules/lodash/find.js","webpack://chord-mark-converters/../../node_modules/lodash/findIndex.js","webpack://chord-mark-converters/../../node_modules/lodash/flatten.js","webpack://chord-mark-converters/../../node_modules/lodash/get.js","webpack://chord-mark-converters/../../node_modules/lodash/hasIn.js","webpack://chord-mark-converters/../../node_modules/lodash/identity.js","webpack://chord-mark-converters/../../node_modules/lodash/intersection.js","webpack://chord-mark-converters/../../node_modules/lodash/invert.js","webpack://chord-mark-converters/../../node_modules/lodash/isArguments.js","webpack://chord-mark-converters/../../node_modules/lodash/isArray.js","webpack://chord-mark-converters/../../node_modules/lodash/isArrayLike.js","webpack://chord-mark-converters/../../node_modules/lodash/isArrayLikeObject.js","webpack://chord-mark-converters/../../node_modules/lodash/isBuffer.js","webpack://chord-mark-converters/../../node_modules/lodash/isEqual.js","webpack://chord-mark-converters/../../node_modules/lodash/isFinite.js","webpack://chord-mark-converters/../../node_modules/lodash/isFunction.js","webpack://chord-mark-converters/../../node_modules/lodash/isLength.js","webpack://chord-mark-converters/../../node_modules/lodash/isMap.js","webpack://chord-mark-converters/../../node_modules/lodash/isObject.js","webpack://chord-mark-converters/../../node_modules/lodash/isObjectLike.js","webpack://chord-mark-converters/../../node_modules/lodash/isPlainObject.js","webpack://chord-mark-converters/../../node_modules/lodash/isSet.js","webpack://chord-mark-converters/../../node_modules/lodash/isString.js","webpack://chord-mark-converters/../../node_modules/lodash/isSymbol.js","webpack://chord-mark-converters/../../node_modules/lodash/isTypedArray.js","webpack://chord-mark-converters/../../node_modules/lodash/keys.js","webpack://chord-mark-converters/../../node_modules/lodash/keysIn.js","webpack://chord-mark-converters/../../node_modules/lodash/last.js","webpack://chord-mark-converters/../../node_modules/lodash/memoize.js","webpack://chord-mark-converters/../../node_modules/lodash/noop.js","webpack://chord-mark-converters/../../node_modules/lodash/omit.js","webpack://chord-mark-converters/../../node_modules/lodash/property.js","webpack://chord-mark-converters/../../node_modules/lodash/stubArray.js","webpack://chord-mark-converters/../../node_modules/lodash/stubFalse.js","webpack://chord-mark-converters/../../node_modules/lodash/toFinite.js","webpack://chord-mark-converters/../../node_modules/lodash/toInteger.js","webpack://chord-mark-converters/../../node_modules/lodash/toNumber.js","webpack://chord-mark-converters/../../node_modules/lodash/toString.js","webpack://chord-mark-converters/../../node_modules/lodash/uniq.js","webpack://chord-mark-converters/../../node_modules/lodash/without.js","webpack://chord-mark-converters/webpack/bootstrap","webpack://chord-mark-converters/webpack/runtime/compat get default export","webpack://chord-mark-converters/webpack/runtime/define property getters","webpack://chord-mark-converters/webpack/runtime/global","webpack://chord-mark-converters/webpack/runtime/hasOwnProperty shorthand","webpack://chord-mark-converters/webpack/runtime/make namespace object","webpack://chord-mark-converters/webpack/runtime/node module decorator","webpack://chord-mark-converters/./src/helpers/stripTags.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/helpers/chain.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/helpers/checkCustomFilters.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/dictionaries/notes.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/dictionaries/allKeys.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/helpers/ChordParsingError.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/helpers/hasElement.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/checkIntervalsConsistency.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/formatSymbol.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/dictionaries/qualities.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/formatSymbolParts.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/dictionaries/degrees.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/formatNumeralSymbol.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/getParsableDescriptor.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/initChord.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/dictionaries/scales.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/nameIndividualChordNotes.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/normalizeNotes.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/normalizeDescriptor.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/parseBase.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/dictionaries/modifiers.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/dictionaries/intervalsToSemitones.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/filters/parseDescriptor.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/parser/chordParserFactory.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/renderer/filters/shortenNormalized.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/renderer/filters/simplify.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/renderer/filters/transpose.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/renderer/filters/convertNotationSystem.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/renderer/printer/text.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/renderer/printer/raw.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/renderer/chordRendererFactory.js","webpack://chord-mark-converters/../../node_modules/chord-symbol/src/index.js","webpack://chord-mark-converters/./src/helpers/chordMatchers.js","webpack://chord-mark-converters/./src/helpers/trimArray.js","webpack://chord-mark-converters/./src/helpers/getSectionLabel.js","webpack://chord-mark-converters/./src/converters/chordPro2ChordMark.js","webpack://chord-mark-converters/./src/helpers/getSpaceLength.js","webpack://chord-mark-converters/./src/helpers/insertAt.js","webpack://chord-mark-converters/./src/converters/chordsOverLyrics2ChordMark.js","webpack://chord-mark-converters/./src/convert2ChordMark.js","webpack://chord-mark-converters/../chord-mark/src/core/dom/escapeHTML.js","webpack://chord-mark-converters/../chord-mark/src/core/dom/stripTags.js","webpack://chord-mark-converters/../chord-mark/src/parser/lineTypes.js","webpack://chord-mark-converters/../chord-mark/src/parser/matchers/isTimeSignatureString.js","webpack://chord-mark-converters/../chord-mark/src/parser/parseTimeSignature.js","webpack://chord-mark-converters/../chord-mark/src/parser/syntax.js","webpack://chord-mark-converters/../chord-mark/src/parser/matchers/isChord.js","webpack://chord-mark-converters/../chord-mark/src/parser/matchers/isChordLine.js","webpack://chord-mark-converters/../chord-mark/src/parser/matchers/isChordLineRepeater.js","webpack://chord-mark-converters/../chord-mark/src/parser/matchers/isSectionLabel.js","webpack://chord-mark-converters/../chord-mark/src/parser/parseChord.js","webpack://chord-mark-converters/../chord-mark/src/parser/exceptions/InvalidBeatCountException.js","webpack://chord-mark-converters/../chord-mark/src/parser/exceptions/InvalidChordRepetitionException.js","webpack://chord-mark-converters/../chord-mark/src/parser/exceptions/InvalidSubBeatGroupException.js","webpack://chord-mark-converters/../chord-mark/src/parser/exceptions/InvalidBarRepeatException.js","webpack://chord-mark-converters/../chord-mark/src/parser/parseChordLine.js","webpack://chord-mark-converters/../chord-mark/src/parser/helper/keyHelpers.js","webpack://chord-mark-converters/../chord-mark/src/parser/matchers/isKeyDeclaration.js","webpack://chord-mark-converters/../chord-mark/src/parser/parseKeyDeclaration.js","webpack://chord-mark-converters/../chord-mark/src/parser/parseLyricLine.js","webpack://chord-mark-converters/../chord-mark/src/parser/parseSectionLabel.js","webpack://chord-mark-converters/../chord-mark/src/parser/helper/songs.js","webpack://chord-mark-converters/../chord-mark/src/parser/songLinesFactory.js","webpack://chord-mark-converters/../chord-mark/src/parser/getAllChordsInSong.js","webpack://chord-mark-converters/../chord-mark/src/parser/getAllKeysInSong.js","webpack://chord-mark-converters/../chord-mark/src/parser/parseSong.js","webpack://chord-mark-converters/../chord-mark/src/renderer/symbols.js","webpack://chord-mark-converters/../chord-mark/src/renderer/spacers/chord/getBeatString.js","webpack://chord-mark-converters/../chord-mark/src/renderer/spacers/chord/getMaxBeatsWidth.js","webpack://chord-mark-converters/../chord-mark/src/renderer/spacers/chord/simple.js","webpack://chord-mark-converters/../chord-mark/src/renderer/spacers/chord/aligned.js","webpack://chord-mark-converters/../chord-mark/src/renderer/spacers/chord/chordLyrics.js","webpack://chord-mark-converters/../chord-mark/src/renderer/components/renderChordSymbol.js","webpack://chord-mark-converters/../chord-mark/src/renderer/components/renderBarContent.js","webpack://chord-mark-converters/../chord-mark/src/renderer/components/renderChordLine.js","webpack://chord-mark-converters/../chord-mark/src/core/dom/htmlToElement.js","webpack://chord-mark-converters/../chord-mark/src/renderer/components/renderChordLyricLine.js","webpack://chord-mark-converters/../chord-mark/src/renderer/components/renderKeyDeclaration.js","webpack://chord-mark-converters/../chord-mark/src/renderer/helpers/renderAllSectionLabels.js","webpack://chord-mark-converters/../chord-mark/src/renderer/helpers/getChordSymbol.js","webpack://chord-mark-converters/../chord-mark/src/renderer/helpers/renderAllChords.js","webpack://chord-mark-converters/../chord-mark/src/renderer/replaceRepeatedBars.js","webpack://chord-mark-converters/../chord-mark/src/renderer/components/renderSong.js","webpack://chord-mark-converters/../chord-mark/src/chordMark.js","webpack://chord-mark-converters/./src/converters/chordMark2ChordPro.js","webpack://chord-mark-converters/./src/converters/chordMark2UltimateGuitar.js","webpack://chord-mark-converters/./src/chordMarkConverters.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chord-mark-converters\"] = factory();\n\telse\n\t\troot[\"chord-mark-converters\"] = factory();\n})(self, () => {\nreturn ","/*! @license DOMPurify 3.0.8 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.8/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n\n  /**\n   * Creates a new function that calls the given function with a specified thisArg and arguments.\n   *\n   * @param {Function} func - The function to be wrapped and called.\n   * @returns {Function} A new function that calls the given function with a specified thisArg and arguments.\n   */\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      return apply(func, thisArg, args);\n    };\n  }\n\n  /**\n   * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n   *\n   * @param {Function} func - The constructor function to be wrapped and called.\n   * @returns {Function} A new function that constructs an instance of the given constructor function with the provided arguments.\n   */\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return construct(func, args);\n    };\n  }\n\n  /**\n   * Add properties to a lookup table\n   *\n   * @param {Object} set - The set to which elements will be added.\n   * @param {Array} array - The array containing elements to be added to the set.\n   * @param {Function} transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n   * @returns {Object} The modified set with added elements.\n   */\n  function addToSet(set, array) {\n    let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n    let l = array.length;\n    while (l--) {\n      let element = array[l];\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n          element = lcElement;\n        }\n      }\n      set[element] = true;\n    }\n    return set;\n  }\n\n  /**\n   * Clean up an array to harden against CSPP\n   *\n   * @param {Array} array - The array to be cleaned.\n   * @returns {Array} The cleaned version of the array\n   */\n  function cleanArray(array) {\n    for (let index = 0; index < array.length; index++) {\n      if (getOwnPropertyDescriptor(array, index) === undefined) {\n        array[index] = null;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * Shallow clone an object\n   *\n   * @param {Object} object - The object to be cloned.\n   * @returns {Object} A new object that copies the original.\n   */\n  function clone(object) {\n    const newObject = create(null);\n    for (const [property, value] of entries(object)) {\n      if (getOwnPropertyDescriptor(object, property) !== undefined) {\n        if (Array.isArray(value)) {\n          newObject[property] = cleanArray(value);\n        } else if (value && typeof value === 'object' && value.constructor === Object) {\n          newObject[property] = clone(value);\n        } else {\n          newObject[property] = value;\n        }\n      }\n    }\n    return newObject;\n  }\n\n  /**\n   * This method automatically checks if the prop is function or getter and behaves accordingly.\n   *\n   * @param {Object} object - The object to look up the getter function in its prototype chain.\n   * @param {String} prop - The property name for which to find the getter function.\n   * @returns {Function} The getter function found in the prototype chain or a fallback function.\n   */\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n      object = getPrototypeOf(object);\n    }\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n\n  // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  const DOCTYPE_NAME = seal(/^html$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME\n  });\n\n  const getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return {TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n    const DOMPurify = root => createDOMPurify(root);\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '3.0.8';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n    let {\n      document\n    } = window;\n    const originalDocument = document;\n    const currentScript = originalDocument.currentScript;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n\n    /* Allowed attribute names */\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    let FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    let FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    let ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    let ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    let SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    let WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    let SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    let FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    let RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    let RETURN_DOM_FRAGMENT = false;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    let RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n    let SANITIZE_DOM = true;\n\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n    /* Keep element content when removing element? */\n    let KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    let IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    let USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n\n    /* Allowed XHTML+XML namespaces */\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n\n    /* Parsing of strict XHTML documents */\n    let PARSER_MEDIA_TYPE = null;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc = null;\n\n    /* Keep a reference to config to pass to hooks */\n    let CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    const _parseConfig = function _parseConfig() {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n\n      // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES),\n      // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS),\n      // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS,\n      // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, text);\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        }\n\n        // Overwrite existing TrustedTypes policy.\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n\n        // Sign local variables required by `sanitize`.\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        }\n\n        // If creating the internal policy succeeded sign internal variables.\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n      CONFIG = cfg;\n    };\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']);\n\n    // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n    const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n    const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n\n    /**\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element);\n\n      // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        }\n\n        // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        }\n\n        // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        }\n\n        // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        }\n\n        // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      }\n\n      // For XHTML and XML documents that support custom namespaces\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      }\n\n      // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n      return false;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.remove();\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n      node.removeAttribute(name);\n\n      // We void attribute values for unremovable \"is\"\" attributes\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc = null;\n      let leadingWhitespace = null;\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {\n          // Syntax error if dirtyPayload is invalid xml\n        }\n      }\n      const body = doc.body || doc.documentElement;\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     *\n     * @param  {Node} root The root element or node to start traversing on.\n     * @return {NodeIterator} The created NodeIterator\n     */\n    const _createNodeIterator = function _createNodeIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n\n    /**\n     * Checks whether the given object is a DOM node.\n     *\n     * @param  {Node} object object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'function' && object instanceof Node;\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content = null;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      const tagName = transformCaseFunc(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n            return false;\n          }\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n            return false;\n          }\n        }\n\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n            for (let i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check whether element has a valid namespace */\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Make sure that older browsers don't get fallback-tag mXSS */\n      if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          content = stringReplace(content, expr, ' ');\n        });\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n      return true;\n    };\n\n    /**\n     * _isBasicCustomElement\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     *\n     * @param {string} tagName name of the tag of the node to sanitize\n     * @returns {boolean} Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n     */\n    const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n      const {\n        attributes\n      } = currentNode;\n\n      /* Check if we have attributes; if not we might have a text node */\n      if (!attributes) {\n        return;\n      }\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      let l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        const attr = attributes[l];\n        const {\n          name,\n          namespaceURI,\n          value: attrValue\n        } = attr;\n        const lcName = transformCaseFunc(name);\n        let value = name === 'value' ? attrValue : stringTrim(attrValue);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n            value = stringReplace(value, expr, ' ');\n          });\n        }\n\n        /* Is `value` valid for this attribute? */\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode);\n\n          // Prefix the value and later re-create the attribute with the sanitized value\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n\n        /* Handle attributes that require Trusted Types */\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode = null;\n      const shadowIterator = _createNodeIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} cfg object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body = null;\n      let importedNode = null;\n      let currentNode = null;\n      let returnNode = null;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      IS_EMPTY_INPUT = !dirty;\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n\n      /* Return dirty HTML if DOMPurify cannot run */\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n      }\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n        return returnNode;\n      }\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Serialize doctype if allowed */\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          serializedHTML = stringReplace(serializedHTML, expr, ' ');\n        });\n      }\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function () {\n      let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {String} tag Tag name of containing element.\n     * @param  {String} attr Attribute name.\n     * @param  {String} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n    return DOMPurify;\n  }\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","var root = require('./_root');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nmodule.exports = isFinite;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","var baseDifference = require('./_baseDifference'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nmodule.exports = without;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import domPurify from 'dompurify';\n\nexport default function stripTags(html) {\n\treturn domPurify.sanitize(html, {\n\t\tALLOWED_TAGS: ['#text'],\n\t\tKEEP_CONTENT: true,\n\t});\n}\n","/**\n * Execute given functions in sequence, feeding the result of one as an input to the next.\n *\n * @param {Function[]} allFunctions\n * @param {*} input - parameter given to the first function\n * @returns {*} return value of the last function\n */\nexport default function chain(allFunctions, input) {\n\treturn allFunctions.reduce((value, fn) => {\n\t\treturn value ? fn(value) : null;\n\t}, input);\n}\n","const checkCustomFilters = (customFilters) => {\n\tif (!Array.isArray(customFilters)) {\n\t\tthrow new TypeError('customFilters should be given as an array');\n\t}\n\tif (customFilters.some((filter) => typeof filter !== 'function')) {\n\t\tthrow new TypeError(`The given filter is not a function`);\n\t}\n\treturn true;\n};\n\nexport default checkCustomFilters;\n","import _invert from 'lodash/invert';\nimport _omit from 'lodash/omit';\n\nconst notes = {\n\tAFlat: 'Ab',\n\tA: 'A',\n\tASharp: 'A#',\n\tBFlat: 'Bb',\n\tB: 'B',\n\tC: 'C',\n\tCSharp: 'C#',\n\tDFlat: 'Db',\n\tD: 'D',\n\tDSharp: 'D#',\n\tEFlat: 'Eb',\n\tE: 'E',\n\tF: 'F',\n\tFSharp: 'F#',\n\tGFlat: 'Gb',\n\tG: 'G',\n\tGSharp: 'G#',\n};\n\nconst english = {\n\tAb: notes.AFlat,\n\tA: notes.A,\n\t'A#': notes.ASharp,\n\tBb: notes.BFlat,\n\tB: notes.B,\n\t'B#': notes.C,\n\tCb: notes.B,\n\tC: notes.C,\n\t'C#': notes.CSharp,\n\tDb: notes.DFlat,\n\tD: notes.D,\n\t'D#': notes.DSharp,\n\tEb: notes.EFlat,\n\tE: notes.E,\n\t'E#': notes.F,\n\tFb: notes.E,\n\tF: notes.F,\n\t'F#': notes.FSharp,\n\tGb: notes.GFlat,\n\tG: notes.G,\n\t'G#': notes.GSharp,\n};\n\nconst latin = {\n\tLab: notes.AFlat,\n\tLa: notes.A,\n\t'La#': notes.ASharp,\n\tSib: notes.BFlat,\n\tSi: notes.B,\n\t'Si#': notes.C,\n\tDob: notes.B,\n\tDo: notes.C,\n\t'Do#': notes.CSharp,\n\tReb: notes.DFlat,\n\tRéb: notes.DFlat,\n\tRe: notes.D,\n\tRé: notes.D,\n\t'Re#': notes.DSharp,\n\t'Ré#': notes.DSharp,\n\tMib: notes.EFlat,\n\tMi: notes.E,\n\t'Mi#': notes.F,\n\tFab: notes.E,\n\tFa: notes.F,\n\t'Fa#': notes.FSharp,\n\tSolb: notes.GFlat,\n\tSol: notes.G,\n\t'Sol#': notes.GSharp,\n};\n\nconst german = {\n\t..._omit(english, ['Bb', 'B', 'B#']),\n\tAs: notes.AFlat,\n\tAis: notes.ASharp,\n\tHb: notes.BFlat,\n\tHes: notes.BFlat,\n\tH: notes.B,\n\tHis: notes.C,\n\t'H#': notes.C,\n\tCes: notes.B,\n\tCis: notes.CSharp,\n\tDes: notes.DFlat,\n\tDis: notes.DSharp,\n\tEs: notes.EFlat,\n\tEis: notes.F,\n\tFes: notes.E,\n\tFis: notes.FSharp,\n\tGes: notes.GFlat,\n\tGis: notes.GSharp,\n};\n\nfunction getAccidentalsVariation(source) {\n\tlet variant;\n\treturn Object.keys(source).reduce((acc, curr) => {\n\t\tif (curr.match(/.[b|#]$/)) {\n\t\t\tvariant = curr.replace('#', '♯').replace('b', '♭');\n\t\t\tacc[variant] = source[curr];\n\t\t}\n\t\treturn acc;\n\t}, {});\n}\n\nconst englishVariantsToNotes = {\n\t...english,\n\t...getAccidentalsVariation(english),\n};\n\nconst latinVariantsToNotes = {\n\t...latin,\n\t...getAccidentalsVariation(latin),\n};\n\nconst germanVariantsToNotes = {\n\t...german,\n\t...getAccidentalsVariation(german),\n};\n\nconst allVariantsToNotes = {\n\t...englishVariantsToNotes,\n\t...latinVariantsToNotes,\n\t...germanVariantsToNotes,\n};\n\nconst allVariants = Object.keys(allVariantsToNotes).sort(\n\t(a, b) => b.length - a.length\n);\n\nconst englishVariants = Object.keys(englishVariantsToNotes).sort(\n\t(a, b) => b.length - a.length\n);\n\nconst latinVariants = Object.keys(latinVariantsToNotes).sort(\n\t(a, b) => b.length - a.length\n);\n\nconst germanVariants = Object.keys(germanVariantsToNotes).sort(\n\t(a, b) => b.length - a.length\n);\n\nconst allVariantsPerGroup = [\n\t{ name: 'english', notes: englishVariants },\n\t{ name: 'german', notes: germanVariants },\n\t{ name: 'latin', notes: latinVariants },\n];\n\nconst notesSharp = [\n\tnotes.A,\n\tnotes.ASharp,\n\tnotes.B,\n\tnotes.C,\n\tnotes.CSharp,\n\tnotes.D,\n\tnotes.DSharp,\n\tnotes.E,\n\tnotes.F,\n\tnotes.FSharp,\n\tnotes.G,\n\tnotes.GSharp,\n];\n\nconst notesFlat = [\n\tnotes.A,\n\tnotes.BFlat,\n\tnotes.B,\n\tnotes.C,\n\tnotes.DFlat,\n\tnotes.D,\n\tnotes.EFlat,\n\tnotes.E,\n\tnotes.F,\n\tnotes.GFlat,\n\tnotes.G,\n\tnotes.AFlat,\n];\n\nconst sharpsToFlats = {\n\t[notes.CSharp]: notes.DFlat,\n\t[notes.DSharp]: notes.EFlat,\n\t[notes.FSharp]: notes.GFlat,\n\t[notes.GSharp]: notes.AFlat,\n\t[notes.ASharp]: notes.BFlat,\n};\n\nconst flatsToSharps = _invert(sharpsToFlats);\n\nexport {\n\tnotes,\n\tnotesSharp,\n\tnotesFlat,\n\tsharpsToFlats,\n\tflatsToSharps,\n\tallVariants,\n\tallVariantsPerGroup,\n\tenglishVariants,\n\tlatinVariants,\n\tgermanVariants,\n\tallVariantsToNotes,\n\tenglishVariantsToNotes,\n\tlatinVariantsToNotes,\n\tgermanVariantsToNotes,\n};\n","import { notes } from './notes';\n\nexport const allKeys = [\n\t...Object.values(notes),\n\t...Object.values(notes).map((key) => key + 'm'),\n];\n","class InvalidInputError extends Error {\n\t/**\n\t *  The parser was not given a valid string to parse\n\t *  ex: `parseChord(null)`\n\t */\n\tconstructor() {\n\t\tsuper('The given symbol is not a valid string');\n\t\tthis.name = 'InvalidInput';\n\t}\n}\n\nclass UnexpectedError extends Error {\n\t/**\n\t * This error is very unlikely to happen.\n\t * If it does, it is probably in the context of a custom filter that returns `null` instead of throwing an exception.\n\t */\n\tconstructor() {\n\t\tconst message =\n\t\t\t'An unexpected error happened. Maybe a custom filter returned null instead of throwing an exception?';\n\t\tsuper(message);\n\t\tthis.name = 'UnexpectedError';\n\t}\n}\n\nclass ChordSymbolError extends Error {\n\tconstructor(message, chord, errorName) {\n\t\tsuper(message);\n\t\tthis.name = errorName;\n\t\tthis.chord = chord;\n\t}\n}\n\nclass NoSymbolFoundError extends ChordSymbolError {\n\t/**\n\t * The given string cannot be confused with a chord symbol in the current notation system\n\t * ex: `parseChord('Ape')`\n\t * @param {Chord} chord - the chord object, in the state that it was when the error occurred\n\t */\n\tconstructor(chord) {\n\t\tconst message = `\"${chord.input.symbol}\" does not seems to be a chord`;\n\t\tsuper(message, chord, 'NoSymbolFound');\n\t}\n}\n\nclass InvalidModifierError extends ChordSymbolError {\n\t/**\n\t * The given string looks like a chord symbol, but `ChordSymbol` does not understand its descriptor.\n\t * It can be either because of a typo, or just because the given word is not a symbol.\n\t * ex: `parseChord('Amid')`\n\t * @param {Chord} chord - the chord object, in the state that it was when the error occurred\n\t * @param {String} invalidChars - the characters that proved problematic when parsing the symbol\n\t */\n\tconstructor(chord, invalidChars) {\n\t\tconst message = `The chord descriptor \"${chord.input.descriptor}\" contains unknown or duplicated modifiers: \"${invalidChars}\"`;\n\t\tsuper(message, chord, 'InvalidModifier');\n\t}\n}\n\nclass InvalidIntervalsError extends ChordSymbolError {\n\t/**\n\t * The given string is a chord symbol, but the resulting interval list is not valid\n\t * ex: `parseChord('A7M7')`\n\t * @param {Chord} chord - the chord object, in the state that it was when the error occurred\n\t * @param {String[]} forbiddenCombo - intervals that should not belong together in a chord\n\t */\n\tconstructor(chord, forbiddenCombo) {\n\t\tconst message =\n\t\t\t`\"${chord.input.symbol}\" describes a chord with an invalid intervals combo: ` +\n\t\t\tforbiddenCombo.join(' and ');\n\t\tsuper(message, chord, 'InvalidIntervals');\n\t}\n}\n\nexport {\n\tInvalidInputError,\n\tInvalidIntervalsError,\n\tInvalidModifierError,\n\tNoSymbolFoundError,\n\tUnexpectedError,\n};\n","import _isArray from 'lodash/isArray';\nimport _isEqual from 'lodash/isEqual';\n\nfunction hasExactly(allIntervals, search) {\n\tconst arraySearch = _isArray(search) ? search : [search];\n\treturn _isEqual(allIntervals, arraySearch);\n}\n\nfunction hasOneOf(allIntervals, search) {\n\treturn has(allIntervals, search, 'oneOf');\n}\n\nfunction hasAll(allIntervals, search) {\n\treturn has(allIntervals, search, 'all');\n}\n\nfunction hasNoneOf(allIntervals, search) {\n\treturn has(allIntervals, search, 'none');\n}\n\nfunction has(allIntervals, search, require) {\n\tconst arraySearch = _isArray(search) ? search : [search];\n\n\tconst lookupMethod = require === 'oneOf' ? 'some' : 'every';\n\n\treturn arraySearch[lookupMethod]((interval) => {\n\t\treturn require === 'none'\n\t\t\t? !allIntervals.includes(interval)\n\t\t\t: allIntervals.includes(interval);\n\t});\n}\n\nexport { hasExactly, hasOneOf, hasAll, hasNoneOf };\n","import { hasAll } from '../../helpers/hasElement';\nimport { InvalidIntervalsError } from '../../helpers/ChordParsingError';\n\nconst allForbiddenCombos = [\n\t['2', '3'],\n\t['2', '9'],\n\t['3', 'b3'],\n\t//['3',  '4'], // valid in the Real Book: F#7SUS(add 3)\n\t['4', '11'],\n\t['5', 'b5'],\n\t['5', '#5'],\n\t['b6', '#5'],\n\t['b6', '6'],\n\t['b6', '13'],\n\t['6', '13'],\n\t['b7', 'bb7'],\n\t['7', 'b7'],\n\t['9', 'b9'],\n\t['9', '#9'],\n\t['11', '#11'],\n\t['13', 'b13'],\n];\n\n/**\n * Check parsed interval list to detect potential inconsistencies\n *\n * @param {Chord} chord\n * @returns {(Chord|Null)}\n */\nexport default function checkIntervalsConsistency(chord) {\n\tconst intervals = chord.normalized.intervals;\n\n\tconst forbiddenCombo = allForbiddenCombos.find((combo) =>\n\t\thasAll(intervals, combo)\n\t);\n\n\tif (forbiddenCombo) {\n\t\tthrow new InvalidIntervalsError(chord, forbiddenCombo);\n\t}\n\n\treturn chord;\n}\n","/**\n * Render the chord by assembling all its components\n *\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function formatSymbol(chord) {\n\tconst { rootNote, bassNote, descriptor, chordChanges } = chord.formatted;\n\n\tlet symbol = rootNote;\n\n\tif (descriptor) {\n\t\tsymbol += descriptor;\n\t}\n\tif (chordChanges && chordChanges.length) {\n\t\tsymbol += '(' + chordChanges.join(',') + ')';\n\t}\n\tif (bassNote) {\n\t\tsymbol += '/' + bassNote;\n\t}\n\n\tchord.formatted.symbol = symbol;\n\n\treturn chord;\n}\n","const qualities = {\n\tma: 'major',\n\tma6: 'major6',\n\tma7: 'major7',\n\tdom7: 'dominant7',\n\n\tmi: 'minor',\n\tmi6: 'minor6',\n\tmi7: 'minor7',\n\tmiMa7: 'minorMajor7',\n\n\taug: 'augmented',\n\tdim: 'diminished',\n\tdim7: 'diminished7',\n\n\tpower: 'power',\n\tbass: 'bass',\n};\n\nconst majorQualities = [\n\tqualities.ma,\n\tqualities.ma6,\n\tqualities.ma7,\n\tqualities.dom7,\n\tqualities.aug,\n];\n\nconst minorQualities = [\n\tqualities.mi,\n\tqualities.mi6,\n\tqualities.mi7,\n\tqualities.miMa7,\n\tqualities.dim,\n\tqualities.dim7,\n];\n\nexport { qualities, majorQualities, minorQualities };\n","import { qualities } from '../../dictionaries/qualities';\nimport { hasNoneOf } from '../../helpers/hasElement';\n\nconst qualityToDescriptor = {\n\t[qualities.ma]: () => '',\n\t[qualities.ma6]: (chord) =>\n\t\tchord.normalized.intervals.includes('9') ? '69' : '6',\n\t[qualities.ma7]: (chord) => 'ma' + getHighestExtension(chord),\n\t[qualities.dom7]: (chord) =>\n\t\tchord.normalized.intents.alt ? '7alt' : getHighestExtension(chord),\n\n\t[qualities.mi]: () => 'mi',\n\t[qualities.mi6]: (chord) =>\n\t\tchord.normalized.intervals.includes('9') ? 'mi69' : 'mi6',\n\t[qualities.mi7]: (chord) => 'mi' + getHighestExtension(chord),\n\t[qualities.miMa7]: (chord) => 'miMa' + getHighestExtension(chord),\n\n\t[qualities.aug]: () => '+',\n\t[qualities.dim]: () => 'dim',\n\t[qualities.dim7]: () => 'dim7',\n\n\t[qualities.power]: () => '5',\n\t[qualities.bass]: () => ' bass',\n};\n\nconst chordChangesDescriptors = {\n\tadd: 'add',\n\tadd7: 'Ma7',\n\tomit: 'omit',\n\tsus: 'sus',\n};\n\n/**\n * Pre-render the chord by formatting all his components: root and bass notes, descriptor and changes\n *\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function formatSymbolParts(chord) {\n\tchord.formatted = {\n\t\trootNote: chord.normalized.rootNote,\n\t\tbassNote: chord.normalized.bassNote,\n\t\tdescriptor: getDescriptor(chord),\n\t\tchordChanges: getChordChanges(chord),\n\t};\n\treturn chord;\n}\n\nfunction getDescriptor(chord) {\n\tlet descriptor = qualityToDescriptor[chord.normalized.quality](chord);\n\tif (chord.normalized.isSuspended) {\n\t\tdescriptor += chordChangesDescriptors.sus;\n\t}\n\treturn descriptor;\n}\n\nfunction getHighestExtension(chord) {\n\tconst extensions = chord.normalized.extensions;\n\n\tlet highestExtension = extensions[extensions.length - 1];\n\n\tif (highestExtension === '11' && chord.normalized.intents.major) {\n\t\thighestExtension = hasNoneOf(chord.normalized.alterations, ['b9', '#9'])\n\t\t\t? '9'\n\t\t\t: '7';\n\t}\n\treturn highestExtension || '7';\n}\n\nfunction getChordChanges(chord) {\n\tconst formattedOmits = formatOmits(chord.normalized.omits);\n\n\tif (isAltered(chord)) {\n\t\treturn formattedOmits;\n\t}\n\n\tconst formattedAdds = formatAdds(\n\t\tchord.normalized.quality,\n\t\tchord.normalized.adds\n\t);\n\n\treturn [\n\t\t...chord.normalized.alterations,\n\t\t...formattedAdds,\n\t\t...formattedOmits,\n\t];\n}\n\nfunction isAltered(chord) {\n\treturn (\n\t\tchord.normalized.intents.alt &&\n\t\tchord.normalized.quality === qualities.dom7\n\t);\n}\n\nfunction formatAdds(quality, adds) {\n\treturn adds\n\t\t.filter((add) => {\n\t\t\treturn !(\n\t\t\t\t[qualities.ma6, qualities.mi6].includes(quality) && add === '9'\n\t\t\t);\n\t\t})\n\t\t.map((add, index) => {\n\t\t\tlet formatted = '';\n\t\t\tif (index === 0) {\n\t\t\t\tformatted += chordChangesDescriptors.add;\n\t\t\t\tif (['b', '#'].includes(add[0])) {\n\t\t\t\t\tformatted += ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tformatted += add === '7' ? chordChangesDescriptors.add7 : add;\n\t\t\treturn formatted;\n\t\t});\n}\n\nfunction formatOmits(omits) {\n\treturn omits.map((omitted, index) => {\n\t\tlet formatted = '';\n\t\tif (index === 0) {\n\t\t\tformatted += chordChangesDescriptors.omit;\n\t\t}\n\t\tformatted += omitted === 'b3' ? '3' : omitted;\n\t\treturn formatted;\n\t});\n}\n","const u = {\n\tflat: `\\u266D`, // ♭\n\tsharp: `\\u266F`, // ♯\n};\n\nexport const semitonesToDegree = {\n\tmajor: {\n\t\t0: `I`,\n\t\t//1: `${u.flat}II`,\n\t\t2: `II`,\n\t\t3: `${u.flat}III`,\n\t\t4: `III`,\n\t\t5: `IV`,\n\t\t//6: `${u.flat}V`,\n\t\t7: `V`,\n\t\t8: `${u.flat}VI`,\n\t\t9: `VI`,\n\t\t10: `${u.flat}VII`,\n\t\t11: `VII`,\n\t},\n\tminor: {\n\t\t0: `I`,\n\t\t//1: `${u.sharp}I`,\n\t\t2: `II`,\n\t\t3: `III`,\n\t\t4: `${u.sharp}III`,\n\t\t5: `IV`,\n\t\t//6: `${u.sharp}IV`,\n\t\t7: `V`,\n\t\t8: `VI`,\n\t\t9: `${u.sharp}VI`,\n\t\t10: `VII`,\n\t\t11: `${u.sharp}VII`,\n\t},\n};\n","import { flatsToSharps, notesSharp } from '../../dictionaries/notes';\nimport { semitonesToDegree } from '../../dictionaries/degrees';\nimport { minorQualities, qualities } from '../../dictionaries/qualities';\n\nconst u = {\n\tsup2: '\\u00B2', // ²\n\tsup4: '\\u2074', // ⁴\n\tsup5: '\\u2075', // ⁵\n\tsup6: '\\u2076', // ⁶\n\tsup7: '\\u2077', // ⁷\n\tsub3: '\\u2083', // ₃\n\tsub4: '\\u2084', // ₄\n\tsub5: '\\u2085', // ₅\n\tflat: '\\u266D', // ♭\n\tsharp: '\\u266F', // ♯\n};\n\nconst diatonicChords = {\n\tmajor: [`I`, `ii`, `iii`, `IV`, `V`, `vi`, `vii°`],\n\tdom7: [\n\t\t`IΔ`,\n\t\t`ii${u.sup7}`,\n\t\t`iii${u.sup7}`,\n\t\t`IVΔ`,\n\t\t`V${u.sup7}`,\n\t\t`vi${u.sup7}`,\n\t\t`viiø`,\n\t],\n\tminor: [`i`, `ii°`, `III`, `iv`, `v`, `VI`, `VII`],\n\tminor7: [\n\t\t`i${u.sup7}`,\n\t\t`iiø`,\n\t\t`IIIΔ`,\n\t\t`iv${u.sup7}`,\n\t\t`v${u.sup7}`,\n\t\t`VIΔ`,\n\t\t`VIIΔ`,\n\t],\n};\n\nconst borrowedChords = {\n\tborrowedFromMinor: [\n\t\t`i`,\n\t\t`ii°`,\n\t\t`${u.flat}III`,\n\t\t`iv`,\n\t\t`v`,\n\t\t`${u.flat}VI`,\n\t\t`${u.flat}VII`,\n\t],\n\tborrowedFromMinor7: [\n\t\t`i${u.sup7}`,\n\t\t`iiø`,\n\t\t`${u.flat}IIIΔ`,\n\t\t`iv${u.sup7}`,\n\t\t`v${u.sup7}`,\n\t\t`${u.flat}VIΔ`,\n\t\t`${u.flat}VIIΔ`,\n\t],\n\tborrowedFromMajor: [\n\t\t`I`,\n\t\t`ii`,\n\t\t`${u.sharp}iii`,\n\t\t`IV`,\n\t\t`V`,\n\t\t`${u.sharp}vi`,\n\t\t`${u.sharp}vii°`,\n\t],\n\tborrowedFromDom7: [\n\t\t`IΔ`,\n\t\t`ii${u.sup7}`,\n\t\t`${u.sharp}iii${u.sup7}`,\n\t\t`IVΔ`,\n\t\t`V${u.sup7}`,\n\t\t`${u.sharp}vi${u.sup7}`,\n\t\t`${u.sharp}viiø`,\n\t],\n};\n\n/**\n * Construct the roman numeral symbol for a chord\n * @param {String} key\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function formatNumeralSymbol(key = '', chord) {\n\tlet degree;\n\tlet symbol;\n\tlet type;\n\n\tif (!key) key = chord.normalized.rootNote;\n\n\tconst keyQuality = key.indexOf('m') > -1 ? 'minor' : 'major';\n\tconst thirdQuality = minorQualities.includes(chord.normalized.quality)\n\t\t? 'minor'\n\t\t: 'major';\n\n\tdegree = getRomanDegree(key, keyQuality, chord, thirdQuality);\n\n\tconst inversion = getInversion(chord);\n\tconst descriptor = qualityToDescriptor[chord.normalized.quality](\n\t\tchord,\n\t\tinversion\n\t);\n\n\tsymbol = `${degree}${descriptor}`;\n\n\tif (isDiatonic(keyQuality, symbol)) {\n\t\ttype = 'diatonic';\n\t} else if (isBorrowed(keyQuality, symbol)) {\n\t\ttype = 'borrowed';\n\t} else {\n\t\ttype = 'unknown';\n\t\tdegree = '?';\n\t\tsymbol = `${degree}${descriptor}`;\n\t}\n\n\tsymbol += inversion;\n\n\tchord.numeral = {\n\t\tsymbol,\n\t\tdegree,\n\t\tdescriptor,\n\t\tinversion,\n\t\ttype,\n\t\tthirdQuality,\n\t};\n\treturn chord;\n}\n\nfunction getRomanDegree(key, keyQuality, chord, thirdQuality) {\n\tconst keyNote = key.replace('m', '');\n\n\tconst interval = getIntervalBetweenNotes(\n\t\tkeyNote,\n\t\tchord.normalized.rootNote\n\t);\n\tconst romanDegree = semitonesToDegree[keyQuality][interval] || '?';\n\n\treturn thirdQuality === 'minor' ? romanDegree.toLowerCase() : romanDegree;\n}\n\nfunction getIntervalBetweenNotes(note1, note2) {\n\tconst note1Index = notesSharp.indexOf(flatsToSharps[note1] || note1);\n\tconst note2Index = notesSharp.indexOf(flatsToSharps[note2] || note2);\n\treturn (note2Index - note1Index + 12) % 12;\n}\n\nconst qualityToDescriptor = {\n\t[qualities.ma]: () => '',\n\t[qualities.ma6]: () => '',\n\t[qualities.ma7]: () => 'Δ',\n\t[qualities.dom7]: (chord, inversion) =>\n\t\tinversion === '' ? `${u.sup7}` : '',\n\n\t[qualities.mi]: () => '',\n\t[qualities.mi6]: () => '',\n\t[qualities.mi7]: (chord, inversion) => {\n\t\tif (chord.normalized.intervals.includes('b5')) {\n\t\t\treturn 'ø';\n\t\t} else {\n\t\t\treturn inversion === '' ? `${u.sup7}` : '';\n\t\t}\n\t},\n\t[qualities.miMa7]: () => 'mΔ',\n\n\t[qualities.aug]: () => '+',\n\t[qualities.dim]: () => '°',\n\t[qualities.dim7]: (chord, inversion) =>\n\t\tinversion === '' ? `°${u.sup7}` : '°',\n\n\t[qualities.power]: () => '',\n\t[qualities.bass]: () => '',\n};\n\nfunction isDiatonic(keyQuality, symbol) {\n\tif (keyQuality === 'major') {\n\t\treturn (\n\t\t\tdiatonicChords.major.includes(symbol) ||\n\t\t\tdiatonicChords.dom7.includes(symbol)\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\tdiatonicChords.minor.includes(symbol) ||\n\t\t\tdiatonicChords.minor7.includes(symbol)\n\t\t);\n\t}\n}\n\nfunction isBorrowed(keyQuality, symbol) {\n\tif (keyQuality === 'major') {\n\t\treturn (\n\t\t\tborrowedChords.borrowedFromMinor.includes(symbol) ||\n\t\t\tborrowedChords.borrowedFromMinor7.includes(symbol)\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\tborrowedChords.borrowedFromMajor.includes(symbol) ||\n\t\t\tborrowedChords.borrowedFromDom7.includes(symbol)\n\t\t);\n\t}\n}\n\nfunction getInversion(chord) {\n\tlet inversion = '';\n\tif (chord.normalized.bassNote) {\n\t\tif (bassIsThird(chord)) {\n\t\t\tinversion = isSeventh(chord) ? `${u.sup6}${u.sub5}` : `${u.sup6}`;\n\t\t} else if (bassIsFifth(chord)) {\n\t\t\tinversion = isSeventh(chord)\n\t\t\t\t? `${u.sup4}${u.sub3}`\n\t\t\t\t: `${u.sup6}${u.sub4}`;\n\t\t} else if (bassIsSeventh(chord)) {\n\t\t\tinversion = `²`;\n\t\t}\n\t}\n\treturn inversion;\n}\n\nfunction isSeventh(chord) {\n\treturn [\n\t\tqualities.ma7,\n\t\tqualities.mi7,\n\t\tqualities.miMa7,\n\t\tqualities.dom7,\n\t\tqualities.dim7,\n\t].includes(chord.normalized.quality);\n}\n\nfunction bassIsThird(chord) {\n\treturn bassIsIntervalNote(chord, 'b3') || bassIsIntervalNote(chord, '3');\n}\n\nfunction bassIsFifth(chord) {\n\treturn (\n\t\tbassIsIntervalNote(chord, 'b5') ||\n\t\tbassIsIntervalNote(chord, '5') ||\n\t\tbassIsIntervalNote(chord, '#5')\n\t);\n}\n\nfunction bassIsSeventh(chord) {\n\treturn (\n\t\tbassIsIntervalNote(chord, 'bb7') ||\n\t\tbassIsIntervalNote(chord, 'b7') ||\n\t\tbassIsIntervalNote(chord, '7')\n\t);\n}\n\nfunction bassIsIntervalNote(chord, interval) {\n\tconst intervalNoteIndex = chord.normalized.intervals.indexOf(interval);\n\tif (intervalNoteIndex === -1) return false;\n\n\tconst normalizedBassNote =\n\t\tflatsToSharps[chord.normalized.bassNote] || chord.normalized.bassNote;\n\tconst normalizedIntervalNote =\n\t\tflatsToSharps[chord.normalized.notes[intervalNoteIndex]] ||\n\t\tchord.normalized.notes[intervalNoteIndex];\n\n\treturn normalizedBassNote === normalizedIntervalNote;\n}\n","import chain from '../../helpers/chain';\n\n/**\n * Prepare whatever string has been identified as a descriptor so it is parsable by the next filter\n *\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function getParsableDescriptor(chord) {\n\tconst allFilters = [\n\t\ttoLowerCaseExceptMajorM,\n\t\tremoveSpaces,\n\t\taddDisambiguators,\n\t\taddMissingVerbs,\n\t];\n\n\tif (chord.input.descriptor) {\n\t\tchord.input.parsableDescriptor = chain(\n\t\t\tallFilters,\n\t\t\tchord.input.descriptor\n\t\t);\n\t}\n\treturn chord;\n}\n\nfunction toLowerCaseExceptMajorM(descriptor) {\n\treturn descriptor\n\t\t.replace(/[A-LN-Za-z]+/g, (match) => match.toLowerCase())\n\t\t.replace('oMit', 'omit')\n\t\t.replace('diM', 'dim')\n\t\t.replace('augMented', 'augmented');\n}\n\nfunction removeSpaces(descriptor) {\n\treturn descriptor.replace(/ /g, '');\n}\n\nfunction addDisambiguators(descriptor) {\n\treturn descriptor\n\t\t.replace(/(7?dim)(alt|add)/g, '$1 $2')\n\t\t.replace(/([m|M])(alt|add)/g, '$1 $2')\n\t\t.replace(/i(no[35])/g, 'i $1')\n\t\t.replace(/([b♭#♯]9)6/g, '$1 6')\n\t\t.replace(/(9\\/?6)/g, ' $1')\n\t\t.replaceAll('+5', '#5')\n\t\t.replaceAll('-5', 'b5');\n}\n\nfunction addMissingVerbs(descriptor) {\n\tlet allTokensWithVerbs;\n\tlet currentVerb;\n\tlet hasVerb;\n\n\treturn descriptor.replace(/\\((.*?)\\)/g, (match, parenthesis) => {\n\t\tallTokensWithVerbs = [];\n\t\tcurrentVerb = '';\n\n\t\tparenthesis.split(',').forEach((token) => {\n\t\t\thasVerb = true;\n\t\t\tif (token.startsWith('add')) {\n\t\t\t\tcurrentVerb = 'add';\n\t\t\t} else if (token.startsWith('omit')) {\n\t\t\t\tcurrentVerb = 'omit';\n\t\t\t} else if (token.startsWith('no')) {\n\t\t\t\tcurrentVerb = 'no';\n\t\t\t} else {\n\t\t\t\thasVerb = false;\n\t\t\t}\n\t\t\tif (hasVerb) {\n\t\t\t\tallTokensWithVerbs.push(token);\n\t\t\t} else {\n\t\t\t\tallTokensWithVerbs.push(currentVerb + token);\n\t\t\t}\n\t\t});\n\t\treturn ' ' + allTokensWithVerbs.join(' ') + ' ';\n\t});\n}\n","import _cloneDeep from 'lodash/cloneDeep';\n\n/**\n * @param {String} symbol\n * @param {Object} parserConfiguration\n * @returns {Chord}\n */\nexport default function initChord(parserConfiguration = {}, symbol) {\n\treturn {\n\t\tinput: {\n\t\t\tsymbol,\n\t\t},\n\t\tnormalized: {},\n\t\tformatted: {},\n\t\tparserConfiguration: _cloneDeep(parserConfiguration),\n\t};\n}\n","const scaleToAccidental = {\n\tC: 'flat',\n\tD: 'sharp',\n\tE: 'sharp',\n\tF: 'flat',\n\tG: 'sharp',\n\tA: 'sharp',\n\tB: 'sharp',\n\n\tCm: 'flat',\n\tDm: 'flat',\n\tEm: 'sharp',\n\tFm: 'flat',\n\tGm: 'flat',\n\tAm: 'flat',\n\tBm: 'sharp',\n};\n\nfunction getScaleAccidental(scale) {\n\tif (scale.indexOf('#') > -1) {\n\t\treturn 'sharp';\n\t} else if (scale.indexOf('b') > -1) {\n\t\treturn 'flat';\n\t} else return scaleToAccidental[scale];\n}\n\nexport { scaleToAccidental, getScaleAccidental };\n","import { minorQualities } from '../../dictionaries/qualities';\nimport { notesSharp, notesFlat } from '../../dictionaries/notes';\nimport { getScaleAccidental } from '../../dictionaries/scales';\n\n/**\n * Convert intervals in actual notes.\n *\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function nameIndividualChordNotes(chord) {\n\tconst rootNote = chord.normalized.rootNote;\n\tconst semitones = chord.normalized.semitones;\n\tconst quality = chord.normalized.quality;\n\n\tlet scale = rootNote;\n\tif (minorQualities.includes(quality)) {\n\t\tscale += 'm';\n\t}\n\tconst refNotes =\n\t\tgetScaleAccidental(scale) === 'sharp' ? notesSharp : notesFlat;\n\n\tconst rootNoteIndex = refNotes.indexOf(rootNote);\n\tconst indexedNotes = [\n\t\t...refNotes.slice(rootNoteIndex),\n\t\t...refNotes.slice(0, rootNoteIndex),\n\t\t// repeating...\n\t\t...refNotes.slice(rootNoteIndex),\n\t\t...refNotes.slice(0, rootNoteIndex),\n\t];\n\n\tchord.normalized.notes = semitones.map((i) => indexedNotes[i]);\n\n\treturn chord;\n}\n","import { allVariantsToNotes } from '../../dictionaries/notes';\n\n/**\n * Convert root/bass notes to English names\n *\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function normalizeNotes(chord) {\n\tchord.normalized.rootNote = allVariantsToNotes[chord.input.rootNote];\n\n\tif (chord.input.bassNote) {\n\t\tchord.normalized.bassNote = allVariantsToNotes[chord.input.bassNote];\n\t}\n\n\treturn chord;\n}\n","import _clone from 'lodash/clone';\nimport _find from 'lodash/find';\nimport _uniq from 'lodash/uniq';\nimport _without from 'lodash/without';\n\nimport chain from '../../helpers/chain';\n\nimport {\n\thasOneOf,\n\thasAll,\n\thasNoneOf,\n\thasExactly,\n} from '../../helpers/hasElement';\n\nimport { qualities } from '../../dictionaries/qualities';\n\n/**\n * Detect chord quality and changes (extensions, alterations, adds and omits)\n *\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function normalizeDescriptor(chord) {\n\tlet chordIntervals = _clone(chord.normalized.intervals);\n\n\tlet normalized = {\n\t\tquality: '',\n\t\tisSuspended: false,\n\t\textensions: [],\n\t\talterations: [],\n\t\tadds: [],\n\t\tomits: [],\n\t};\n\n\tif (isPowerChord(chordIntervals)) {\n\t\tnormalized.quality = qualities.power;\n\t} else if (isBass(chordIntervals)) {\n\t\tnormalized.quality = qualities.bass;\n\t} else {\n\t\tconst omits = getOmits(chordIntervals, chord.normalized.intents.major);\n\n\t\tconst isSuspended = getIsSuspended(\n\t\t\tchordIntervals,\n\t\t\tchord.normalized.intents.major\n\t\t);\n\n\t\tconst { qualityIntervals, quality } = getChordQuality(\n\t\t\tchordIntervals,\n\t\t\tchord,\n\t\t\tisSuspended,\n\t\t\tomits\n\t\t);\n\n\t\tconst extensions = getExtensions(chordIntervals, quality);\n\n\t\t// to be able to detect adds and alterations, we build the \"straight\" version of the chord,\n\t\t// ie. the chord as if no alterations/adds/omits where present.\n\t\t// we will compare this to the actual intervals later on\n\t\tconst baseIntervals = ['1', ...qualityIntervals, ...extensions];\n\n\t\tconst { adds, alterations } = getAddsAndAlterations(\n\t\t\tchordIntervals,\n\t\t\tbaseIntervals,\n\t\t\tquality\n\t\t);\n\n\t\tnormalized = {\n\t\t\t...normalized,\n\t\t\tquality,\n\t\t\tisSuspended,\n\t\t\textensions,\n\t\t\talterations,\n\t\t\tadds,\n\t\t\tomits,\n\t\t};\n\t}\n\n\treturn {\n\t\t...chord,\n\t\tnormalized: {\n\t\t\t...chord.normalized,\n\t\t\t...normalized,\n\t\t},\n\t};\n}\n\nfunction isPowerChord(intervals) {\n\treturn hasExactly(intervals, ['1', '5']);\n}\n\nfunction isBass(intervals) {\n\treturn hasExactly(intervals, ['1']);\n}\n\nfunction getIsSuspended(intervals, hasMajorIntent) {\n\treturn (\n\t\tintervals.includes('4') ||\n\t\t(intervals.includes('11') && hasMajorIntent && !intervals.includes('3'))\n\t);\n}\n\nfunction getOmits(intervals, hasMajorIntent) {\n\tconst omits = [];\n\n\tif (\n\t\thasNoneOf(intervals, ['b3', '3', '4', '11']) ||\n\t\t(!hasMajorIntent && hasNoneOf(intervals, ['b3', '4']))\n\t) {\n\t\tomits.push(hasMajorIntent ? '3' : 'b3');\n\t}\n\n\tif (hasNoneOf(intervals, ['b5', '5', '#5', 'b13'])) {\n\t\tomits.push('5');\n\t}\n\treturn omits;\n}\n\nfunction getChordQuality(allIntervals, chord, isSuspended, omits) {\n\tconst intervalsForQualityDetection = getIntervalsForQualityDetection(\n\t\tallIntervals,\n\t\tchord,\n\t\tisSuspended,\n\t\tomits\n\t);\n\n\tconst intervalsToQualities = [\n\t\t// !!! do not change order without a good reason\n\t\t{ qualityIntervals: ['b3'], quality: qualities.mi },\n\t\t{ qualityIntervals: ['b3', '6'], quality: qualities.mi6 },\n\t\t{ qualityIntervals: ['b3', '7'], quality: qualities.miMa7 },\n\t\t{ qualityIntervals: ['b3', 'b7'], quality: qualities.mi7 },\n\n\t\t{ qualityIntervals: ['3'], quality: qualities.ma },\n\t\t{ qualityIntervals: ['3', '6'], quality: qualities.ma6 },\n\t\t{ qualityIntervals: ['3', '7'], quality: qualities.ma7 },\n\t\t{ qualityIntervals: ['3', 'b7'], quality: qualities.dom7 },\n\n\t\t{ qualityIntervals: ['3', '#5'], quality: qualities.aug },\n\t\t{ qualityIntervals: ['b3', 'b5'], quality: qualities.dim },\n\t\t{ qualityIntervals: ['b3', 'b5', 'bb7'], quality: qualities.dim7 },\n\t].sort((a, b) => b.qualityIntervals.length - a.qualityIntervals.length);\n\n\treturn _find(intervalsToQualities, (o) =>\n\t\thasAll(intervalsForQualityDetection, o.qualityIntervals)\n\t);\n}\n\n// To properly detect the chord quality, we need a \"straight\" version of the chord,\n// meaning with a third interval (= un-suspended, no omit3)\nfunction getIntervalsForQualityDetection(\n\tallIntervals,\n\tchord,\n\tisSuspended,\n\tomits\n) {\n\tconst allFilters = [\n\t\tundoOmit3.bind(null, omits),\n\t\tundoSuspension.bind(null, isSuspended, chord.normalized.intents.major),\n\t\tundoAlt5.bind(null, chord.normalized.intents.alt),\n\t\t_uniq,\n\t];\n\n\treturn chain(allFilters, _clone(allIntervals));\n}\n\nfunction undoOmit3(omits, allIntervals) {\n\tconst with3rd = _clone(allIntervals);\n\n\tif (omits.includes('3')) {\n\t\twith3rd.push('3');\n\t} else if (omits.includes('b3')) {\n\t\twith3rd.push('b3');\n\t}\n\treturn with3rd;\n}\n\nfunction undoSuspension(isSuspended, hasMajorIntent, allIntervals) {\n\tif (isSuspended) {\n\t\tconst unSuspended = _without(allIntervals, '4');\n\t\tunSuspended.push(hasMajorIntent ? '3' : 'b3');\n\t\treturn unSuspended;\n\t}\n\treturn allIntervals;\n}\n\nfunction undoAlt5(isAlt, allIntervals) {\n\tif (isAlt) {\n\t\tconst unaltered = _without(allIntervals, 'b5', '#5');\n\t\tunaltered.push('5');\n\t\treturn unaltered;\n\t}\n\treturn allIntervals;\n}\n\nfunction getExtensions(allIntervals, quality) {\n\tconst extensions = [];\n\n\tif (canBeExtended(quality)) {\n\t\tif (isMinorExtended13th(allIntervals, quality)) {\n\t\t\textensions.push('9', '11', '13');\n\t\t} else if (isMajorExtended13th(allIntervals, quality)) {\n\t\t\textensions.push('9', '13');\n\t\t} else if (isExtended11th(allIntervals)) {\n\t\t\textensions.push('9', '11');\n\t\t} else if (isExtended9th(allIntervals)) {\n\t\t\textensions.push('9');\n\t\t}\n\t}\n\treturn extensions;\n}\n\nfunction canBeExtended(quality) {\n\treturn [\n\t\tqualities.ma7,\n\t\tqualities.dom7,\n\t\tqualities.mi7,\n\t\tqualities.miMa7,\n\t].includes(quality);\n}\n\nfunction canHave11th(quality) {\n\treturn [qualities.mi7, qualities.miMa7].includes(quality);\n}\n\nfunction isMinorExtended13th(allIntervals, quality) {\n\treturn (\n\t\tcanHave11th(quality) &&\n\t\thasOneOf(allIntervals, '13') &&\n\t\thasOneOf(allIntervals, ['11', '#11']) &&\n\t\thasOneOf(allIntervals, ['b9', '9', '#9'])\n\t);\n}\n\nfunction isMajorExtended13th(allIntervals, quality) {\n\treturn (\n\t\t!canHave11th(quality) &&\n\t\thasOneOf(allIntervals, '13') &&\n\t\thasOneOf(allIntervals, ['b9', '9', '#9'])\n\t);\n}\n\nfunction isExtended11th(allIntervals) {\n\treturn (\n\t\thasOneOf(allIntervals, '11') &&\n\t\thasOneOf(allIntervals, ['b9', '9', '#9'])\n\t);\n}\n\nfunction isExtended9th(allIntervals) {\n\treturn allIntervals.includes('9');\n}\n\nfunction getAddsAndAlterations(chordIntervals, baseIntervals, quality) {\n\tconst adds = [];\n\tconst alterations = [];\n\n\tchordIntervals\n\t\t.filter((interval) => interval !== '5' && interval !== '4')\n\t\t.forEach((interval) => {\n\t\t\tif (!baseIntervals.includes(interval)) {\n\t\t\t\tif (isAlteration(quality, interval)) {\n\t\t\t\t\talterations.push(interval);\n\t\t\t\t} else {\n\t\t\t\t\tadds.push(interval);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\tif (hasAdd3(chordIntervals)) {\n\t\tadds.push('3');\n\t}\n\n\treturn {\n\t\tadds: sortIntervals(adds),\n\t\talterations: sortIntervals(alterations),\n\t};\n}\n\nfunction isAlteration(quality, interval) {\n\tconst qualityAlterations = {\n\t\t[qualities.ma]: ['b5', '#5', '#11', 'b13'],\n\t\t[qualities.ma6]: ['b5', '#5', '#11', 'b13'],\n\t\t[qualities.ma7]: ['b5', '#5', '#11', 'b13'],\n\t\t[qualities.dom7]: ['b5', '#5', 'b9', '#9', '#11', 'b13'],\n\n\t\t[qualities.mi]: ['b5', '#5', '#11', 'b13'],\n\t\t[qualities.mi6]: ['b5', '#5', '#11', 'b13'],\n\t\t[qualities.mi7]: ['b5', '#5', '#11', 'b13'],\n\t\t[qualities.miMa7]: ['b5', '#5', '#11', 'b13'],\n\n\t\t[qualities.aug]: [],\n\t\t[qualities.dim]: [],\n\t\t[qualities.dim7]: [],\n\t};\n\n\treturn qualityAlterations[quality].includes(interval);\n}\n\nfunction hasAdd3(allIntervals) {\n\treturn hasAll(allIntervals, ['3', '4']);\n}\n\nfunction sortIntervals(intervals) {\n\treturn intervals.sort((a, b) => {\n\t\tconst sortableA = Number.parseInt(a.replace(/[b#]/, ''));\n\t\tconst sortableB = Number.parseInt(b.replace(/[b#]/, ''));\n\t\treturn sortableA - sortableB;\n\t});\n}\n","import { NoSymbolFoundError } from '../../helpers/ChordParsingError';\n\n/**\n * Split symbol in root/bass note and descriptor.\n * Returns null if the given string does not seems to be a chord.\n *\n * @param {String[]} noteVariants - all notes within a given notation system (English, Latin, German...)\n * @param {Chord} chord\n * @returns {(Chord|Null)}\n */\nexport default function parseBase(noteVariants, chord) {\n\tconst { symbol } = chord.input;\n\tconst notesRegex = noteVariants.join('|');\n\tconst notesAndDescriptorRegex = new RegExp(\n\t\t'^' +\n\t\t\t'(' +\n\t\t\tnotesRegex +\n\t\t\t')' +\n\t\t\t'(.*?)' +\n\t\t\t'(/(' +\n\t\t\tnotesRegex +\n\t\t\t'))?' +\n\t\t\t'$'\n\t);\n\tconst result = symbol.match(notesAndDescriptorRegex);\n\n\tif (result && result[1]) {\n\t\tchord.input.rootNote = result[1];\n\n\t\tif (result[2]) {\n\t\t\tchord.input.descriptor = result[2];\n\t\t}\n\t\tif (result[4]) {\n\t\t\tchord.input.bassNote = result[4];\n\t\t}\n\t\treturn chord;\n\t} else {\n\t\tthrow new NoSymbolFoundError(chord);\n\t}\n}\n","const allModifiers = {\n\t// base\n\tma: 'ma',\n\tmi: 'mi',\n\tdim: 'dim',\n\thalfDim: 'halfDim',\n\taug: 'aug',\n\tseventh: 'seventh',\n\n\t// suspended\n\tsus: 'sus',\n\tsus2: 'sus2',\n\n\t// extensions\n\tninth: 'ninth',\n\televenth: 'eleventh',\n\tthirteenth: 'thirteenth',\n\n\t// alterations\n\tfifthFlat: 'b5',\n\tfifthSharp: '#5',\n\tninthFlat: 'b9',\n\tninthSharp: '#9',\n\televenthSharp: '#11',\n\tthirteenthFlat: 'b13',\n\n\t// added\n\tadd3: 'add3',\n\tadd4: 'add4',\n\taddb6: 'addb6',\n\tadd6: 'add6',\n\tadd69: 'add69',\n\tadd7: 'add7',\n\tadd9: 'add9',\n\tadd11: 'add11',\n\tadd13: 'add13',\n\n\t// special\n\tbass: 'bass',\n\tomit3: 'omit3',\n\tomit5: 'omit5',\n\tpower: 'power',\n\talt: 'alt',\n};\n\n/**\n * WARNING: when adding new modifiers symbols, be careful of possible edge cases that might arise with some combinations.\n * For example, without edge case handling, \"madd9\" would be parsed as \"ma\" instead of \"m\"+\"add9\"\n */\n\nconst major = {\n\t'^': [allModifiers.ma, allModifiers.add7],\n\tΔ: [allModifiers.ma, allModifiers.add7],\n\tM: allModifiers.ma,\n\tMa: allModifiers.ma,\n\tMaj: allModifiers.ma,\n\tMajor: allModifiers.ma,\n\tma: allModifiers.ma,\n\tmaj: allModifiers.ma,\n\tmajor: allModifiers.ma,\n};\n\nconst major7th = getDerivedModifiers(\n\tmajor,\n\tallModifiers.add7,\n\t(symbol) => symbol + '7'\n);\nconst add7 = getDerivedModifiers(\n\tmajor,\n\tallModifiers.add7,\n\t(symbol) => 'add' + symbol + '7'\n);\n\nconst allSymbols = {\n\t// major\n\t...major,\n\t...major7th,\n\n\t// minor\n\t'-': allModifiers.mi,\n\tm: allModifiers.mi,\n\tMi: allModifiers.mi,\n\tMin: allModifiers.mi,\n\tMinor: allModifiers.mi,\n\tmi: allModifiers.mi,\n\tmin: allModifiers.mi,\n\tminor: allModifiers.mi,\n\n\t// diminished / augmented\n\t'°': allModifiers.dim,\n\to: allModifiers.dim,\n\t0: allModifiers.dim,\n\tdim: allModifiers.dim,\n\t'dim.': allModifiers.dim,\n\tdiminished: allModifiers.dim,\n\n\tØ: allModifiers.halfDim,\n\tø: allModifiers.halfDim,\n\th: allModifiers.halfDim,\n\n\t'+': allModifiers.aug,\n\taug: allModifiers.aug,\n\taugmented: allModifiers.aug,\n\n\t// seventh\n\t7: allModifiers.seventh,\n\n\t// suspended\n\t4: allModifiers.sus,\n\tsus: allModifiers.sus,\n\tsus4: allModifiers.sus,\n\tsuspended: allModifiers.sus,\n\tsuspended4: allModifiers.sus,\n\tsus2: allModifiers.sus2,\n\tsuspended2: allModifiers.sus2,\n\n\t// extensions\n\t9: allModifiers.ninth,\n\t11: allModifiers.eleventh,\n\t13: allModifiers.thirteenth,\n\n\t// alterations\n\tb3: allModifiers.mi,\n\tb5: allModifiers.fifthFlat,\n\t'♭5': allModifiers.fifthFlat,\n\t'#5': allModifiers.fifthSharp,\n\t'♯5': allModifiers.fifthSharp,\n\tb9: allModifiers.ninthFlat,\n\t'♭9': allModifiers.ninthFlat,\n\taddb9: allModifiers.ninthFlat,\n\t'add♭9': allModifiers.ninthFlat,\n\t'#9': allModifiers.ninthSharp,\n\t'♯9': allModifiers.ninthSharp,\n\t'add#9': allModifiers.ninthSharp,\n\t'add♯9': allModifiers.ninthSharp,\n\t'#11': allModifiers.eleventhSharp,\n\t'♯11': allModifiers.eleventhSharp,\n\t'add#11': allModifiers.eleventhSharp,\n\tb13: allModifiers.thirteenthFlat,\n\t'♭13': allModifiers.thirteenthFlat,\n\taddb13: allModifiers.thirteenthFlat,\n\t'add♭13': allModifiers.thirteenthFlat,\n\n\t// added\n\t...add7,\n\t2: allModifiers.add9,\n\tadd2: allModifiers.add9,\n\tadd3: allModifiers.add3,\n\tadd4: allModifiers.add4,\n\taddb6: allModifiers.addb6,\n\tb6: allModifiers.addb6,\n\t6: allModifiers.add6,\n\tadd6: allModifiers.add6,\n\t'6/9': allModifiers.add69,\n\t69: allModifiers.add69,\n\t96: allModifiers.add69,\n\t'9/6': allModifiers.add69,\n\tadd9: allModifiers.add9,\n\tadd11: allModifiers.add11,\n\tadd13: allModifiers.add13,\n\n\t// special\n\tbass: allModifiers.bass,\n\tomit3: allModifiers.omit3,\n\tno3: allModifiers.omit3,\n\tomit5: allModifiers.omit5,\n\tno5: allModifiers.omit5,\n\t5: allModifiers.power,\n\talt: allModifiers.alt,\n\t'alt.': allModifiers.alt,\n\taltered: allModifiers.alt,\n};\n\nfunction getDerivedModifiers(source, modifierId, derivedFn) {\n\treturn Object.keys(source)\n\t\t.map(derivedFn)\n\t\t.reduce((acc, curr) => {\n\t\t\tacc[curr] = modifierId;\n\t\t\treturn acc;\n\t\t}, {});\n}\n\nconst allVariants = Object.keys(allSymbols).sort((a, b) => b.length - a.length);\n\nexport { allSymbols, allVariants };\nexport default allModifiers;\n","export default {\n\t1: 0,\n\t2: 2,\n\tb3: 3,\n\t3: 4,\n\t4: 5,\n\tb5: 6,\n\t5: 7,\n\t'#5': 8,\n\tb6: 8,\n\t6: 9,\n\tbb7: 9,\n\tb7: 10,\n\t7: 11,\n\tb9: 13,\n\t9: 14,\n\t'#9': 15,\n\t11: 17,\n\t'#11': 18,\n\tb13: 20,\n\t13: 21,\n};\n","import _uniq from 'lodash/uniq';\nimport {\n\tInvalidModifierError,\n\tNoSymbolFoundError,\n} from '../../helpers/ChordParsingError';\n\nimport m from '../../dictionaries/modifiers';\nimport { allSymbols, allVariants } from '../../dictionaries/modifiers';\nimport intervalsToSemitones from '../../dictionaries/intervalsToSemitones';\nimport { hasNoneOf, hasOneOf } from '../../helpers/hasElement';\n\n/**\n * Convert the descriptor into a suite of intervals, semitones and intents\n *\n * @param {Array<('b5'|'#5'|'b9'|'#9'|'#11'|'b13')>} altIntervals\n * @param {Chord} chord\n * @returns {(Chord|Null)}\n */\nexport default function parseDescriptor(altIntervals, chord) {\n\tlet allModifiers = [];\n\n\tif (chord.input.parsableDescriptor) {\n\t\tallModifiers = getModifiers(chord);\n\t}\n\n\tchord.input.modifiers = allModifiers;\n\tchord.normalized.intervals = getIntervals(allModifiers, altIntervals);\n\tchord.normalized.semitones = getSemitones(chord.normalized.intervals);\n\tchord.normalized.intents = getIntents(allModifiers);\n\n\treturn chord;\n}\n\nfunction getModifiers(chord) {\n\tconst { parsableDescriptor } = chord.input;\n\tconst modifiers = [];\n\n\tconst descriptorRegex = new RegExp(\n\t\tallVariants.map(escapeRegex).join('|'),\n\t\t'g'\n\t);\n\tconst descriptorMatches = parsableDescriptor.match(descriptorRegex);\n\n\tlet remainingChars = parsableDescriptor;\n\tlet allModifiersId;\n\n\tif (descriptorMatches) {\n\t\tdescriptorMatches.forEach((match) => {\n\t\t\tallModifiersId = allSymbols[match];\n\n\t\t\tif (!Array.isArray(allModifiersId)) {\n\t\t\t\tallModifiersId = [allModifiersId];\n\t\t\t}\n\n\t\t\tallModifiersId.forEach((modifierId) => {\n\t\t\t\tif (modifiers.includes(modifierId)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tmodifiers.push(modifierId);\n\n\t\t\t\tremainingChars = remainingChars.replace(match, '');\n\t\t\t});\n\t\t});\n\t}\n\n\tif (modifiers.length === 0) {\n\t\tthrow new NoSymbolFoundError(chord);\n\t}\n\tif (remainingChars.trim().length > 0) {\n\t\tthrow new InvalidModifierError(chord, remainingChars);\n\t}\n\n\treturn modifiers;\n}\n\nfunction getIntervals(allModifiers, altIntervals) {\n\tif (allModifiers.includes(m.power)) {\n\t\treturn ['1', '5'];\n\t} else if (allModifiers.includes(m.bass)) {\n\t\treturn ['1'];\n\t}\n\n\treturn _uniq([\n\t\t'1',\n\t\t...getThird(allModifiers),\n\t\t...getFourth(allModifiers),\n\t\t...getFifths(allModifiers, altIntervals),\n\t\t...getSixth(allModifiers),\n\t\t...getSevenths(allModifiers),\n\t\t...getNinths(allModifiers, altIntervals),\n\t\t...getElevenths(allModifiers, altIntervals),\n\t\t...getThirteenths(allModifiers, altIntervals),\n\t]).sort((a, b) => intervalsToSemitones[a] - intervalsToSemitones[b]);\n}\n\nfunction getThird(allModifiers) {\n\tconst third = [];\n\tif (allModifiers.includes(m.omit3)) {\n\t\treturn [];\n\t}\n\tif (!hasOneOf(allModifiers, [m.sus, m.sus2])) {\n\t\tif (!hasMajorIntent(allModifiers)) {\n\t\t\tthird.push('b3');\n\t\t} else if (!allModifiers.includes(m.eleventh)) {\n\t\t\tthird.push('3');\n\t\t}\n\t}\n\tif (allModifiers.includes(m.add3)) {\n\t\tthird.push('3');\n\t}\n\treturn third;\n}\n\nfunction getFourth(allModifiers) {\n\tconst fourth = [];\n\tif (hasOneOf(allModifiers, [m.sus, m.add4])) {\n\t\tfourth.push('4');\n\t}\n\treturn fourth;\n}\n\nfunction getFifths(allModifiers, altIntervals) {\n\tconst fifths = [];\n\tif (allModifiers.includes(m.omit5)) {\n\t\treturn [];\n\t}\n\tif (\n\t\thasOneOf(allModifiers, [m.dim, m.halfDim, m.fifthFlat]) ||\n\t\tshouldAlter(allModifiers, altIntervals, 'b5')\n\t) {\n\t\tfifths.push('b5');\n\t}\n\tif (\n\t\thasOneOf(allModifiers, [m.aug, m.fifthSharp]) ||\n\t\tshouldAlter(allModifiers, altIntervals, '#5')\n\t) {\n\t\tfifths.push('#5');\n\t}\n\tif (!fifths.length && !allModifiers.includes(m.thirteenthFlat)) {\n\t\tfifths.push('5');\n\t}\n\treturn fifths;\n}\n\nfunction getSixth(allModifiers) {\n\tconst sixth = [];\n\tif (hasOneOf(allModifiers, [m.addb6])) {\n\t\tsixth.push('b6');\n\t}\n\tif (\n\t\thasOneOf(allModifiers, [m.add6, m.add69]) &&\n\t\t!isExtended(allModifiers) &&\n\t\t!hasOneOf(allModifiers, [m.halfDim])\n\t) {\n\t\tsixth.push('6');\n\t}\n\treturn sixth;\n}\n\nfunction getSevenths(allModifiers) {\n\tconst sevenths = [];\n\tif (hasOneOf(allModifiers, [m.alt])) {\n\t\tsevenths.push('b7');\n\t}\n\tif (hasOneOf(allModifiers, [m.seventh, m.halfDim])) {\n\t\tif (allModifiers.includes(m.dim)) {\n\t\t\tsevenths.push('bb7');\n\t\t} else if (allModifiers.includes(m.halfDim)) {\n\t\t\tsevenths.push('b7');\n\t\t} else {\n\t\t\tsevenths.push(getMinorOrMajorSeventh(allModifiers));\n\t\t}\n\t} else if (hasOneOf(allModifiers, [m.ninth, m.eleventh, m.thirteenth])) {\n\t\tsevenths.push(getMinorOrMajorSeventh(allModifiers));\n\t}\n\tif (allModifiers.includes(m.add7)) {\n\t\tsevenths.push('7');\n\t}\n\treturn sevenths;\n}\n\nfunction getMinorOrMajorSeventh(allModifiers) {\n\treturn allModifiers.includes(m.ma) ? '7' : 'b7';\n}\n\nfunction getNinths(allModifiers, altIntervals) {\n\tconst ninth = [];\n\tif (\n\t\thasOneOf(allModifiers, [m.add69, m.ninth, m.eleventh, m.thirteenth]) &&\n\t\thasNoneOf(allModifiers, [m.ninthFlat, m.ninthSharp])\n\t) {\n\t\tninth.push('9');\n\t}\n\tif (hasOneOf(allModifiers, [m.sus2, m.add9])) {\n\t\tninth.push('9');\n\t}\n\tif (\n\t\thasOneOf(allModifiers, [m.ninthFlat]) ||\n\t\tshouldAlter(allModifiers, altIntervals, 'b9')\n\t) {\n\t\tninth.push('b9');\n\t}\n\tif (\n\t\thasOneOf(allModifiers, [m.ninthSharp]) ||\n\t\tshouldAlter(allModifiers, altIntervals, '#9')\n\t) {\n\t\tninth.push('#9');\n\t}\n\treturn ninth;\n}\n\nfunction getElevenths(allModifiers, altIntervals) {\n\tconst elevenths = [];\n\tif (\n\t\thasOneOf(allModifiers, [m.thirteenth]) &&\n\t\t!hasMajorIntent(allModifiers)\n\t) {\n\t\televenths.push('11');\n\t} else if (hasOneOf(allModifiers, [m.eleventh, m.add11])) {\n\t\televenths.push('11');\n\t}\n\tif (\n\t\thasOneOf(allModifiers, [m.eleventhSharp]) ||\n\t\tshouldAlter(allModifiers, altIntervals, '#11')\n\t) {\n\t\televenths.push('#11');\n\t}\n\treturn elevenths;\n}\n\nfunction getThirteenths(allModifiers, altIntervals) {\n\tconst thirteenths = [];\n\tif (\n\t\thasOneOf(allModifiers, [m.add13, m.thirteenth]) ||\n\t\t(hasOneOf(allModifiers, [m.add6, m.add69]) &&\n\t\t\tisExtended(allModifiers)) ||\n\t\t(hasOneOf(allModifiers, [m.add6, m.add69]) &&\n\t\t\thasOneOf(allModifiers, [m.halfDim]))\n\t) {\n\t\tthirteenths.push('13');\n\t}\n\tif (\n\t\thasOneOf(allModifiers, [m.thirteenthFlat]) ||\n\t\tshouldAlter(allModifiers, altIntervals, 'b13')\n\t) {\n\t\tthirteenths.push('b13');\n\t}\n\treturn thirteenths;\n}\n\nfunction shouldAlter(allModifiers, altIntervals, interval) {\n\treturn allModifiers.includes(m.alt) && altIntervals.includes(interval);\n}\n\nfunction hasMajorIntent(allModifiers) {\n\treturn hasNoneOf(allModifiers, [m.mi, m.dim, m.dim7, m.halfDim]);\n}\n\nfunction isExtended(allModifiers) {\n\treturn hasOneOf(allModifiers, [\n\t\tm.seventh,\n\t\tm.ninth,\n\t\tm.eleventh,\n\t\tm.thirteenth,\n\t]);\n}\n\n// Based on https://stackoverflow.com/a/6969486\nfunction escapeRegex(string) {\n\treturn string.replace(/[.\\-*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSemitones(allIntervals) {\n\treturn allIntervals\n\t\t.map((interval) => intervalsToSemitones[interval])\n\t\t.sort((a, b) => a - b);\n}\n\n// intents will be used later at formatting for disambiguation of some potentially confusing cases\nfunction getIntents(allModifiers) {\n\treturn {\n\t\tmajor: hasMajorIntent(allModifiers),\n\t\televenth: allModifiers.includes(m.eleventh),\n\t\talt: allModifiers.includes(m.alt),\n\t};\n}\n","import chain from '../helpers/chain';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isString from 'lodash/isString';\nimport checkCustomFilters from '../helpers/checkCustomFilters';\n\nimport { allVariantsPerGroup } from '../dictionaries/notes';\nimport { allKeys } from '../dictionaries/allKeys';\n\nimport {\n\tInvalidInputError,\n\tUnexpectedError,\n} from '../helpers/ChordParsingError';\n\nimport checkIntervalsConsistency from './filters/checkIntervalsConsistency';\nimport formatSymbol from './filters/formatSymbol';\nimport formatSymbolParts from './filters/formatSymbolParts';\nimport formatNumeralSymbol from './filters/formatNumeralSymbol';\nimport getParsableDescriptor from './filters/getParsableDescriptor';\nimport initChord from './filters/initChord';\nimport nameIndividualChordNotes from './filters/nameIndividualChordNotes';\nimport normalizeNotes from './filters/normalizeNotes';\nimport normalizeDescriptor from './filters/normalizeDescriptor';\nimport parseBase from './filters/parseBase';\nimport parseDescriptor from './filters/parseDescriptor';\n\n/**\n * Create a chord parser function\n * @param {ParserConfiguration} [parserConfiguration]\n * @returns {function(String): MaybeChord}\n */\nfunction chordParserFactory(parserConfiguration = {}) {\n\tconst allAltIntervals = ['b5', '#5', 'b9', '#9', '#11', 'b13'];\n\tconst allNotationSystems = ['english', 'german', 'latin'];\n\n\tconst {\n\t\tnotationSystems = _cloneDeep(allNotationSystems),\n\t\taltIntervals = _cloneDeep(allAltIntervals),\n\t\tcustomFilters = [],\n\t\tkey = '',\n\t} = parserConfiguration;\n\n\tcheckAltIntervals(altIntervals, allAltIntervals);\n\tcheckNotationSystems(notationSystems, allNotationSystems);\n\tcheckCustomFilters(customFilters);\n\tcheckKey(key);\n\n\treturn parseChord;\n\n\t/**\n\t * Convert an input string into an abstract chord structure\n\t * @param {String} symbol - the chord symbol candidate\n\t * @returns {MaybeChord} A chord data object if the given string is successfully parsed.\n\t *   A chord parse failure object with an `error` property otherwise.\n\t */\n\tfunction parseChord(symbol) {\n\t\tconst allErrors = [];\n\n\t\tif (!isInputValid(symbol)) {\n\t\t\tconst e = new InvalidInputError();\n\t\t\tallErrors.push(formatError(e));\n\t\t}\n\n\t\tconst allVariantsPerGroupCopy = _cloneDeep(allVariantsPerGroup).filter(\n\t\t\t(variantsGroup) => notationSystems.includes(variantsGroup.name)\n\t\t);\n\n\t\tlet chord;\n\t\tlet allFilters;\n\t\tlet variants;\n\n\t\tif (!allErrors.length) {\n\t\t\twhile (allVariantsPerGroupCopy.length && !chord) {\n\t\t\t\tvariants = allVariantsPerGroupCopy.shift();\n\n\t\t\t\tallFilters = [\n\t\t\t\t\tinitChord.bind(null, parserConfiguration),\n\t\t\t\t\tparseBase.bind(null, variants.notes),\n\t\t\t\t\tgetParsableDescriptor,\n\t\t\t\t\tparseDescriptor.bind(null, altIntervals),\n\t\t\t\t\tcheckIntervalsConsistency,\n\t\t\t\t\tnormalizeNotes,\n\t\t\t\t\tnormalizeDescriptor,\n\t\t\t\t\tformatSymbolParts,\n\t\t\t\t\tformatSymbol,\n\t\t\t\t\tnameIndividualChordNotes,\n\t\t\t\t\tformatNumeralSymbol.bind(null, key),\n\t\t\t\t\t...customFilters,\n\t\t\t\t];\n\n\t\t\t\ttry {\n\t\t\t\t\tchord = chain(allFilters, symbol);\n\t\t\t\t\tif (chord) {\n\t\t\t\t\t\tchord.input.notationSystem = variants.name;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallErrors.push(getUnexpectedError(variants.name));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tallErrors.push(formatError(e, variants.name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn chord ? chord : { error: allErrors };\n\t}\n}\n\nfunction checkAltIntervals(altIntervals, allAltIntervals) {\n\tcheckArray('altIntervals', altIntervals, allAltIntervals, true);\n}\n\nfunction checkNotationSystems(notationSystems, allNotationSystems) {\n\tcheckArray('notationSystems', notationSystems, allNotationSystems);\n}\n\nfunction checkArray(arrayName, arrayToTest, allowedValues, allowEmpty) {\n\tif (!Array.isArray(arrayToTest)) {\n\t\tthrow new TypeError(`'${arrayName}' should be an array`);\n\t}\n\tif (!allowEmpty && arrayToTest.length === 0) {\n\t\tthrow new TypeError(`'${arrayName}' cannot be empty`);\n\t}\n\tarrayToTest.forEach((system) => {\n\t\tif (!allowedValues.includes(system)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t`'${system}' is not a valid value for ${arrayName}`\n\t\t\t);\n\t\t}\n\t});\n}\n\nfunction checkKey(key) {\n\tif (key !== '' && (!_isString(key) || !allKeys.includes(key))) {\n\t\tthrow new TypeError(`'${key}' is not a valid value for key`);\n\t}\n}\n\nfunction isInputValid(input) {\n\treturn typeof input === 'string' && input.length > 0;\n}\n\nfunction getUnexpectedError(notationSystem) {\n\tconst error = new UnexpectedError();\n\treturn formatError(error, notationSystem);\n}\n\nfunction formatError(exceptionError, notationSystem) {\n\treturn {\n\t\ttype: exceptionError.name,\n\t\tchord: exceptionError.chord,\n\t\tmessage: exceptionError.message,\n\t\tnotationSystem,\n\t};\n}\n\n/**\n * @module chordParserFactory\n * Expose the chordParserFactory() function\n */\nexport default chordParserFactory;\n","import { hasExactly } from '../../helpers/hasElement';\n\nconst shortDescriptors = {\n\tsus2: 'sus2',\n\tadd2: '2',\n\tomit: 'no',\n\tma: 'M',\n\tmi: 'm',\n\tdim: '°',\n\taug7: '7+',\n\televenth: '11',\n};\n\n/**\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function shortenNormalized(chord) {\n\tlet descriptor;\n\tlet chordChanges = chord.formatted.chordChanges;\n\n\tif (isSus2(chord)) {\n\t\tdescriptor = shortDescriptors.sus2;\n\t\tchordChanges = [];\n\t} else if (isAdd2(chord)) {\n\t\tdescriptor = shortDescriptors.add2;\n\t\tchordChanges = [];\n\t} else if (isAug7(chord)) {\n\t\tdescriptor = shortDescriptors.aug7;\n\t\tchordChanges = [];\n\t} else {\n\t\tdescriptor = chord.formatted.descriptor\n\t\t\t.replace('mi', shortDescriptors.mi)\n\t\t\t.replace(/[m|M]a/, shortDescriptors.ma)\n\t\t\t.replace('dim', shortDescriptors.dim);\n\n\t\tif (isEleventh(chord)) {\n\t\t\tdescriptor = descriptor.replace(\n\t\t\t\t/7sus|9sus/,\n\t\t\t\tshortDescriptors.eleventh\n\t\t\t);\n\t\t}\n\t}\n\n\tchordChanges = chordChanges.map((change) => {\n\t\treturn change\n\t\t\t.replace(/[m|M]a/, shortDescriptors.ma)\n\t\t\t.replace('omit', shortDescriptors.omit);\n\t});\n\n\treturn {\n\t\t...chord,\n\t\tformatted: {\n\t\t\t...chord.formatted,\n\t\t\tdescriptor,\n\t\t\tchordChanges,\n\t\t},\n\t};\n}\n\nfunction isSus2(chord) {\n\treturn hasExactly(chord.normalized.intervals, ['1', '5', '9']);\n}\n\nfunction isAdd2(chord) {\n\treturn hasExactly(chord.normalized.intervals, ['1', '3', '5', '9']);\n}\n\nfunction isAug7(chord) {\n\treturn hasExactly(chord.normalized.intervals, ['1', '3', '#5', 'b7']);\n}\n\nfunction isEleventh(chord) {\n\treturn chord.normalized.intents.eleventh;\n}\n","import _difference from 'lodash/difference';\n\nimport chain from '../../helpers/chain';\n\nimport normalizeDescriptor from '../../parser/filters/normalizeDescriptor';\nimport formatSymbolParts from '../../parser/filters/formatSymbolParts';\nimport nameIndividualChordNotes from '../../parser/filters/nameIndividualChordNotes';\nimport intervalsToSemitones from '../../dictionaries/intervalsToSemitones';\n\nimport { hasNoneOf } from '../../helpers/hasElement';\n\n/**\n * @param {Chord} chord\n * @param {('none'|'max'|'core')} level\n * @returns {Chord}\n */\nexport default function simplify(level = 'none', chord) {\n\tif (level === 'none') {\n\t\treturn chord;\n\t}\n\n\tconst intervalsToRemove = {\n\t\tmax: [\n\t\t\t'4',\n\t\t\t'b5',\n\t\t\t'#5',\n\t\t\t'6',\n\t\t\t'bb7',\n\t\t\t'b7',\n\t\t\t'7',\n\t\t\t'b9',\n\t\t\t'9',\n\t\t\t'#9',\n\t\t\t'11',\n\t\t\t'#11',\n\t\t\t'b13',\n\t\t\t'13',\n\t\t],\n\t\tcore: ['4', 'b9', '9', '#9', '11', '#11', 'b13', '13'],\n\t};\n\n\tconst intervals = _difference(\n\t\tchord.normalized.intervals,\n\t\tintervalsToRemove[level]\n\t);\n\n\tif (hasNoneOf(intervals, ['b3', '3'])) {\n\t\tintervals.push(chord.normalized.intents.major ? '3' : 'b3');\n\t}\n\n\tif (hasNoneOf(intervals, ['b5', '5', '#5'])) {\n\t\tintervals.push('5');\n\t}\n\n\tchord.normalized.intervals = intervals;\n\tchord.normalized.semitones = intervals.map(\n\t\t(interval) => intervalsToSemitones[interval]\n\t);\n\tchord.normalized.intents.eleventh = false;\n\tchord.normalized.intents.alt = false;\n\n\tif (level === 'max') {\n\t\tdelete chord.normalized.bassNote;\n\t}\n\n\tconst allFilters = [\n\t\tnormalizeDescriptor,\n\t\tformatSymbolParts,\n\t\tnameIndividualChordNotes,\n\t];\n\n\treturn chain(allFilters, chord);\n}\n","import {\n\tnotesSharp,\n\tsharpsToFlats,\n\tflatsToSharps,\n} from '../../dictionaries/notes';\n\nimport nameIndividualChordNotes from '../../parser/filters/nameIndividualChordNotes';\n\nexport default function transpose(transposeValue, accidental, chord) {\n\tconst { rootNote, bassNote } = chord.normalized;\n\n\tconst rootSharp = convertToSharp(rootNote);\n\tchord.normalized.rootNote = transposeNote(\n\t\trootSharp,\n\t\ttransposeValue,\n\t\taccidental\n\t);\n\tchord.formatted.rootNote = chord.normalized.rootNote;\n\n\tif (bassNote) {\n\t\tconst bassSharp = convertToSharp(bassNote);\n\t\tchord.normalized.bassNote = transposeNote(\n\t\t\tbassSharp,\n\t\t\ttransposeValue,\n\t\t\taccidental\n\t\t);\n\t\tchord.formatted.bassNote = chord.normalized.bassNote;\n\t}\n\n\treturn nameIndividualChordNotes(chord);\n}\n\nfunction transposeNote(note, value, accidental) {\n\tconst noteIndex = notesSharp.indexOf(note);\n\tconst transposedIndex = noteIndex + value;\n\n\tconst octaves = Math.floor(transposedIndex / 12);\n\tconst correctedTransposedIndex = transposedIndex - octaves * 12;\n\n\tconst transposed = notesSharp[correctedTransposedIndex];\n\n\treturn accidental === 'flat'\n\t\t? sharpsToFlats[transposed] || transposed\n\t\t: transposed;\n}\n\nfunction convertToSharp(note) {\n\treturn flatsToSharps[note] || note;\n}\n","const translationTables = {\n\tgerman: {\n\t\tAb: 'As',\n\t\tA: 'A',\n\t\t'A#': 'Ais',\n\t\tBb: 'Hes',\n\t\tB: 'H',\n\t\tC: 'C',\n\t\t'C#': 'Cis',\n\t\tDb: 'Des',\n\t\tD: 'D',\n\t\t'D#': 'Dis',\n\t\tEb: 'Es',\n\t\tE: 'E',\n\t\tF: 'F',\n\t\t'F#': 'Fis',\n\t\tGb: 'Ges',\n\t\tG: 'G',\n\t\t'G#': 'Gis',\n\t},\n\tlatin: {\n\t\tAb: 'Lab',\n\t\tA: 'La',\n\t\t'A#': 'La#',\n\t\tBb: 'Sib',\n\t\tB: 'Si',\n\t\tC: 'Do',\n\t\t'C#': 'Do#',\n\t\tDb: 'Reb',\n\t\tD: 'Re',\n\t\t'D#': 'Re#',\n\t\tEb: 'Mib',\n\t\tE: 'Mi',\n\t\tF: 'Fa',\n\t\t'F#': 'Fa#',\n\t\tGb: 'Solb',\n\t\tG: 'Sol',\n\t\t'G#': 'Sol#',\n\t},\n};\nconst allNotationSystems = Object.keys(translationTables);\n\n/**\n * @param {('auto'|'english'|'german'|'latin')} notationSystem\n * @param {Chord} chord\n * @returns {Chord|Null}\n */\nexport default function convertNotationSystem(\n\tnotationSystem = 'english',\n\tchord\n) {\n\tconst finalNotationSystem =\n\t\tnotationSystem === 'auto' ? chord.input.notationSystem : notationSystem;\n\n\tif (finalNotationSystem === 'english') return chord;\n\tif (!allNotationSystems.includes(finalNotationSystem)) return null;\n\n\tchord.formatted.rootNote =\n\t\ttranslationTables[finalNotationSystem][chord.formatted.rootNote];\n\n\tif (chord.formatted.bassNote) {\n\t\tchord.formatted.bassNote =\n\t\t\ttranslationTables[finalNotationSystem][chord.formatted.bassNote];\n\t}\n\treturn chord;\n}\n","/**\n * @param {Chord} chord\n * @returns {String}\n */\nexport default function textPrinter(chord) {\n\treturn chord && chord.formatted && chord.formatted.symbol\n\t\t? chord.formatted.symbol\n\t\t: null;\n}\n","import _cloneDeep from 'lodash/cloneDeep';\n\nimport textPrinter from './text';\nimport chordParserFactory from '../../parser/chordParserFactory';\n\n/**\n * This printer returns a `chord` object reflecting the applied rendering filters. This object is very close to what would\n * be obtained by re-parsing the rendered chord.\n * It is basically the `chord` object in its current state, with 2 differences:\n * - a re-built `input` property to include all the changes applied during rendering (transposition, simplification, etc.)\n * - a removed `notationSystems` parser configuration since it may not be relevant anymore, especially if the rendering changed the notation system\n *\n * @param {Chord} chord\n * @returns {Chord}\n */\nexport default function rawPrinter(chord) {\n\t// make sure the chord can be re-parsed, whichever notation system was used for the rendering\n\tdelete chord.parserConfiguration.notationSystems;\n\n\tconst cloned = _cloneDeep(chord);\n\n\t// Re-parse the rendered chord to get the 'input' property right\n\tconst textPrinted = textPrinter(chord);\n\tconst parseChord = chordParserFactory(chord.parserConfiguration);\n\tconst reParsed = parseChord(textPrinted);\n\tcloned.input = reParsed.input;\n\n\treturn cloned;\n}\n","import _cloneDeep from 'lodash/cloneDeep';\n\nimport chain from '../helpers/chain';\nimport checkCustomFilters from '../helpers/checkCustomFilters';\n\nimport shortenNormalized from './filters/shortenNormalized';\nimport simplifyFilter from './filters/simplify';\nimport transpose from './filters/transpose';\nimport convertNotationSystem from './filters/convertNotationSystem';\nimport formatSymbol from '../parser/filters/formatSymbol';\nimport textPrinter from './printer/text';\nimport rawPrinter from './printer/raw';\n\n/**\n * Create a pre-configured chord rendering function\n * @param {RendererConfiguration} [rendererConfiguration]\n * @returns {function(Chord): String}\n */\nfunction chordRendererFactory({\n\taccidental = 'original',\n\tcustomFilters = [],\n\tnotationSystem = 'english',\n\tprinter = 'text',\n\tsimplify = 'none',\n\ttransposeValue = 0,\n\tuseShortNamings = false,\n} = {}) {\n\tcheckCustomFilters(customFilters);\n\n\tconst allFilters = [];\n\n\tif (['max', 'core'].includes(simplify)) {\n\t\tallFilters.push(simplifyFilter.bind(null, simplify));\n\t}\n\n\tif (accidental !== 'original' || transposeValue !== 0) {\n\t\tallFilters.push(transpose.bind(null, transposeValue, accidental));\n\t}\n\n\tif (useShortNamings) {\n\t\tallFilters.push(shortenNormalized);\n\t}\n\n\tallFilters.push(\n\t\tconvertNotationSystem.bind(null, notationSystem),\n\t\tformatSymbol,\n\t\t...customFilters\n\t);\n\n\treturn renderChord;\n\n\t/**\n\t * Render a chord structure\n\t * @param {Chord} chord - the chord structure to render\n\t * @returns {(String|Chord)} output depends on the selected printer: string for text printer (default), Chord for raw printer\n\t */\n\tfunction renderChord(chord) {\n\t\tif (!isValidChord(chord)) {\n\t\t\treturn null;\n\t\t}\n\t\tconst filteredChord = chain(allFilters, _cloneDeep(chord));\n\n\t\treturn printer === 'raw'\n\t\t\t? rawPrinter(filteredChord)\n\t\t\t: textPrinter(filteredChord);\n\t}\n}\n\nconst isValidChord = (chord) => {\n\treturn chord && typeof chord === 'object' && !chord.error && chord.input;\n};\n\n/**\n * @module chordRendererFactory\n * Expose the chordRendererFactory() function\n **/\nexport default chordRendererFactory;\n","import './typedefs';\n\nimport chordParserFactory from './parser/chordParserFactory';\nimport chordRendererFactory from './renderer/chordRendererFactory';\n\nexport { chordParserFactory, chordRendererFactory };\n","import { chordParserFactory } from 'chord-symbol';\n\nconst chordLineRe = /([^\\s]+)/g;\nconst chordsLyricsRe = /\\[([^\\]]*)]/g;\n\nconst isChordLine = (line) => {\n\tconst allChords = line.trim().match(chordLineRe);\n\tif (allChords) {\n\t\treturn allChords.every(isChord);\n\t}\n\treturn false;\n};\n\nconst isChordsLyricsLine = (line) => {\n\tconst allChords = line.trim().match(chordsLyricsRe);\n\tif (allChords) {\n\t\treturn allChords\n\t\t\t.map((potentialChord) => potentialChord.replace(/[[\\]]/g, ''))\n\t\t\t.every(isChord);\n\t}\n\treturn false;\n};\n\nfunction isChord(potentialChord) {\n\tconst parsed = chordParserFactory()(potentialChord);\n\treturn !parsed.error;\n}\n\nexport { chordLineRe, chordsLyricsRe, isChordLine, isChordsLyricsLine };\n","const trimArray = (array, fn) => {\n\twhile (array.length && fn(array[0])) {\n\t\tarray.shift();\n\t}\n\twhile (array.length && fn(array[array.length - 1])) {\n\t\tarray.pop();\n\t}\n\treturn array;\n};\n\nexport default trimArray;\n","const longLabelToShort = {\n\tadlib: 'a',\n\t['ad-lib']: 'a',\n\t['ad.lib.']: 'a',\n\tbridge: 'b',\n\tchorus: 'c',\n\tintro: 'i',\n\tintroduction: 'i',\n\toutro: 'o',\n\tprechorus: 'p',\n\t['pre-chorus']: 'p',\n\t['pre chorus']: 'p',\n\tsolo: 's',\n\tinterlude: 'u',\n\tverse: 'v',\n};\n\nconst getSectionLabel = (input) => {\n\tlet chordMarkLabel = '#';\n\n\tconst rawLabelRe = '(.*?)';\n\tconst sectionIndexRe = '([\\\\s]+[0-9]{1,2})?';\n\tconst multiplierRe = '([\\\\s]+[x][0-9]{1,2})?';\n\tconst sectionLabelRe = new RegExp(\n\t\t`^${rawLabelRe}${sectionIndexRe}${multiplierRe}$`\n\t);\n\tconst [, rawLabel, , multiplier] = input.trim().match(sectionLabelRe);\n\n\tconst labelKey = rawLabel.trim().toLowerCase();\n\tchordMarkLabel += longLabelToShort[labelKey] || rawLabel.trim();\n\n\tif (multiplier) {\n\t\tchordMarkLabel += ' ' + multiplier.trim();\n\t}\n\treturn chordMarkLabel;\n};\n\nexport default getSectionLabel;\n","import { isChordsLyricsLine, chordsLyricsRe } from '../helpers/chordMatchers';\nimport trimArray from '../helpers/trimArray';\nimport getSectionLabel from '../helpers/getSectionLabel';\n\nconst lineTypes = {\n\tEMPTY: 'empty',\n\tDIRECTIVE: 'directive',\n\tCOMMENT: 'comment',\n\tLYRICS: 'lyrics',\n\tCHORDS_LYRICS: 'chordsLyrics',\n\tSECTION_START: 'sectionStart',\n\tSECTION_CLOSE: 'sectionClose',\n\tSECTION_REPEAT: 'sectionRepeat',\n};\n\nconst repeatSectionDirectives = [\n\t'chorus',\n\t'verse',\n\t'bridge',\n\t// {Comment} seems to be mostly used to declare repeated sections\n\t'comment',\n\t'comment_italic',\n\t'comment_bold',\n\t'c',\n\t'ci',\n\t'cb',\n];\n\nconst startSectionDirectives = [\n\t'start_of_chorus',\n\t'start_of_verse',\n\t'start_of_bridge',\n\t'start_of_part',\n\t'soc',\n\t'sov',\n\t'sob',\n\t'sop',\n];\n\nconst endSectionDirectives = [\n\t'end_of_chorus',\n\t'end_of_verse',\n\t'end_of_bridge',\n\t'end_of_part',\n\t'eoc',\n\t'eov',\n\t'eob',\n\t'sop',\n];\n\nconst directivesToSectionLabel = {\n\tchorus: 'c',\n\tverse: 'v',\n\tbridge: 'b',\n\tstart_of_chorus: 'c',\n\tstart_of_verse: 'v',\n\tstart_of_bridge: 'b',\n\tstart_of_part: 'v',\n\tsoc: 'c',\n\tsov: 'v',\n\tsob: 'b',\n\tsop: 'v',\n\t// if no value, consider {comment} as a chorus mention ¯\\_(ツ)_/¯\n\tc: 'c',\n\tci: 'c',\n\tcb: 'c',\n\tcomment: 'c',\n\tcomment_italic: 'c',\n\tcomment_bold: 'c',\n};\n\nconst chordPro2ChordMark = (allLines) => {\n\tconst cmOutput = [];\n\n\tconst allLinesModel = allLines\n\t\t.map((line) => getLineModel(line))\n\t\t.filter((lineModel) => isSupportedLine(lineModel));\n\n\tconst allSections = getAllSections(allLinesModel);\n\n\tallSections.forEach((section, i) => {\n\t\tcmOutput.push(section.label);\n\t\tsection.allLines.forEach((line) => {\n\t\t\tcmOutput.push(line);\n\t\t});\n\t\tif (i < allSections.length - 1) {\n\t\t\tcmOutput.push('');\n\t\t}\n\t});\n\n\treturn cmOutput.join('\\n');\n};\n\nconst getLineModel = (line) => {\n\tconst lineModel = { content: line };\n\n\tif (isCommentLine(line)) {\n\t\tlineModel.type = lineTypes.COMMENT;\n\t} else if (isEmtpyLine(line)) {\n\t\tlineModel.type = lineTypes.EMPTY;\n\t} else if (isDirective(line)) {\n\t\tconst [key, value] = getDirectiveKV(line);\n\t\tlineModel.key = key;\n\t\tlineModel.value = value;\n\n\t\tif (startSectionDirectives.includes(key)) {\n\t\t\tlineModel.type = lineTypes.SECTION_START;\n\t\t} else if (endSectionDirectives.includes(key)) {\n\t\t\tlineModel.type = lineTypes.SECTION_CLOSE;\n\t\t} else if (repeatSectionDirectives.includes(key)) {\n\t\t\tlineModel.type = lineTypes.SECTION_REPEAT;\n\t\t} else {\n\t\t\tlineModel.type = lineTypes.DIRECTIVE;\n\t\t}\n\t} else if (isChordsLyricsLine(line)) {\n\t\tlineModel.type = lineTypes.CHORDS_LYRICS;\n\t\tconst [chords, lyrics] = getChordsLyrics(line);\n\t\tlineModel.chords = chords;\n\t\tlineModel.lyrics = lyrics;\n\t} else {\n\t\tlineModel.type = lineTypes.LYRICS;\n\t}\n\n\treturn lineModel;\n};\n\nconst isCommentLine = (line) => {\n\tconst commentLineRe = /^#.*$/;\n\tconst found = line.trim().match(commentLineRe);\n\treturn found !== null;\n};\n\nconst isEmtpyLine = (line) => {\n\treturn line.trim() === '';\n};\n\nconst directiveRe = /^{([^:]+):?(.*)?}$/;\n\nconst isDirective = (line) => {\n\tconst found = line.trim().match(directiveRe);\n\treturn found !== null;\n};\n\nconst getDirectiveKV = (directive) => {\n\tconst found = directive.trim().match(directiveRe);\n\tconst key = found[1].trim();\n\tconst value = found[2] ? found[2].trim() : undefined;\n\treturn [key, value];\n};\n\nconst getChordsLyrics = (chordsLyrics) => {\n\tconst found = chordsLyrics.trim().match(chordsLyricsRe);\n\tconst chords = found\n\t\t.map((chord) => {\n\t\t\treturn chord.replace('[', '').replace(']', '');\n\t\t})\n\t\t.join(' ');\n\tconst lyrics = chordsLyrics.replace(chordsLyricsRe, '_');\n\treturn [chords, lyrics];\n};\n\nconst isSupportedLine = (lineModel) => {\n\tconst unSupportedLineTypes = [lineTypes.COMMENT, lineTypes.DIRECTIVE];\n\treturn !unSupportedLineTypes.includes(lineModel.type);\n};\n\nconst getAllSections = (allLines) => {\n\tlet allSections = [];\n\tlet currentSection;\n\n\tconst commitCurrentSection = () => {\n\t\tif (currentSection) {\n\t\t\tallSections.push(currentSection);\n\t\t\tcurrentSection = undefined;\n\t\t}\n\t};\n\n\tconst initCurrentSection = (line) => {\n\t\tcurrentSection = {\n\t\t\tlabel: line ? extractSectionLabel(line) : '#v',\n\t\t\tallLines: [],\n\t\t};\n\t};\n\n\tallLines.forEach((line) => {\n\t\tif (line.type === lineTypes.SECTION_START) {\n\t\t\tcommitCurrentSection();\n\t\t\tinitCurrentSection(line);\n\t\t} else if (line.type === lineTypes.SECTION_CLOSE) {\n\t\t\tcommitCurrentSection();\n\t\t} else if (line.type === lineTypes.SECTION_REPEAT) {\n\t\t\tcommitCurrentSection();\n\t\t\tinitCurrentSection(line);\n\t\t\tcommitCurrentSection();\n\t\t} else if (line.type === lineTypes.EMPTY) {\n\t\t\tif (currentSection) {\n\t\t\t\tcurrentSection.allLines.push(line.content);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!currentSection) {\n\t\t\t\tinitCurrentSection();\n\t\t\t}\n\t\t\tif (line.type === lineTypes.CHORDS_LYRICS) {\n\t\t\t\tcurrentSection.allLines.push(line.chords);\n\t\t\t\tcurrentSection.allLines.push(line.lyrics);\n\t\t\t} else {\n\t\t\t\tcurrentSection.allLines.push(line.content);\n\t\t\t}\n\t\t}\n\t});\n\n\tcommitCurrentSection();\n\n\treturn allSections.map((section) => {\n\t\tsection.allLines = trimArray(section.allLines, (el) => el === '');\n\t\treturn section;\n\t});\n};\n\nconst extractSectionLabel = (lineModel) => {\n\tlet label;\n\n\tif (lineModel.value) {\n\t\tlabel = getSectionLabel(lineModel.value);\n\t} else {\n\t\tlabel = '#' + directivesToSectionLabel[lineModel.key];\n\t}\n\treturn label;\n};\n\nexport default chordPro2ChordMark;\n","/**\n * Return the printed length of a string, taking into accounts tabs\n * @param {string} input\n * @returns {number}\n */\nconst getSpaceLength = (input) => {\n\tconst TAB_WIDTH = 4;\n\n\t// inspired by https://github.com/gromnitsky/untabify/blob/master/index.js\n\tlet offset = 0;\n\tconst withoutTabs = input.replace(/\\t/g, (_, idx) => {\n\t\tlet max = TAB_WIDTH - ((idx + offset) % TAB_WIDTH);\n\t\toffset += max - 1;\n\t\treturn ' '.repeat(max);\n\t});\n\n\treturn withoutTabs.length;\n};\n\nexport default getSpaceLength;\n","const insertAt = (insertInto, toInsert, at) => {\n\tif (at > insertInto.length) {\n\t\tinsertInto += ' '.repeat(at - insertInto.length);\n\t}\n\treturn insertInto.slice(0, at) + toInsert + insertInto.slice(at);\n};\n\nexport default insertAt;\n","import { isChordLine, chordLineRe } from '../helpers/chordMatchers';\nimport getSpaceLength from '../helpers/getSpaceLength';\nimport insertAt from '../helpers/insertAt';\nimport getSectionLabel from '../helpers/getSectionLabel';\n\nconst chordsOverLyrics2ChordMark = (allLines) => {\n\tconst cmOutput = [];\n\tlet chordPositions = [];\n\n\tallLines.forEach((line) => {\n\t\tif (isChordLine(line)) {\n\t\t\tcmOutput.push(getAllChordsInLine(line));\n\t\t\tchordPositions = getChordsPositions(line);\n\t\t} else {\n\t\t\tif (isSectionLabel(line)) {\n\t\t\t\tcmOutput.push(extractSectionLabel(line));\n\t\t\t} else if (chordPositions.length && line.trim() !== '') {\n\t\t\t\tcmOutput.push(getLineWithPositionMarkers(line, chordPositions));\n\t\t\t} else {\n\t\t\t\tcmOutput.push(line);\n\t\t\t}\n\t\t\tchordPositions = [];\n\t\t}\n\t});\n\n\treturn cmOutput.join('\\n');\n};\n\nconst sectionLabelRe = /^\\[([^\\]]+)]$/;\n\nconst isSectionLabel = (line) => {\n\tconst found = line.trim().match(sectionLabelRe);\n\treturn found !== null && found[1].trim() !== '';\n};\n\nconst extractSectionLabel = (line) => {\n\tconst rawLabel = line.trim().match(sectionLabelRe)[1];\n\treturn getSectionLabel(rawLabel);\n};\n\nfunction getAllChordsInLine(line) {\n\treturn line.match(chordLineRe).join(' ');\n}\n\nfunction getChordsPositions(line) {\n\tconst chordPositions = [];\n\tlet lastPosition = 0;\n\n\tconst allSpaces = line.match(/([\\s])+/g) || [];\n\tconst allChords = line.match(/([^\\s])+/g);\n\n\tif (!startWithSpace(line)) {\n\t\tallSpaces.unshift('');\n\t}\n\n\tif (endWithSpace(line)) {\n\t\tallSpaces.pop();\n\t}\n\n\tallSpaces.forEach((spaces, i) => {\n\t\tconst chordPosition = getSpaceLength(' '.repeat(lastPosition) + spaces);\n\t\tchordPositions.push(chordPosition);\n\t\tlastPosition = chordPosition + allChords[i].length;\n\t});\n\n\treturn chordPositions;\n}\n\nconst startWithSpace = (line) => {\n\treturn isSpace(line.charAt(0));\n};\n\nconst endWithSpace = (line) => {\n\treturn isSpace(line.charAt(line.length - 1));\n};\n\nconst isSpace = (char) => {\n\treturn char.match(/[\\s]/);\n};\n\nconst getLineWithPositionMarkers = (line, chordPositions) => {\n\tconst marker = '_';\n\tlet withMarkers = line;\n\tlet markersLength = 0;\n\n\tchordPositions.forEach((position) => {\n\t\tconst at = Math.min(position + markersLength, withMarkers.length + 1);\n\t\twithMarkers = insertAt(withMarkers, marker, at);\n\t\tmarkersLength += marker.length;\n\t});\n\n\treturn withMarkers.replace(/[\\s]+/g, ' ').trim();\n};\n\nexport default chordsOverLyrics2ChordMark;\n","import stripTags from './helpers/stripTags';\nimport { isChordLine, isChordsLyricsLine } from './helpers/chordMatchers';\nimport chordPro2ChordMark from './converters/chordPro2ChordMark';\nimport chordsOverLyrics2ChordMark from './converters/chordsOverLyrics2ChordMark';\n\nconst allInputFormats = {\n\tAUTO: 'auto',\n\tCP: 'chordPro',\n\tCOL: 'chordsOverLyrics',\n};\n\n/**\n *\n * @param {String} input\n * @param {('chordPro'|'chordsOverLyrics')} inputFormat\n * @returns {String}\n */\nconst convert2ChordMark = (\n\tinput,\n\t{ inputFormat = allInputFormats.AUTO } = {}\n) => {\n\tcheckInputFormat(inputFormat);\n\n\tconst allLines = getAllLines(input);\n\n\tlet finalInputFormat = inputFormat;\n\tif (inputFormat === allInputFormats.AUTO) {\n\t\tfinalInputFormat = looksLikeChordPro(allLines)\n\t\t\t? allInputFormats.CP\n\t\t\t: allInputFormats.COL;\n\t}\n\n\tlet converter;\n\tswitch (finalInputFormat) {\n\t\tcase allInputFormats.CP:\n\t\t\tconverter = chordPro2ChordMark;\n\t\t\tbreak;\n\t\tcase allInputFormats.COL:\n\t\t\tconverter = chordsOverLyrics2ChordMark;\n\t\t\tbreak;\n\t}\n\treturn converter(allLines);\n};\n\nconst checkInputFormat = (inputFormat) => {\n\tif (!Object.values(allInputFormats).includes(inputFormat)) {\n\t\tthrow new Error('unknown input format: ' + inputFormat);\n\t}\n};\n\nconst getAllLines = (inputRaw) => {\n\treturn stripTags(inputRaw)\n\t\t.replace(/\\r\\n/g, '\\n')\n\t\t.replace(/\\n\\r/g, '\\n')\n\t\t.replace(/\\r/g, '\\n')\n\t\t.replace(/\\[\\/?ch]/g, '') // ultimate guitar markup\n\t\t.replace(/\\[\\/?tab]/g, '') // ultimate guitar markup\n\t\t.split('\\n');\n};\n\nconst looksLikeChordPro = (allLines) => {\n\tconst chordsLyricsLines = allLines.filter(isChordsLyricsLine);\n\tconst chordLines = allLines.filter(isChordLine);\n\treturn chordsLyricsLines.length > chordLines.length;\n};\n\nexport default convert2ChordMark;\n","import domPurify from 'dompurify';\n\nexport default function escapeHTML(unescaped) {\n\treturn domPurify.sanitize(unescaped);\n}\n","import domPurify from 'dompurify';\n\nexport default function stripTags(html) {\n\treturn domPurify.sanitize(html, {\n\t\tALLOWED_TAGS: ['#text'],\n\t\tKEEP_CONTENT: true,\n\t});\n}\n","/**\n * @enum {String}\n * @readonly\n */\nexport default {\n\tCHORD: 'chord',\n\tEMPTY_LINE: 'emptyLine',\n\tKEY_DECLARATION: 'keyDeclaration',\n\tLYRIC: 'lyric',\n\tSECTION_LABEL: 'sectionLabel',\n\tTIME_SIGNATURE: 'timeSignature',\n};\n","const allowedTimeSignatures = [\n\t'2/2',\n\t'3/2',\n\t'4/2',\n\t'2/4',\n\t'3/4',\n\t'4/4',\n\t'5/4',\n\t'6/4',\n\t'7/4',\n\t'9/4',\n\t'10/4',\n\t'3/8',\n\t'4/8',\n\t'5/8',\n\t'6/8',\n\t'7/8',\n\t'9/8',\n\t'12/8',\n];\n\nexport default function isTimeSignatureString(string) {\n\treturn allowedTimeSignatures.includes(string);\n}\n","import isTimeSignatureString from './matchers/isTimeSignatureString';\n\n/**\n * @typedef {Object} TimeSignature\n * @type {Object}\n * @property {String} string - original string\n * @property {Number} count - upper part of time signature\n * @property {Number} value - lower part of time signature\n * @property {Number} beatCount - number of beats per bar\n */\n\n/**\n * @param {String} string\n * @returns {TimeSignature}\n */\nexport default function parseTimeSignature(string) {\n\tif (!isTimeSignatureString(string)) {\n\t\tthrow new TypeError(\n\t\t\t'Expected time signature string, received: ' + string\n\t\t);\n\t}\n\n\tconst array = string.split('/');\n\n\tconst count = Number.parseInt(array[0], 10);\n\tconst value = Number.parseInt(array[1], 10);\n\n\tlet beatCount = count;\n\n\tif (value === 2) {\n\t\tbeatCount = count * 2;\n\t} else if (value === 8) {\n\t\tbeatCount = count / 3;\n\t}\n\n\treturn {\n\t\tstring,\n\t\tcount,\n\t\tvalue,\n\t\tbeatCount,\n\t};\n}\n","import parseTimeSignature from './parseTimeSignature';\n\nexport default {\n\tbarRepeat: '%',\n\tchordBeatCount: '.',\n\tchordLineRepeat: '%',\n\tchordPositionMarker: '_',\n\tlyricLine: ':',\n\tkeyDeclarationPrefix: 'key ',\n\tnoChord: 'NC',\n\tsectionLabel: '#',\n\tsubBeatOpener: '[',\n\tsubBeatCloser: ']',\n};\n\nexport const defaultTimeSignature = parseTimeSignature('4/4');\n","import { chordParserFactory } from 'chord-symbol';\n\nexport default function isChord(potentialChord) {\n\tconst parseChord = chordParserFactory();\n\tconst parsed = parseChord(potentialChord);\n\treturn !parsed.error;\n}\n","import _escapeRegExp from 'lodash/escapeRegExp';\nimport clearSpaces from '../helper/clearSpaces';\n\nimport syntax from '../syntax';\nimport isChord from './isChord';\nimport isTimeSignatureString from './isTimeSignatureString';\n\nconst chordBeatCountSymbols = new RegExp(\n\t_escapeRegExp(syntax.chordBeatCount) + '*$',\n\t'g'\n);\nconst barRepeatSymbols = new RegExp(\n\t'^' + _escapeRegExp(syntax.barRepeat) + '+$'\n);\n\n/**\n * Check if the given line only contains chords and allowed characters.\n * The parsing might still fail at a later stage if some rules are not properly enforced,\n * like having proper chord durations or matching sub-beat openers/closers\n * @param {String} line\n * @returns {Boolean}\n */\nexport default function isChordLine(line = '') {\n\treturn clearSpaces(getParseableChordLine(line))\n\t\t.split(' ')\n\t\t.every((potentialChordToken, index, allTokens) => {\n\t\t\tconst clean = cleanToken(potentialChordToken);\n\n\t\t\treturn (\n\t\t\t\tisChord(clean) ||\n\t\t\t\t(potentialChordToken.match(barRepeatSymbols) && index > 0) ||\n\t\t\t\tclean === syntax.noChord ||\n\t\t\t\t(isTimeSignatureString(potentialChordToken) &&\n\t\t\t\t\tallTokens.length > 1)\n\t\t\t);\n\t\t});\n}\n\nconst getParseableChordLine = (chordLine) => {\n\treturn chordLine.replaceAll('add ', 'add');\n};\n\nconst cleanToken = (token) => {\n\treturn removeSubBeatDelimiters(removeBeatCount(token));\n};\n\nconst removeBeatCount = (token) => {\n\treturn token.replace(chordBeatCountSymbols, '');\n};\n\nconst removeSubBeatDelimiters = (token) => {\n\tlet clean = token;\n\tif (token.startsWith(syntax.subBeatOpener)) {\n\t\tclean = clean.substring(syntax.subBeatOpener.length);\n\t}\n\tif (token.endsWith(syntax.subBeatCloser)) {\n\t\tclean = clean.substring(0, clean.length - syntax.subBeatCloser.length);\n\t}\n\treturn clean;\n};\n\nexport { getParseableChordLine, cleanToken };\n","import syntax from '../syntax';\nimport clearSpaces from '../helper/clearSpaces';\n\nexport default function isChordLineRepeater(string) {\n\tconst candidate = clearSpaces(string);\n\treturn (\n\t\tcandidate === syntax.chordLineRepeat ||\n\t\tcandidate === syntax.chordLineRepeat.repeat(2)\n\t);\n}\n","import _escapeRegExp from 'lodash/escapeRegExp';\nimport syntax from '../syntax';\nimport clearSpaces from '../helper/clearSpaces';\n\nexport const sectionLabelRegexp = new RegExp(\n\t'^' +\n\t\t_escapeRegExp(syntax.sectionLabel) +\n\t\t'([a-zA-Z]+)([1-9])?( x[1-9][0-9]?)?$'\n);\n\nexport default function isSectionLabel(string) {\n\tconst found = clearSpaces(string).match(sectionLabelRegexp);\n\treturn found !== null;\n}\n","import { chordParserFactory } from 'chord-symbol';\n\n/**\n * @param {String} chordString\n * @param {KeyDeclaration} key\n * @returns {Chord}\n */\nexport default function parseChordWrapper(chordString, key = {}) {\n\tconst parseChord = chordParserFactory({ key: key.string });\n\treturn parseChord(chordString);\n}\n","import _isString from 'lodash/isString';\nimport _isFinite from 'lodash/isFinite';\n\nexport default class InvalidBeatCountException extends Error {\n\tconstructor({ string, duration, currentBeatCount, beatCount } = {}) {\n\t\tif (!string || !_isString(string)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidBeatCountException cannot be created without chord string, received: ' +\n\t\t\t\t\tstring\n\t\t\t);\n\t\t}\n\t\tif (!duration || !_isFinite(duration)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidBeatCountException cannot be created without chord duration, received: ' +\n\t\t\t\t\tduration\n\t\t\t);\n\t\t}\n\t\tif (!currentBeatCount || !_isFinite(currentBeatCount)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidBeatCountException cannot be created without currentBeatCount, received: ' +\n\t\t\t\t\tcurrentBeatCount\n\t\t\t);\n\t\t}\n\t\tif (!beatCount || !_isFinite(beatCount)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidBeatCountException cannot be created without beatCount, received: ' +\n\t\t\t\t\tbeatCount\n\t\t\t);\n\t\t}\n\n\t\tsuper();\n\n\t\tthis.name = 'InvalidBeatCountException';\n\t\tthis.string = string;\n\t\tthis.duration = duration;\n\t\tthis.currentBeatCount = currentBeatCount;\n\t\tthis.beatCount = beatCount;\n\t}\n}\n","import _isString from 'lodash/isString';\n\nexport default class InvalidChordRepetitionException extends Error {\n\tconstructor({ string } = {}) {\n\t\tif (!string || !_isString(string)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidChordRepetitionException cannot be created without chord string, received: ' +\n\t\t\t\t\tstring\n\t\t\t);\n\t\t}\n\n\t\tsuper();\n\n\t\tthis.name = 'InvalidChordRepetitionException';\n\t\tthis.string = string;\n\t}\n}\n","import _isString from 'lodash/isString';\nimport _isFinite from 'lodash/isFinite';\n\nexport default class InvalidSubBeatGroupException extends Error {\n\tconstructor({ chordLine, symbol, position } = {}) {\n\t\tif (!chordLine || !_isString(chordLine)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidSubBeatGroupException cannot be created without a chordLine, received: ' +\n\t\t\t\t\tchordLine\n\t\t\t);\n\t\t}\n\t\tif (!symbol || !_isString(symbol)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidSubBeatGroupException cannot be created without symbol, received: ' +\n\t\t\t\t\tsymbol\n\t\t\t);\n\t\t}\n\t\tif (!_isFinite(position)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidSubBeatGroupException cannot be created without symbol position, received: ' +\n\t\t\t\t\tposition\n\t\t\t);\n\t\t}\n\t\tsuper();\n\n\t\tthis.name = 'InvalidSubBeatGroupException';\n\t\tthis.chordLine = chordLine;\n\t\tthis.symbol = symbol;\n\t\tthis.position = position;\n\t}\n}\n","import _isString from 'lodash/isString';\n\nexport default class InvalidBarRepeatException extends Error {\n\tconstructor({ string } = {}) {\n\t\tif (!string || !_isString(string)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t'InvalidBarRepeatException cannot be created without chord string, received: ' +\n\t\t\t\t\tstring\n\t\t\t);\n\t\t}\n\n\t\tsuper();\n\n\t\tthis.name = 'InvalidBarRepeatException';\n\t\tthis.string = string;\n\t}\n}\n","/* eslint-disable max-lines-per-function */\nimport _isEqual from 'lodash/isEqual';\nimport _escapeRegExp from 'lodash/escapeRegExp';\nimport _cloneDeep from 'lodash/cloneDeep';\n\nimport syntax, { defaultTimeSignature } from './syntax';\nimport clearSpaces from './helper/clearSpaces';\n\nimport isTimeSignatureString from './matchers/isTimeSignatureString';\nimport parseChord from './parseChord';\nimport parseTimeSignature from './parseTimeSignature';\n\nimport InvalidBeatCountException from './exceptions/InvalidBeatCountException';\nimport InvalidChordRepetitionException from './exceptions/InvalidChordRepetitionException';\nimport InvalidSubBeatGroupException from './exceptions/InvalidSubBeatGroupException';\nimport InvalidBarRepeatException from './exceptions/InvalidBarRepeatException';\nimport { getParseableChordLine, cleanToken } from './matchers/isChordLine';\n\nconst chordBeatCountSymbols = new RegExp(\n\t_escapeRegExp(syntax.chordBeatCount),\n\t'g'\n);\nconst barRepeatSymbols = new RegExp(\n\t'^' + _escapeRegExp(syntax.barRepeat) + '+$'\n);\n\n/**\n * @typedef {Object} ChordLine\n * @type {Object}\n * @property {Bar[]} allBars\n * @property {KeyDeclaration} originalKey\n * @property {Boolean} hasPositionedChords\n */\n\n/**\n * @typedef {Object} Bar\n * @type {Object}\n * @property {TimeSignature} timeSignature\n * @property {ChordLineChord[]} allChords\n * @property {Boolean} isRepeated - the bar has been created with the bar repeat symbol\n * @property {Boolean} hasUnevenChordsDurations - the chords in the bar do not have the same duration\n * @property {Boolean} lineHadTimeSignatureChange - there has been an inline time signature change.\n * This value will be `true` for all the bars after the time signature change occurred,\n * even if the TS is changed back again to the context one.\n */\n\n/**\n * @typedef {Object} ChordLineChord\n * @type {Object}\n * @property {String} string - original chord string\n * @property {ChordDef|String} model - parsed chord or \"NC\" if \"no chord\" symbol\n * @property {Number} duration - number of beats the chord lasts\n * @property {Number} beat - beat on which the chord starts\n * @property {Boolean} isPositioned - whether this chord has been positioned over a specific lyric or not\n * @property {Boolean} isInSubBeatGroup - whether this chord has a sub-beat duration\n * @property {Boolean} [isFirstOfSubBeat] - Only present if `isInSubBeatGroup` is true.\n * @property {Boolean} [isLastOfSubBeat] - Only present if `isInSubBeatGroup` is true.\n */\n\n/**\n * @param {String} chordLine\n * @param {Object} options\n * @param {TimeSignature} options.timeSignature\n * @param {KeyDeclaration} options.originalKey\n * @returns {ChordLine}\n */\nexport default function parseChordLine(\n\tchordLine,\n\t{ timeSignature = defaultTimeSignature, originalKey = {} } = {}\n) {\n\tlet { beatCount } = timeSignature;\n\n\tconst allBars = [];\n\tconst emptyBar = { allChords: [] };\n\tconst subBeatGroupsChordCount = {};\n\n\tlet bar = _cloneDeep(emptyBar);\n\tlet chord = {};\n\tlet cleanedToken;\n\tlet currentBeatCount = 0;\n\tlet previousBar;\n\tlet isInSubBeatGroup = false;\n\tlet subBeatGroupIndex = 0;\n\tlet lineHadTimeSignatureChange = false;\n\n\tcheckSubBeatConsistency(chordLine);\n\n\tconst allTokens = clearSpaces(getParseableChordLine(chordLine)).split(' ');\n\n\tallTokens.forEach((token, tokenIndex) => {\n\t\tif (token.match(barRepeatSymbols)) {\n\t\t\trepeatPreviousBars(token);\n\t\t} else if (isTimeSignatureString(token)) {\n\t\t\tchangeTimeSignature(token);\n\t\t} else {\n\t\t\tparseChordToken(token);\n\n\t\t\tif (shouldChangeBar(currentBeatCount, beatCount)) {\n\t\t\t\tchangeBar();\n\t\t\t} else {\n\t\t\t\tcheckInvalidBeatCount(\n\t\t\t\t\tchord,\n\t\t\t\t\tcurrentBeatCount,\n\t\t\t\t\tbeatCount,\n\t\t\t\t\tallTokens.length === tokenIndex + 1\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t});\n\n\tsetSubBeatInfo(allBars, subBeatGroupsChordCount);\n\n\treturn {\n\t\tallBars,\n\t\toriginalKey,\n\t};\n\n\tfunction repeatPreviousBars(token) {\n\t\tif (\n\t\t\tcurrentBeatCount === 0 &&\n\t\t\tpreviousBar &&\n\t\t\t_isEqual(timeSignature, previousBar.timeSignature)\n\t\t) {\n\t\t\tconst repeatedBar = _cloneDeep(previousBar);\n\t\t\trepeatedBar.isRepeated = true;\n\n\t\t\tfor (let i = 0; i < token.length; i++) {\n\t\t\t\tallBars.push(_cloneDeep(repeatedBar));\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new InvalidBarRepeatException({ string: chordLine });\n\t\t}\n\t}\n\n\tfunction changeTimeSignature(token) {\n\t\ttimeSignature = parseTimeSignature(token);\n\t\tbeatCount = timeSignature.beatCount;\n\t\tlineHadTimeSignatureChange = true;\n\t}\n\n\tfunction parseChordToken(token) {\n\t\tif (token.startsWith(syntax.subBeatOpener)) {\n\t\t\tisInSubBeatGroup = true;\n\t\t}\n\t\tif (isInSubBeatGroup) {\n\t\t\tcheckSubBeatGroupToken(chordLine, token);\n\t\t\tupdateSubBeatGroupsChordCount(token);\n\t\t}\n\n\t\tcleanedToken = cleanToken(token);\n\t\tchord = {\n\t\t\tstring: token,\n\t\t\tduration: getChordDuration(token, beatCount, isInSubBeatGroup),\n\t\t\tmodel: isNoChordSymbol(cleanedToken)\n\t\t\t\t? syntax.noChord\n\t\t\t\t: parseChord(cleanedToken, originalKey),\n\t\t\tbeat: currentBeatCount + 1,\n\t\t\tisInSubBeatGroup,\n\t\t};\n\t\tcurrentBeatCount += chord.duration;\n\n\t\tcheckInvalidChordRepetition(bar, chord);\n\n\t\tbar.allChords.push(chord);\n\n\t\tif (token.endsWith(syntax.subBeatCloser)) {\n\t\t\tcheckSubBeatGroupChordCount(token);\n\t\t\tisInSubBeatGroup = false;\n\t\t\tsubBeatGroupIndex++;\n\t\t\tcurrentBeatCount += 1;\n\t\t}\n\t}\n\n\tfunction updateSubBeatGroupsChordCount() {\n\t\tif (subBeatGroupsChordCount[subBeatGroupIndex]) {\n\t\t\tsubBeatGroupsChordCount[subBeatGroupIndex]++;\n\t\t} else {\n\t\t\tsubBeatGroupsChordCount[subBeatGroupIndex] = 1;\n\t\t}\n\t}\n\n\tfunction checkSubBeatGroupChordCount(token) {\n\t\tif (\n\t\t\tsubBeatGroupsChordCount[subBeatGroupIndex] === 1 ||\n\t\t\tsubBeatGroupsChordCount[subBeatGroupIndex] > 4\n\t\t)\n\t\t\tthrow new InvalidSubBeatGroupException({\n\t\t\t\tchordLine,\n\t\t\t\tsymbol: token,\n\t\t\t\tposition: 0, // duh\n\t\t\t});\n\t}\n\n\tfunction changeBar() {\n\t\tbar.timeSignature = timeSignature;\n\t\tbar.lineHadTimeSignatureChange = lineHadTimeSignatureChange;\n\t\tbar.hasUnevenChordsDurations = hasUnevenChordsDurations(bar);\n\t\tconst barClone = _cloneDeep(bar);\n\n\t\tbar.isRepeated = _isEqual(bar, previousBar);\n\n\t\tallBars.push(_cloneDeep(bar));\n\n\t\tpreviousBar = barClone;\n\n\t\tbar = _cloneDeep(emptyBar);\n\t\tcurrentBeatCount = 0;\n\t}\n}\n\nfunction checkSubBeatGroupToken(chordLine, token) {\n\tif (hasBeatCount(token)) {\n\t\tthrow new InvalidSubBeatGroupException({\n\t\t\tchordLine,\n\t\t\tsymbol: token,\n\t\t\tposition: 0, // duh\n\t\t});\n\t}\n}\n\nfunction hasBeatCount(token) {\n\treturn token.indexOf(syntax.chordBeatCount) > -1;\n}\n\nfunction isNoChordSymbol(token) {\n\treturn token === syntax.noChord;\n}\n\nfunction getChordDuration(token, beatCount, isInSubBeatGroup) {\n\tif (isInSubBeatGroup) return 0; // duration is computed during post-processing for sub-beats duration\n\treturn (token.match(chordBeatCountSymbols) || []).length || beatCount;\n}\n\nfunction checkInvalidChordRepetition(bar, currentChord) {\n\tif (bar.allChords.length > 0) {\n\t\tconst previousChord = bar.allChords[bar.allChords.length - 1];\n\t\tif (\n\t\t\t_isEqual(previousChord.model, currentChord.model) &&\n\t\t\t!isChordRepetitionAllowed(previousChord, currentChord)\n\t\t) {\n\t\t\tthrow new InvalidChordRepetitionException({\n\t\t\t\tstring: currentChord.string,\n\t\t\t});\n\t\t}\n\t}\n}\n\nfunction isChordRepetitionAllowed(previousChord, currentChord) {\n\treturn (\n\t\tcurrentChord.string.startsWith(syntax.subBeatOpener) ||\n\t\t(previousChord.string.endsWith(syntax.subBeatCloser) &&\n\t\t\t!currentChord.model.isInSubBeatGroup)\n\t);\n}\n\nfunction shouldChangeBar(currentBeatCount, beatCount) {\n\treturn currentBeatCount === beatCount;\n}\n\nfunction checkInvalidBeatCount(chord, currentBeatCount, beatCount, isLast) {\n\tif (hasInvalidBeatCount(currentBeatCount, beatCount, isLast)) {\n\t\tthrow new InvalidBeatCountException({\n\t\t\tstring: chord.string,\n\t\t\tduration: chord.duration,\n\t\t\tcurrentBeatCount,\n\t\t\tbeatCount,\n\t\t});\n\t}\n}\nfunction hasInvalidBeatCount(currentBeatCount, barBeatCount, isLast) {\n\treturn (\n\t\thasTooManyBeats(currentBeatCount, barBeatCount) ||\n\t\thasTooFewBeats(currentBeatCount, barBeatCount, isLast)\n\t);\n}\nfunction hasTooManyBeats(currentBeatCount, barBeatCount) {\n\treturn currentBeatCount > barBeatCount;\n}\nfunction hasTooFewBeats(currentBeatCount, barBeatCount, isLast) {\n\treturn isLast && currentBeatCount < barBeatCount;\n}\n\nfunction hasUnevenChordsDurations(bar) {\n\tlet firstChordDuration = bar.allChords[0].duration;\n\treturn bar.allChords.some((chord) => chord.duration !== firstChordDuration);\n}\n\nfunction setSubBeatInfo(allBars, subBeatGroupsChordCount) {\n\tlet subBeatGroupIndex = -1;\n\tlet subBeatChordIndex = 0;\n\tlet previousChordBeatId = '';\n\n\tallBars.forEach((bar, barIndex) => {\n\t\tbar.allChords.forEach((chord) => {\n\t\t\tif (chord.isInSubBeatGroup) {\n\t\t\t\tconst chordBeatId = barIndex + chord.beat;\n\t\t\t\tif (chordBeatId !== previousChordBeatId) {\n\t\t\t\t\tsubBeatGroupIndex++;\n\t\t\t\t\tsubBeatChordIndex = 0;\n\t\t\t\t}\n\n\t\t\t\tconst durationString = (\n\t\t\t\t\t1 / subBeatGroupsChordCount[subBeatGroupIndex]\n\t\t\t\t).toPrecision(2);\n\n\t\t\t\tchord.duration = Number.parseFloat(durationString);\n\t\t\t\tchord.isFirstOfSubBeat = subBeatChordIndex === 0;\n\t\t\t\tchord.isLastOfSubBeat =\n\t\t\t\t\tsubBeatChordIndex ===\n\t\t\t\t\tsubBeatGroupsChordCount[subBeatGroupIndex] - 1;\n\n\t\t\t\tpreviousChordBeatId = chordBeatId;\n\t\t\t\tsubBeatChordIndex++;\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction checkSubBeatConsistency(line) {\n\tconst errorParameters = {};\n\tlet inSubBeat = false;\n\tlet match;\n\n\tconst regexp = new RegExp(\n\t\t_escapeRegExp(syntax.subBeatOpener) +\n\t\t\t'|' +\n\t\t\t_escapeRegExp(syntax.subBeatCloser),\n\t\t'g'\n\t);\n\twhile ((match = regexp.exec(line))) {\n\t\tconst symbol = match[0];\n\t\terrorParameters.chordLine = line;\n\t\terrorParameters.symbol = symbol;\n\t\terrorParameters.position = regexp.lastIndex - 1;\n\n\t\tif (match[0] === syntax.subBeatOpener) {\n\t\t\tif (inSubBeat)\n\t\t\t\tthrow new InvalidSubBeatGroupException(errorParameters);\n\t\t\tinSubBeat = true;\n\t\t} else {\n\t\t\tif (!inSubBeat)\n\t\t\t\tthrow new InvalidSubBeatGroupException(errorParameters);\n\t\t\tinSubBeat = false;\n\t\t}\n\t}\n\tif (inSubBeat) throw new InvalidSubBeatGroupException(errorParameters);\n}\n","import _cloneDeep from 'lodash/cloneDeep';\nimport _findIndex from 'lodash/findIndex';\nimport _invert from 'lodash/invert';\n\nconst allNotesSharp = 'A,A#,B,C,C#,D,D#,E,F,F#,G,G#'.split(',');\nconst allFlats = 'Ab,Bb,Db,Eb,Gb'.split(',');\nconst allNotes = [...allNotesSharp, ...allFlats];\nconst allKeys = [...allNotes, ...allNotes.map((note) => note + 'm')];\n\nconst flatsToSharps = {\n\tAb: 'G#',\n\tBb: 'A#',\n\tDb: 'C#',\n\tEb: 'D#',\n\tGb: 'F#',\n};\nconst sharpsToFlats = _invert(flatsToSharps);\n\n/**\n * Check if the given string is a valid key\n * @param {String} keyString\n * @returns {Boolean}\n */\nexport function isKey(keyString) {\n\treturn allKeys.includes(keyString);\n}\n\n/**\n * Returns the accidental of a given key\n * @param {string} keyString\n * @returns {('flat'|'sharp')}\n */\nexport function getKeyAccidental(keyString) {\n\tconst sharpKeys = [\n\t\t'G', // 1 sharp\n\t\t'Em',\n\t\t'D', // 2 sharps\n\t\t'Bm',\n\t\t'A', // 3 sharps\n\t\t'F#m',\n\t\t'E', // 4 sharps\n\t\t'C#m',\n\t\t'B', // 5 sharps\n\t\t'G#m',\n\t\t'F#', // 6 sharps\n\t\t'D#m',\n\t\t'C#', // 7 sharps\n\t\t'A#m',\n\n\t\t// Theoretical keys\n\t\t'G#', // 8 sharps\n\t\t'D#', // 9 sharps\n\t\t'A#', // 10 sharps\n\t];\n\n\treturn sharpKeys.includes(keyString) ? 'sharp' : 'flat';\n}\n\n/**\n * Transpose a key, trying to avoid theoretical keys when `accidentalsType` is 'auto'.\n * Otherwise, the transposed key will use the given `accidentalsType`, e.g. 'sharp' or 'flat'.\n * @param {KeyDeclaration} keyModel\n * @param {number} transposeValue\n * @param {('auto'|'sharp'|'flat')} accidentalsType\n * @returns {KeyDeclaration}\n */\nexport function transposeKey(keyModel, transposeValue, accidentalsType) {\n\tconst theoreticalKeys = {\n\t\t'G#': 'Ab',\n\t\t'D#': 'Eb',\n\t\t'A#': 'Bb',\n\t\tDbm: 'C#m',\n\t\tGbm: 'F#m',\n\t};\n\n\tlet keyTemp;\n\n\tif (transposeValue === 0 && accidentalsType === 'auto') {\n\t\tkeyTemp = keyModel.string;\n\t} else {\n\t\tconst accidental =\n\t\t\taccidentalsType === 'auto'\n\t\t\t\t? transposeValue < 0\n\t\t\t\t\t? 'flat'\n\t\t\t\t\t: 'sharp'\n\t\t\t\t: accidentalsType;\n\t\tkeyTemp = doTranspose(keyModel.string, transposeValue, accidental);\n\t}\n\n\tconst transposedKey =\n\t\taccidentalsType === 'auto' && theoreticalKeys[keyTemp]\n\t\t\t? theoreticalKeys[keyTemp]\n\t\t\t: keyTemp;\n\n\treturn {\n\t\tstring: transposedKey,\n\t\taccidental: getKeyAccidental(transposedKey),\n\t};\n}\n\nfunction doTranspose(key, value, accidental) {\n\tconst isMinor = key.endsWith('m');\n\tconst note = key.replace('m', '');\n\n\tconst noteSharp = flatsToSharps[note] || note;\n\tconst noteIndex = allNotesSharp.indexOf(noteSharp);\n\n\tlet transposedIndex = noteIndex + value;\n\n\tif (transposedIndex < 0) {\n\t\ttransposedIndex += allNotesSharp.length;\n\t} else if (transposedIndex >= allNotesSharp.length) {\n\t\ttransposedIndex -= allNotesSharp.length;\n\t}\n\n\tconst transposedSharp = allNotesSharp[transposedIndex];\n\n\tconst transposed =\n\t\taccidental === 'flat'\n\t\t\t? sharpsToFlats[transposedSharp] || transposedSharp\n\t\t\t: transposedSharp;\n\n\treturn isMinor ? transposed + 'm' : transposed;\n}\n\n/**\n * Try to guess the key of a song based on its chords\n * @param {SongChord[]} allChords\n * @returns {(KeyDeclaration|undefined)}\n */\nexport function guessKey(allChords) {\n\tconst keyString = inferKeyFromChords(allChords);\n\n\treturn keyString\n\t\t? {\n\t\t\t\tstring: keyString,\n\t\t\t\taccidental: getKeyAccidental(keyString),\n\t\t\t}\n\t\t: undefined;\n}\n\nfunction inferKeyFromChords(allChords) {\n\tconst mostUsedChords = getMostUsedChordKeys(allChords);\n\n\tif (mostUsedChords.length === 0) return;\n\tif (mostUsedChords.length === 1) return mostUsedChords[0].keyString;\n\n\tconst lastSongChord = mostUsedChords.find((chord) => chord.isLast === true);\n\tif (lastSongChord) return lastSongChord.keyString;\n\n\tconst firstSongChord = mostUsedChords.find(\n\t\t(chord) => chord.isFirst === true\n\t);\n\tif (firstSongChord) return firstSongChord.keyString;\n\n\treturn mostUsedChords[0].keyString; // we give up!\n}\n\nfunction getMostUsedChordKeys(allChords) {\n\tlet maxFoundDuration = 0;\n\tlet mostUsedChordKeys = [];\n\n\tconst allChordsKey = [];\n\n\t_cloneDeep(allChords)\n\t\t.map((chord) => {\n\t\t\tchord.keyString = chord2Key(chord);\n\t\t\treturn chord;\n\t\t})\n\t\t.forEach((chord) => {\n\t\t\tconst i = _findIndex(\n\t\t\t\tallChordsKey,\n\t\t\t\t(o) => o.keyString === chord.keyString\n\t\t\t);\n\t\t\tif (i === -1) {\n\t\t\t\tallChordsKey.push(chord);\n\t\t\t} else {\n\t\t\t\tallChordsKey[i].duration += chord.duration;\n\t\t\t\tif (chord.isLast) allChordsKey[i].isLast = true;\n\t\t\t}\n\t\t});\n\n\tallChordsKey\n\t\t.map((chord) => {\n\t\t\t// give more weight to first and last chords\n\t\t\tif (chord.isLast) {\n\t\t\t\tchord.duration *= 1.25;\n\t\t\t}\n\t\t\tif (chord.isFirst) {\n\t\t\t\tchord.duration *= 1.25;\n\t\t\t}\n\t\t\treturn chord;\n\t\t})\n\t\t.forEach((chord) => {\n\t\t\tif (chord.duration > maxFoundDuration) {\n\t\t\t\tmostUsedChordKeys = [chord];\n\t\t\t\tmaxFoundDuration = chord.duration;\n\t\t\t} else if (chord.duration === maxFoundDuration) {\n\t\t\t\tmostUsedChordKeys.push(chord);\n\t\t\t}\n\t\t});\n\n\treturn mostUsedChordKeys;\n}\n\nfunction chord2Key(chord) {\n\tconst chordModel = _cloneDeep(chord.model);\n\n\t// chord-symbol's qualities: https://github.com/no-chris/chord-symbol/blob/master/packages/chord-symbol/src/dictionaries/qualities.js\n\tconst majorQualities = [\n\t\t'major',\n\t\t'major6',\n\t\t'major7',\n\t\t'dominant7',\n\t\t'augmented',\n\n\t\t'power', // duh!\n\t\t'bass', // re-duh!\n\t];\n\n\tlet keyString = chordModel.formatted.rootNote;\n\n\tif (!majorQualities.includes(chordModel.normalized.quality)) {\n\t\tkeyString += 'm';\n\t}\n\n\treturn keyString;\n}\n\n/**\n * Return the number of semitones between two keys notes\n * @param {string} key1\n * @param {string} key2\n * @returns {Number}\n */\nexport function getSemitonesBetweenKeys(key1, key2) {\n\tif (!key1 || !key2) return 0;\n\n\treturn getSemitonesBetweenNotes(\n\t\tkey1.replace('m', ''),\n\t\tkey2.replace('m', '')\n\t);\n}\n\nfunction getSemitonesBetweenNotes(note1, note2) {\n\tconst noteSharp1 = flatsToSharps[note1] || note1;\n\tconst noteSharp2 = flatsToSharps[note2] || note2;\n\n\tconst indexNote1 = allNotesSharp.indexOf(noteSharp1);\n\tconst indexNote2 = allNotesSharp.indexOf(noteSharp2);\n\n\tif (indexNote1 === -1 || indexNote2 === -1) return 0;\n\n\tconst semitones = indexNote2 - indexNote1;\n\n\treturn semitones < 0 ? semitones + 12 : semitones;\n}\n","import _escapeRegExp from 'lodash/escapeRegExp';\nimport syntax from '../syntax';\nimport clearSpaces from '../helper/clearSpaces';\nimport { isKey } from '../helper/keyHelpers';\n\nexport const keyDeclarationRegexp = new RegExp(\n\t'^' + _escapeRegExp(syntax.keyDeclarationPrefix) + '([ABCDEFG].*)$'\n);\n\nexport default function isKeyDeclaration(string) {\n\tconst found = clearSpaces(string).match(keyDeclarationRegexp);\n\tif (found === null) return false;\n\n\treturn isKey(found[1]);\n}\n","import clearSpaces from './helper/clearSpaces';\nimport isKeyDeclaration, {\n\tkeyDeclarationRegexp,\n} from './matchers/isKeyDeclaration';\nimport { getKeyAccidental } from './helper/keyHelpers';\n\n/**\n * @typedef {Object} KeyDeclaration\n * @type {Object}\n * @property {String} string\n * @property {('flat'|'sharp')} accidental\n */\n\n/**\n * @param {String} string\n * @returns {KeyDeclaration}\n */\nexport default function parseKeyDeclaration(string) {\n\tif (!isKeyDeclaration(string)) {\n\t\tthrow new TypeError('Expected key declaration, received: ' + string);\n\t}\n\n\tconst found = clearSpaces(string).match(keyDeclarationRegexp);\n\tconst keyString = found[1];\n\n\treturn {\n\t\tstring: keyString,\n\t\taccidental: getKeyAccidental(keyString),\n\t};\n}\n","import syntax from './syntax';\n\n/**\n * @typedef {Object} LyricLine\n * @type {Object}\n * @property {String} lyrics\n * @property {Number[]} chordPositions\n */\n\n/**\n * @param {String} string\n * @returns {LyricLine}\n */\nexport default function parseLyricLine(string) {\n\tconst stringWithoutForceLyricSymbol = string.startsWith(syntax.lyricLine)\n\t\t? string.substring(1)\n\t\t: string;\n\n\tconst regexp = new RegExp(syntax.chordPositionMarker, 'g');\n\tconst stringWithoutPositionMarkers = stringWithoutForceLyricSymbol.replace(\n\t\tregexp,\n\t\t''\n\t);\n\n\tconst chordPositions = [];\n\tlet tmpString = stringWithoutForceLyricSymbol;\n\tlet position;\n\n\twhile ((position = tmpString.indexOf(syntax.chordPositionMarker)) !== -1) {\n\t\tif (!chordPositions.includes(position)) {\n\t\t\tchordPositions.push(position);\n\t\t}\n\t\ttmpString = tmpString.replace(syntax.chordPositionMarker, '');\n\t}\n\treturn {\n\t\tlyrics: stringWithoutPositionMarkers,\n\t\tchordPositions,\n\t};\n}\n","import clearSpaces from './helper/clearSpaces';\nimport isSectionLabel, { sectionLabelRegexp } from './matchers/isSectionLabel';\n\n/**\n * @typedef {Object} SectionLabel\n * @type {Object}\n * @property {String} string - original string\n * @property {String} label - label of the section\n * @property {Number} multiplyTimes - number of times the section should be multiplied\n * @property {Number} copyIndex - index of the section that should be copied\n * Render-time properties\n * @property {Object} [rendered]\n * @property {String} [rendered.label]\n * @property {String} [rendered.multiplier]\n */\n\n/**\n * @param {String} string\n * @returns {SectionLabel}\n */\nexport default function parseSectionLabel(string) {\n\tif (!isSectionLabel(string)) {\n\t\tthrow new TypeError(\n\t\t\t'Expected section identifier string, received: ' + string\n\t\t);\n\t}\n\n\tconst found = clearSpaces(string).match(sectionLabelRegexp);\n\n\treturn {\n\t\tstring,\n\t\tlabel: found[1],\n\t\tcopyIndex: found[2] ? Number.parseInt(found[2]) : 1,\n\t\tmultiplyTimes: found[3]\n\t\t\t? Number.parseInt(found[3].replace(' x', ''))\n\t\t\t: 0,\n\t};\n}\n","import _cloneDeep from 'lodash/cloneDeep';\nimport _last from 'lodash/last';\n\nimport lineTypes from '../lineTypes';\n\n/**\n * @param {SongLine[]} allLines\n * @param {Function} fn - to execute on each bar\n * @returns {SongLine[]}\n */\nexport function forEachBarInSong(allLines, fn) {\n\tconst newLines = _cloneDeep(allLines);\n\n\tnewLines.forEach((line) => {\n\t\tif (line.type === lineTypes.CHORD) {\n\t\t\tline.model.allBars.forEach((bar) => {\n\t\t\t\tfn(bar);\n\t\t\t});\n\t\t}\n\t});\n\treturn newLines;\n}\n\n/**\n * @param {SongLine[]} allLines\n * @param {Function} fn - to execute on each chord\n * @returns {SongLine[]}\n */\nexport function forEachChordInSong(allLines, fn) {\n\tconst newLines = _cloneDeep(allLines);\n\n\tnewLines.forEach((line) => {\n\t\tif (line.type === lineTypes.CHORD) {\n\t\t\tline.model.allBars.forEach((bar) => {\n\t\t\t\tbar.allChords.forEach((chord) => {\n\t\t\t\t\tfn(chord);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n\treturn newLines;\n}\n\n/**\n * @param {ChordLine} chordLine\n * @param {Function} fn - to execute on each chord\n * @returns {ChordLine}\n */\nexport function forEachChordInChordLine(chordLine, fn) {\n\tconst newChordLine = _cloneDeep(chordLine);\n\n\tnewChordLine.allBars.forEach((bar, barIndex) => {\n\t\tbar.allChords.forEach((chord, chordIndex) => {\n\t\t\tfn(chord, chordIndex, barIndex);\n\t\t});\n\t});\n\n\treturn newChordLine;\n}\n\n/**\n * @param {SongLine[]} allLines\n * @param {String} label - the label to select\n * @param {Number} n - the index of the section to select\n * @returns {SongLine[]} all lines of the requested section\n */\nexport function getNthOfLabel(allLines, label, n) {\n\tconst selected = [];\n\tconst typesCount = {};\n\n\tlet enableSelect = false;\n\tlet currentLabel = '';\n\n\tallLines.forEach((line) => {\n\t\tif (line.type === lineTypes.SECTION_LABEL) {\n\t\t\tcurrentLabel = line.model.label;\n\n\t\t\tif (!typesCount[currentLabel]) {\n\t\t\t\ttypesCount[currentLabel] = 1;\n\t\t\t} else {\n\t\t\t\ttypesCount[currentLabel]++;\n\t\t\t}\n\n\t\t\tenableSelect = line.id === label + n;\n\t\t} else if (enableSelect) {\n\t\t\tselected.push(line);\n\t\t}\n\t});\n\n\t// remmove trailing directive lines\n\t// because they likely apply to the next section\n\t/**/\n\twhile (\n\t\t_last(selected) &&\n\t\t(_last(selected).type === lineTypes.KEY_DECLARATION ||\n\t\t\t_last(selected).type === lineTypes.TIME_SIGNATURE)\n\t) {\n\t\tselected.pop();\n\t}\n\t/** */\n\treturn selected;\n}\n","/*eslint-disable max-lines-per-function,max-lines */\nimport _cloneDeep from 'lodash/cloneDeep';\nimport lineTypes from './lineTypes';\n\nimport isChordLine from './matchers/isChordLine';\nimport isChordLineRepeater from './matchers/isChordLineRepeater';\nimport isEmptyLine from './matchers/isEmptyLine';\nimport isSectionLabel from './matchers/isSectionLabel';\nimport isTimeSignature from './matchers/isTimeSignatureString';\n\nimport parseChordLine from './parseChordLine';\nimport parseKeyDeclaration from './parseKeyDeclaration';\nimport parseLyricLine from './parseLyricLine';\nimport parseSectionLabel from './parseSectionLabel';\nimport parseTimeSignature from './parseTimeSignature';\n\nimport clearSpaces from './helper/clearSpaces';\n\nimport { forEachChordInChordLine, getNthOfLabel } from './helper/songs';\nimport isKeyDeclaration from './matchers/isKeyDeclaration';\n\nconst defaultTimeSignature = '4/4';\n\n/**\n * @typedef {Object} SongLine\n * @type {Object}\n * @property {String} string - original line in source file\n * @property {String} type - chord|lyric|timeSignature|sectionLabel...\n * @property {Boolean} [isFromSectionMultiply] - line created by a section multiply directive (#chorus x3, for ex)\n * @property {Boolean} [isFromSectionCopy] - line created by a section copy (eg empty # section)\n * @property {Boolean} [isFromAutoRepeatChords] - line created by auto repeats of chords from a section to another\n */\n\n/**\n * @typedef {SongLine} SongChordLine\n * @type {Object}\n * @property {ChordLine} model\n * @property {Boolean} [isFromChordLineRepeater] - line created by the chordLine repeat symbol\n */\n\n/**\n * @typedef {SongLine} SongTimeSignatureLine\n * @type {Object}\n * @property {TimeSignature} model\n */\n\n/**\n * @typedef {SongLine} SongLyricLine\n * @type {Object}\n * @property {LyricLine} model\n */\n\n/**\n * @typedef {SongLine} SongSectionLabelLine\n * @type {Object}\n * @property {SectionLabel} model\n * @property {Number} index - index of the section for a given label (#v, #v x2, #v => 1, 2, 3, 4)\n * @property {Number} indexWithoutMultiply - idem, but not taking repeats into account (#v, #v x2, #v => 1, 2, 3)\n * @property {String} id\n */\n\n/**\n * @typedef {SongLine} SongKeyDeclarationLine\n * @type {Object}\n * @property {KeyDeclaration} model\n * @property {String} [symbol] - rendering property\n */\n\nexport default function songLinesFactory() {\n\tconst allLines = [];\n\tconst sectionsStats = {};\n\n\tlet currentTimeSignature = parseTimeSignature(defaultTimeSignature);\n\tlet currentSection;\n\tlet currentSectionStats;\n\n\tlet currentKey = {};\n\n\tconst MAX_PREVIOUS_CHORD_LINES = 2;\n\tlet previousChordLines = [];\n\tlet previousSectionLabelLine;\n\n\tlet blueprint = [];\n\tlet blueprintIndex = 0;\n\n\tlet shouldMultiplySection = false;\n\tlet shouldCopySection = false;\n\n\t/**\n\t * @returns {SongTimeSignatureLine}\n\t */\n\tfunction getTimeSignatureLine(string) {\n\t\tcurrentTimeSignature = parseTimeSignature(string);\n\n\t\treturn {\n\t\t\tstring,\n\t\t\ttype: lineTypes.TIME_SIGNATURE,\n\t\t\tmodel: currentTimeSignature,\n\t\t};\n\t}\n\n\t/**\n\t * @returns {SongKeyDeclarationLine}\n\t */\n\tfunction getKeyDeclarationLine(string) {\n\t\tcurrentKey = parseKeyDeclaration(string);\n\t\treturn {\n\t\t\tstring,\n\t\t\ttype: lineTypes.KEY_DECLARATION,\n\t\t\tmodel: _cloneDeep(currentKey),\n\t\t};\n\t}\n\n\t/**\n\t * @returns {SongSectionLabelLine}\n\t */\n\tfunction getSectionLabelLine(string, lineIndex, allSrcLines) {\n\t\tcurrentSection = parseSectionLabel(string);\n\n\t\tincreaseSectionStats(currentSection.label);\n\t\tcurrentSectionStats = getSectionCount(currentSection.label);\n\n\t\tconst line = {\n\t\t\tstring,\n\t\t\ttype: lineTypes.SECTION_LABEL,\n\t\t\tmodel: currentSection,\n\t\t\tindex: currentSectionStats.count,\n\t\t\tindexWithoutMultiply: currentSectionStats.withoutMultiply,\n\t\t\tid: currentSection.label + currentSectionStats.count,\n\t\t};\n\n\t\tshouldCopySection =\n\t\t\tisCurrentSectionEmpty(lineIndex, allSrcLines) &&\n\t\t\tcurrentSectionStats.count > 1;\n\t\tif (shouldCopySection) {\n\t\t\tline.isFromSectionCopy = true;\n\t\t}\n\n\t\tshouldMultiplySection = currentSection.multiplyTimes > 0;\n\t\tpreviousSectionLabelLine = _cloneDeep(line);\n\n\t\tblueprint =\n\t\t\tcurrentSectionStats.count > 1\n\t\t\t\t? getNthOfLabel(allLines, currentSection.label, 1)\n\t\t\t\t: [];\n\t\tblueprintIndex = 0;\n\n\t\treturn line;\n\t}\n\n\t/**\n\t * @returns {SongLyricLine}\n\t */\n\tfunction getEmptyLine(string) {\n\t\treturn {\n\t\t\tstring,\n\t\t\ttype: lineTypes.EMPTY_LINE,\n\t\t};\n\t}\n\n\t/**\n\t * @returns {SongChordLine|SongLyricLine}\n\t */\n\tfunction getChordLine(string) {\n\t\tlet line;\n\t\ttry {\n\t\t\tconst model = parseChordLine(string, {\n\t\t\t\ttimeSignature: currentTimeSignature,\n\t\t\t\toriginalKey: currentKey,\n\t\t\t});\n\t\t\tline = {\n\t\t\t\tstring,\n\t\t\t\ttype: lineTypes.CHORD,\n\t\t\t\tmodel,\n\t\t\t};\n\t\t\taddPreviousChordLine(line);\n\t\t} catch (e) {\n\t\t\tline = getLyricLine(string);\n\t\t}\n\t\treturn line;\n\t}\n\n\tfunction addPreviousChordLine(line) {\n\t\tif (previousChordLines.length >= MAX_PREVIOUS_CHORD_LINES) {\n\t\t\tpreviousChordLines.shift();\n\t\t}\n\t\tpreviousChordLines.push(line);\n\t}\n\n\t/**\n\t * @returns {SongChordLine|SongLyricLine}\n\t */\n\tfunction getRepeatedChordLine(string) {\n\t\tconst repeatString = clearSpaces(string);\n\t\tconst sliceStart = -repeatString.length;\n\t\tconst sliceEnd = sliceStart < -1 ? sliceStart + 1 : undefined;\n\n\t\tif (previousChordLines.length >= repeatString.length) {\n\t\t\treturn {\n\t\t\t\t..._cloneDeep(\n\t\t\t\t\t...previousChordLines.slice(sliceStart, sliceEnd)\n\t\t\t\t),\n\t\t\t\tisFromChordLineRepeater: true,\n\t\t\t};\n\t\t}\n\t\treturn getLyricLine(string);\n\t}\n\n\t/**\n\t * @returns {SongLyricLine}\n\t */\n\tfunction getLyricLine(string) {\n\t\treturn {\n\t\t\tstring,\n\t\t\ttype: lineTypes.LYRIC,\n\t\t\tmodel: parseLyricLine(string),\n\t\t};\n\t}\n\n\tfunction increaseSectionStats(label, isMultiplied = false) {\n\t\tif (!sectionsStats[label]) {\n\t\t\tsectionsStats[label] = {\n\t\t\t\tcount: 1,\n\t\t\t\twithoutMultiply: 1,\n\t\t\t};\n\t\t} else {\n\t\t\tsectionsStats[label].count++;\n\t\t\tif (!isMultiplied) {\n\t\t\t\tsectionsStats[label].withoutMultiply++;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getSectionCount(label) {\n\t\treturn sectionsStats[label];\n\t}\n\n\tfunction repeatLinesFromBlueprint(line) {\n\t\tif (blueprint.length && line.type !== lineTypes.SECTION_LABEL) {\n\t\t\tlet blueprintLine = blueprint[blueprintIndex];\n\t\t\tlet repeatedLine;\n\n\t\t\twhile (shouldRepeatLineFromBlueprint(blueprintLine, line)) {\n\t\t\t\tif (blueprintLine.type === lineTypes.CHORD) {\n\t\t\t\t\taddPreviousChordLine(_cloneDeep(blueprintLine));\n\t\t\t\t}\n\t\t\t\trepeatedLine = {\n\t\t\t\t\t..._cloneDeep(blueprintLine),\n\t\t\t\t\tisFromAutoRepeatChords: true,\n\t\t\t\t};\n\t\t\t\tallLines.push(repeatedLine);\n\t\t\t\tblueprintIndex++;\n\t\t\t\tblueprintLine = blueprint[blueprintIndex];\n\t\t\t}\n\t\t\tblueprintIndex++;\n\t\t}\n\t}\n\n\tfunction shouldRepeatLineFromBlueprint(blueprintLine, currentLine) {\n\t\tconst nonRepeatableLinesTypes = [lineTypes.LYRIC, lineTypes.EMPTY_LINE];\n\t\treturn (\n\t\t\tblueprintLine &&\n\t\t\t!nonRepeatableLinesTypes.includes(blueprintLine.type) &&\n\t\t\tblueprintLine.type !== currentLine.type &&\n\t\t\tcurrentLine.type !== lineTypes.EMPTY_LINE\n\t\t);\n\t}\n\n\tfunction copySection() {\n\t\tif (shouldCopySection) {\n\t\t\tconst toCopy = getNthOfLabel(\n\t\t\t\tallLines,\n\t\t\t\tcurrentSection.label,\n\t\t\t\tcurrentSection.copyIndex\n\t\t\t).map((line) => ({\n\t\t\t\t..._cloneDeep(line),\n\t\t\t\tisFromSectionCopy: true,\n\t\t\t}));\n\n\t\t\tif (!toCopy.length) return;\n\n\t\t\tif (endsWithEmptyLine(toCopy)) {\n\t\t\t\ttoCopy.pop();\n\t\t\t}\n\n\t\t\tallLines.push(..._cloneDeep(toCopy));\n\n\t\t\tshouldCopySection = false;\n\t\t}\n\t}\n\n\tfunction isCurrentSectionEmpty(lineIndex, allSrcLines) {\n\t\tconst remainingLines = allSrcLines.slice(lineIndex + 1);\n\n\t\tlet nextSectionIndex = remainingLines.findIndex((line) =>\n\t\t\tisSectionLabel(line)\n\t\t);\n\n\t\tif (nextSectionIndex === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst currentSectionContent = remainingLines\n\t\t\t.slice(0, nextSectionIndex !== -1 ? nextSectionIndex : undefined)\n\t\t\t.filter(\n\t\t\t\t(line) =>\n\t\t\t\t\t!(\n\t\t\t\t\t\tisTimeSignature(line) ||\n\t\t\t\t\t\tisKeyDeclaration(line) ||\n\t\t\t\t\t\tisEmptyLine(line)\n\t\t\t\t\t)\n\t\t\t);\n\n\t\treturn currentSectionContent.length === 0;\n\t}\n\n\tfunction multiplySection(lineIndex, allSrcLines) {\n\t\tif (\n\t\t\tshouldMultiplySection &&\n\t\t\tisLastLineOfSection(lineIndex, allSrcLines)\n\t\t) {\n\t\t\tconst toMultiply = getNthOfLabel(\n\t\t\t\tallLines,\n\t\t\t\tcurrentSection.label,\n\t\t\t\tcurrentSectionStats.count\n\t\t\t).map((line) => ({\n\t\t\t\t..._cloneDeep(line),\n\t\t\t\tisFromSectionMultiply: true,\n\t\t\t}));\n\t\t\tlet sectionLabelLine;\n\n\t\t\tfor (let i = 1; i < currentSection.multiplyTimes; i++) {\n\t\t\t\tincreaseSectionStats(currentSection.label, true);\n\t\t\t\tcurrentSectionStats = getSectionCount(currentSection.label);\n\n\t\t\t\tsectionLabelLine = {\n\t\t\t\t\t..._cloneDeep(previousSectionLabelLine),\n\t\t\t\t\tindex: currentSectionStats.count,\n\t\t\t\t\tindexWithoutMultiply: currentSectionStats.withoutMultiply,\n\t\t\t\t\tid: currentSection.label + currentSectionStats.count,\n\t\t\t\t\tisFromSectionMultiply: true,\n\t\t\t\t};\n\t\t\t\tallLines.push(sectionLabelLine);\n\t\t\t\tallLines.push(..._cloneDeep(toMultiply));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\taddLine(lineSrc, lineIndex, allSrcLines) {\n\t\t\tlet line;\n\t\t\tif (isTimeSignature(lineSrc)) {\n\t\t\t\tline = getTimeSignatureLine(lineSrc);\n\t\t\t} else if (isSectionLabel(lineSrc)) {\n\t\t\t\tline = getSectionLabelLine(lineSrc, lineIndex, allSrcLines);\n\t\t\t} else if (isChordLine(lineSrc)) {\n\t\t\t\tline = getChordLine(lineSrc);\n\t\t\t} else if (isChordLineRepeater(lineSrc)) {\n\t\t\t\tline = getRepeatedChordLine(lineSrc);\n\t\t\t} else if (isEmptyLine(lineSrc)) {\n\t\t\t\tline = getEmptyLine(lineSrc);\n\t\t\t} else if (isKeyDeclaration(lineSrc)) {\n\t\t\t\tline = getKeyDeclarationLine(lineSrc);\n\t\t\t} else {\n\t\t\t\tline = getLyricLine(lineSrc);\n\t\t\t}\n\n\t\t\trepeatLinesFromBlueprint(line);\n\n\t\t\tallLines.push(line);\n\n\t\t\tcopySection();\n\t\t\tmultiplySection(lineIndex, allSrcLines);\n\t\t},\n\n\t\t/**\n\t\t * returns {SongLine[]}\n\t\t */\n\t\tasArray() {\n\t\t\treturn _cloneDeep(allLines);\n\t\t},\n\n\t\tflagPositionedChords() {\n\t\t\tlet nextLine;\n\t\t\tlet lineChordCount;\n\n\t\t\tallLines.forEach((line, lineIndex) => {\n\t\t\t\tnextLine = allLines[lineIndex + 1];\n\n\t\t\t\tif (shouldPositionChords(line, nextLine)) {\n\t\t\t\t\tlineChordCount = 0;\n\t\t\t\t\tline.model.hasPositionedChords = true;\n\t\t\t\t\tline.model = forEachChordInChordLine(\n\t\t\t\t\t\tline.model,\n\t\t\t\t\t\t(chord) => {\n\t\t\t\t\t\t\tchord.isPositioned =\n\t\t\t\t\t\t\t\tlineChordCount <\n\t\t\t\t\t\t\t\tnextLine.model.chordPositions.length;\n\t\t\t\t\t\t\tlineChordCount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else if (line.type === lineTypes.CHORD) {\n\t\t\t\t\tline.model.hasPositionedChords = false;\n\t\t\t\t\tline.model = forEachChordInChordLine(\n\t\t\t\t\t\tline.model,\n\t\t\t\t\t\t(chord) => {\n\t\t\t\t\t\t\tchord.isPositioned = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t};\n}\n\nfunction isLastLineOfSection(lineIndex, allSrcLines) {\n\tconst nextLine = allSrcLines[lineIndex + 1];\n\treturn typeof nextLine === 'undefined' || isSectionLabel(nextLine);\n}\n\nfunction shouldPositionChords(line, nextLine) {\n\treturn (\n\t\tline.type === lineTypes.CHORD &&\n\t\tnextLine &&\n\t\tnextLine.type === lineTypes.LYRIC &&\n\t\tnextLine.model.chordPositions.length > 0\n\t);\n}\n\nfunction endsWithEmptyLine(allLines) {\n\tconst lastLine = allLines[allLines.length - 1];\n\treturn lastLine.type === lineTypes.EMPTY_LINE;\n}\n","import _findIndex from 'lodash/findIndex';\nimport _isEqual from 'lodash/isEqual';\nimport _omit from 'lodash/omit';\nimport _cloneDeep from 'lodash/cloneDeep';\n\nimport { forEachChordInSong } from './helper/songs';\nimport syntax from './syntax';\n\n/**\n * @param {SongLine[]} allLines\n * @returns {SongChord[]}\n */\nexport default function getAllChordsInSong(allLines) {\n\tconst allChords = [];\n\tlet i;\n\n\tforEachChordInSong(allLines, (chord) => {\n\t\tif (chord.model !== syntax.noChord) {\n\t\t\ti = _findIndex(allChords, (o) =>\n\t\t\t\t_isEqual(\n\t\t\t\t\t_omit(o.model, ['numeral']),\n\t\t\t\t\t_omit(chord.model, ['numeral'])\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tif (i === -1) {\n\t\t\t\tallChords.push({\n\t\t\t\t\tmodel: _cloneDeep(chord.model),\n\t\t\t\t\toccurrences: 1,\n\t\t\t\t\tduration: chord.duration,\n\t\t\t\t});\n\t\t\t\ti = allChords.length - 1;\n\t\t\t} else {\n\t\t\t\tallChords[i].occurrences++;\n\t\t\t\tallChords[i].duration += chord.duration;\n\t\t\t}\n\t\t}\n\t});\n\n\tif (allChords.length) {\n\t\tallChords[0].isFirst = true;\n\t\tallChords[i].isLast = true;\n\t}\n\n\treturn allChords;\n}\n","import _cloneDeep from 'lodash/cloneDeep';\n\nimport lineTypes from './lineTypes';\nimport { guessKey } from './helper/keyHelpers';\n\n/**\n * @param {SongLine[]} allLines\n * @param {SongChord[]} allChords\n * @returns {SongKeys}\n */\nexport default function getAllKeysInSong(allLines, allChords) {\n\tconst allKeys = {\n\t\tauto: undefined,\n\t\texplicit: [],\n\t};\n\n\tallLines.forEach((line) => {\n\t\tif (line.type === lineTypes.KEY_DECLARATION) {\n\t\t\tallKeys.explicit.push(_cloneDeep(line.model));\n\t\t}\n\t});\n\n\tif (allKeys.explicit.length === 0) {\n\t\tconst autoDetectedKey = guessKey(allChords);\n\t\tif (autoDetectedKey) {\n\t\t\tallKeys.auto = autoDetectedKey;\n\t\t}\n\t}\n\n\treturn allKeys;\n}\n","import _isArray from 'lodash/isArray';\n\nimport escapeHTML from '../core/dom/escapeHTML';\nimport stripTags from '../core/dom/stripTags';\n\nimport songLinesFactory from './songLinesFactory';\n\nimport getAllChordsInSong from './getAllChordsInSong';\nimport getAllKeysInSong from './getAllKeysInSong';\n\n/**\n * @typedef {Object} Song\n * @type {Object}\n * @property {SongLine[]} allLines\n * @property {SongChord[]} allChords\n * @property {SongKeys} allKeys\n */\n\n/**\n * @typedef {Object} SongChord\n * @type {Object}\n * @property {ChordDef} model\n * @property {number} occurrences - number of times the chord appears in the song\n * @property {number} duration - in beats, cumulated duration of the chord\n */\n\n/**\n * @typedef {Object} SongKeys\n * @type {Object}\n * @property {KeyDeclaration} auto - automatically detected key\n * @property {KeyDeclaration[]} explicit - explicitly declared keys\n */\n\n/**\n * @param {string|array} songSrc\n * @returns {Song}\n */\nexport default function parseSong(songSrc) {\n\tconst songArray = !_isArray(songSrc) ? songSrc.split('\\n') : songSrc;\n\n\tconst songLines = songLinesFactory();\n\n\t/**\n\t * @type {SongLine[]}\n\t */\n\tsongArray.map(escapeHTML).map(stripTags).forEach(songLines.addLine);\n\n\tsongLines.flagPositionedChords();\n\n\tconst allLines = songLines.asArray();\n\tconst allChords = getAllChordsInSong(allLines);\n\tconst allKeys = getAllKeysInSong(allLines, allChords);\n\n\treturn {\n\t\tallLines,\n\t\tallChords,\n\t\tallKeys,\n\t};\n}\n","export default {\n\tbarRepeat: '%',\n\tbarSeparator: '|',\n\tchordBeat: '.',\n\tchordLineOffsetSpacer: ' ',\n\temptyBeatSpaces: 1,\n\tkeyDeclarationPrefix: 'key: ',\n\tlyricsSpacer: ' ',\n\tnoChordSymbol: 'NC',\n\tspacesAfterDefault: 2,\n\tspacesAfterSubBeatDefault: 1,\n\tspacesAfterTimeSignature: 1,\n\tsubBeatGroupOpener: '[',\n\tsubBeatGroupCloser: ']',\n};\n","import symbols from '../../symbols';\n\n/**\n * Returns the rendered string of a given beat, e.g. a single chord or a sub-beat group of chords.\n * This is useful for the purpose of measuring a beat length (e.g. alignment)\n * @param {Bar} bar\n * @param {Number} beatIndex\n * @param {Object} options\n * @param {Boolean} options.shouldPrintSubBeatDelimiters\n * @param {('chord'|'roman')} options.symbolType\n * @returns {String}\n */\nexport function getBeatString(\n\tbar,\n\tbeatIndex,\n\t{ shouldPrintSubBeatDelimiters = true, symbolType = 'chord' } = {}\n) {\n\tconst beatChords = bar.allChords.filter(\n\t\t(chord) => chord.beat === beatIndex\n\t);\n\n\tswitch (beatChords.length) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1: {\n\t\t\treturn getChordString(bar, beatChords[0], {\n\t\t\t\tshouldPrintSubBeatDelimiters,\n\t\t\t\tsymbolType,\n\t\t\t});\n\t\t}\n\t\tdefault: {\n\t\t\treturn beatChords.reduce((allChords, chord, i) => {\n\t\t\t\tconst spacesBefore =\n\t\t\t\t\ti > 0 ? ' '.repeat(symbols.spacesAfterSubBeatDefault) : '';\n\t\t\t\treturn (\n\t\t\t\t\tallChords +\n\t\t\t\t\tspacesBefore +\n\t\t\t\t\tgetChordString(bar, chord, {\n\t\t\t\t\t\tshouldPrintSubBeatDelimiters,\n\t\t\t\t\t\tsymbolType,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}, '');\n\t\t}\n\t}\n}\n\n/**\n * Returns the rendered string of a given chord\n * This is useful for the purpose of measuring a beat length (e.g. alignment)\n * @param {Bar} bar\n * @param {ChordDef} chord\n * @param {Object} options\n * @param {Boolean} options.shouldPrintSubBeatDelimiters\n * @param {('chord'|'roman')} options.symbolType\n * @returns {String}\n */\nexport function getChordString(\n\tbar,\n\tchord,\n\t{ shouldPrintSubBeatDelimiters, symbolType = 'chord' }\n) {\n\tconst shouldPrintChordSymbol =\n\t\tsymbolType === 'chord' ||\n\t\tchord.model === symbols.barRepeat ||\n\t\tchord.model === symbols.noChordSymbol;\n\n\tconst symbol = shouldPrintChordSymbol\n\t\t? chord.symbol\n\t\t: chord.model.numeral.symbol;\n\n\tif (!chord.isInSubBeatGroup) {\n\t\tconst chordDuration = bar.shouldPrintChordsDuration\n\t\t\t? symbols.chordBeat.repeat(chord.duration)\n\t\t\t: '';\n\t\treturn symbol + chordDuration;\n\t} else {\n\t\tif (shouldPrintSubBeatDelimiters && chord.isFirstOfSubBeat) {\n\t\t\treturn symbols.subBeatGroupOpener + symbol;\n\t\t} else if (shouldPrintSubBeatDelimiters && chord.isLastOfSubBeat) {\n\t\t\treturn symbol + symbols.subBeatGroupCloser;\n\t\t} else {\n\t\t\treturn symbol;\n\t\t}\n\t}\n}\n","import { getBeatString } from './getBeatString';\n\nimport lineTypes from '../../../parser/lineTypes';\n\n/**\n * @param {SongLine[]} allLines\n * @param {Object} options\n * @param {Function} options.shouldAlignChordsWithLyrics\n * @param {Boolean} options.shouldPrintSubBeatDelimiters\n * @param {('chord'|'roman')} options.symbolType\n * @returns {Array}\n */\nexport default function getMaxBeatsWidth(\n\tallLines,\n\t{\n\t\tshouldAlignChordsWithLyrics,\n\t\tshouldPrintSubBeatDelimiters = true,\n\t\tsymbolType = 'chord',\n\t}\n) {\n\tconst maxBeatsWidth = [];\n\n\tallLines\n\t\t.filter((line) => line.type === lineTypes.CHORD)\n\t\t.filter((line) => !shouldAlignChordsWithLyrics(line))\n\t\t.forEach((line) => {\n\t\t\tline.model.allBars\n\t\t\t\t.filter((bar) => !bar.lineHadTimeSignatureChange)\n\t\t\t\t.forEach((bar, barIndex) => {\n\t\t\t\t\tif (!maxBeatsWidth[barIndex]) {\n\t\t\t\t\t\tmaxBeatsWidth[barIndex] = {};\n\n\t\t\t\t\t\tfor (let i = 1; i <= bar.timeSignature.beatCount; i++) {\n\t\t\t\t\t\t\tmaxBeatsWidth[barIndex][i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbar.allChords\n\t\t\t\t\t\t.filter(\n\t\t\t\t\t\t\t(chord) =>\n\t\t\t\t\t\t\t\t!chord.isInSubBeatGroup || chord.isLastOfSubBeat\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.forEach((chord) => {\n\t\t\t\t\t\t\tconst beatString = getBeatString(bar, chord.beat, {\n\t\t\t\t\t\t\t\tshouldPrintSubBeatDelimiters,\n\t\t\t\t\t\t\t\tsymbolType,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tmaxBeatsWidth[barIndex][chord.beat] = Math.max(\n\t\t\t\t\t\t\t\tmaxBeatsWidth[barIndex][chord.beat],\n\t\t\t\t\t\t\t\tbeatString.length\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\n\treturn maxBeatsWidth;\n}\n","import _cloneDeep from 'lodash/cloneDeep';\nimport symbols from '../../symbols';\n\n/**\n * Simple spacer: simply happens default spaces value after each chord.\n * @param {ChordLine} chordLineInput\n */\nexport default function space(chordLineInput) {\n\tconst chordLine = _cloneDeep(chordLineInput);\n\n\tchordLine.allBars.forEach((bar) => {\n\t\tspaceBar(bar);\n\t});\n\n\treturn chordLine;\n}\n\nexport function spaceBar(bar) {\n\tbar.allChords.forEach((chord) => {\n\t\tchord.spacesAfter =\n\t\t\tchord.isInSubBeatGroup && !chord.isLastOfSubBeat\n\t\t\t\t? symbols.spacesAfterSubBeatDefault\n\t\t\t\t: symbols.spacesAfterDefault;\n\t\tchord.spacesWithin = 0;\n\t});\n}\n","import _cloneDeep from 'lodash/cloneDeep';\nimport symbols from '../../symbols';\nimport { getBeatString } from './getBeatString';\nimport { spaceBar } from './simple';\n\n/**\n * @param {ChordLine} chordLineInput\n * @param {Array} maxBeatsWidth\n * @param {Object} options\n * @param {Boolean} options.shouldPrintBarSeparators\n * @param {Boolean} options.shouldPrintSubBeatDelimiters\n * @param {('chord'|'roman')} options.symbolType\n * @returns {ChordLine}\n */\nexport default function space(\n\tchordLineInput,\n\tmaxBeatsWidth,\n\t{\n\t\tshouldPrintBarSeparators = true,\n\t\tshouldPrintSubBeatDelimiters = true,\n\t\tsymbolType = 'chord',\n\t}\n) {\n\tconst chordLine = _cloneDeep(chordLineInput);\n\n\tchordLine.allBars.forEach((bar, barIndex) => {\n\t\tif (bar.lineHadTimeSignatureChange) {\n\t\t\tspaceBar(bar);\n\t\t} else {\n\t\t\tbar.allChords.forEach((chord) => {\n\t\t\t\tconst beatString = getBeatString(bar, chord.beat, {\n\t\t\t\t\tshouldPrintSubBeatDelimiters,\n\t\t\t\t\tsymbolType,\n\t\t\t\t});\n\n\t\t\t\tif (chord.isInSubBeatGroup && !chord.isLastOfSubBeat) {\n\t\t\t\t\tchord.spacesWithin = 0;\n\t\t\t\t\tchord.spacesAfter = symbols.spacesAfterSubBeatDefault;\n\t\t\t\t} else {\n\t\t\t\t\tchord.spacesWithin =\n\t\t\t\t\t\tmaxBeatsWidth[barIndex][chord.beat] - beatString.length;\n\t\t\t\t\tchord.spacesAfter = 0;\n\t\t\t\t}\n\n\t\t\t\tif (shouldFillEmptyBeats(bar, chord)) {\n\t\t\t\t\tchord.spacesAfter =\n\t\t\t\t\t\tsymbols.spacesAfterDefault +\n\t\t\t\t\t\tgetEmptyBeatsWidth(bar, chord, maxBeatsWidth[barIndex]);\n\t\t\t\t}\n\n\t\t\t\tif (shouldSpaceLastBeat(bar, chord, shouldPrintBarSeparators)) {\n\t\t\t\t\tchord.spacesAfter = symbols.spacesAfterDefault;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\n\treturn chordLine;\n}\n\nconst shouldFillEmptyBeats = (bar, chord) => {\n\treturn (\n\t\t(!chord.isInSubBeatGroup || chord.isLastOfSubBeat) &&\n\t\t!isLastBeatOfBar(bar, chord)\n\t);\n};\n\nconst getEmptyBeatsWidth = (bar, chord, maxBeatsWidthForBar) => {\n\tlet spacesAfter = 0;\n\n\tfor (let i = chord.beat + 1; i < chord.beat + chord.duration; i++) {\n\t\tconst beatMaxWidth = maxBeatsWidthForBar[i];\n\n\t\tspacesAfter += beatMaxWidth ? beatMaxWidth : symbols.emptyBeatSpaces;\n\n\t\tif (i !== bar.timeSignature.beatCount && beatMaxWidth) {\n\t\t\tspacesAfter += symbols.spacesAfterDefault;\n\t\t}\n\t}\n\treturn spacesAfter;\n};\n\nconst isLastBeatOfBar = (bar, chord) => {\n\treturn chord.beat === bar.timeSignature.beatCount;\n};\n\nconst shouldSpaceLastBeat = (bar, chord, shouldPrintBarSeparators) => {\n\treturn (\n\t\t!shouldPrintBarSeparators &&\n\t\tisLastBeatOfBar(bar, chord) &&\n\t\t(!chord.isInSubBeatGroup || chord.isLastOfSubBeat)\n\t);\n};\n","/* eslint-disable max-lines-per-function */\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { getChordString } from './getBeatString';\n\nimport symbols from '../../symbols';\n\nconst chordSpaceAfterDefault = 1;\n\n/**\n * Space chords and lyrics, so they are aligned with each other:\n * - for chords: adjust the spaceAfter property of each chord object\n * - for lyrics: create a new string with extra spaces where needed\n *\n * @param {ChordLine} chordLineInput\n * @param {LyricLine} lyricsLineInput\n * @param {Boolean} shouldPrintBarSeparators\n * @param {Boolean} shouldPrintSubBeatDelimiters\n * @param {Boolean} shouldPrintInlineTimeSignatures\n * @param {('chord'|'roman')} symbolType\n * @returns {Object}\n */\nexport default function space(\n\tchordLineInput,\n\tlyricsLineInput,\n\t{\n\t\tshouldPrintBarSeparators = true,\n\t\tshouldPrintSubBeatDelimiters = true,\n\t\tshouldPrintInlineTimeSignatures = true,\n\t\tsymbolType = 'chord',\n\t} = {}\n) {\n\tif (hasNoPositionMarkers(lyricsLineInput)) {\n\t\treturn {\n\t\t\tchordLine: chordLineInput,\n\t\t\tlyricsLine: lyricsLineInput,\n\t\t};\n\t}\n\n\tconst chordLine = _cloneDeep(chordLineInput);\n\tconst lyricsLine = _cloneDeep(lyricsLineInput);\n\n\tconst tokenizedLyrics = lyricsLine.chordPositions.map(\n\t\t(position, i, allPositions) => {\n\t\t\treturn lyricsLine.lyrics.substring(position, allPositions[i + 1]);\n\t\t}\n\t);\n\n\tlet timeSignatureString = '';\n\tlet spacedLyricsLine = '';\n\tlet chordToken;\n\tlet lyricToken;\n\n\tchordLine.allBars.forEach((bar, barIndex) => {\n\t\tbar.allChords.forEach((chord, chordIndex, allChords) => {\n\t\t\tlyricToken = tokenizedLyrics.shift(); // get next lyric token\n\n\t\t\tif (lyricToken) {\n\t\t\t\ttimeSignatureString =\n\t\t\t\t\tchordIndex === 0 &&\n\t\t\t\t\tshouldPrintInlineTimeSignatures &&\n\t\t\t\t\tbar.shouldPrintBarTimeSignature\n\t\t\t\t\t\t? bar.timeSignature.string +\n\t\t\t\t\t\t\tsymbols.spacesAfterTimeSignature\n\t\t\t\t\t\t: '';\n\n\t\t\t\tconst shouldOffsetLyricsLine =\n\t\t\t\t\tbarIndex === 0 &&\n\t\t\t\t\tchordIndex === 0 &&\n\t\t\t\t\tlyricsLine.chordPositions[0] === 0;\n\n\t\t\t\tchordToken = getChordToken(bar, chord, shouldOffsetLyricsLine);\n\t\t\t\tlyricToken = getAdjustedLyricToken(\n\t\t\t\t\tshouldOffsetLyricsLine,\n\t\t\t\t\tchord.isFirstOfSubBeat\n\t\t\t\t);\n\n\t\t\t\tconst isLastChordOfBar = chordIndex === allChords.length - 1;\n\t\t\t\tconst isFollowedBySubBeatGroup =\n\t\t\t\t\tallChords[chordIndex + 1] &&\n\t\t\t\t\tallChords[chordIndex + 1].isFirstOfSubBeat;\n\n\t\t\t\tif (lyricToken.length - chordToken.length > 0) {\n\t\t\t\t\tconst isLastLyricToken = tokenizedLyrics.length === 0;\n\t\t\t\t\t// Warning: `getChordSpacesAfter()` has a side effect since its logic might result in updating\n\t\t\t\t\t// the lyricsToken with an extra space\n\t\t\t\t\tchord.spacesAfter = getChordSpacesAfter(\n\t\t\t\t\t\tisLastChordOfBar,\n\t\t\t\t\t\tisLastLyricToken,\n\t\t\t\t\t\tisFollowedBySubBeatGroup\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tchord.spacesAfter = chordSpaceAfterDefault;\n\t\t\t\t\tlyricToken += symbols.lyricsSpacer.repeat(\n\t\t\t\t\t\tgetLyricSpacesAfter(\n\t\t\t\t\t\t\tisLastChordOfBar,\n\t\t\t\t\t\t\tisFollowedBySubBeatGroup\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tspacedLyricsLine += lyricToken;\n\t\t\t} else {\n\t\t\t\tchord.spacesAfter = chordSpaceAfterDefault;\n\t\t\t}\n\t\t\tchord.spacesWithin = 0;\n\t\t});\n\t});\n\n\tif (shouldOffsetChordLine(lyricsLine)) {\n\t\tconst chordLineOffset = lyricsLine.chordPositions[0];\n\t\tchordLine.offset = chordLineOffset;\n\t\tif (shouldPrintBarSeparators) {\n\t\t\tchordLine.offset--;\n\t\t}\n\t\tspacedLyricsLine =\n\t\t\tlyricsLine.lyrics.substring(0, chordLineOffset) + spacedLyricsLine;\n\t}\n\n\tif (tokenizedLyrics.length) {\n\t\tspacedLyricsLine += tokenizedLyrics.join('');\n\t}\n\tlyricsLine.lyrics = trimEnd(spacedLyricsLine);\n\n\treturn {\n\t\tchordLine,\n\t\tlyricsLine,\n\t};\n\n\tfunction getChordToken(bar, chord, shouldOffsetLyricsLine) {\n\t\tlet token =\n\t\t\ttimeSignatureString +\n\t\t\tgetChordString(bar, chord, {\n\t\t\t\tshouldPrintSubBeatDelimiters:\n\t\t\t\t\tchord.isLastOfSubBeat && shouldPrintSubBeatDelimiters,\n\t\t\t\tsymbolType,\n\t\t\t});\n\t\tif (shouldOffsetLyricsLine) {\n\t\t\tif (shouldPrintSubBeatDelimiters && chord.isFirstOfSubBeat)\n\t\t\t\ttoken = symbols.subBeatGroupOpener + token;\n\t\t\tif (shouldPrintBarSeparators) token = symbols.barSeparator + token;\n\t\t}\n\t\treturn token;\n\t}\n\n\tfunction getAdjustedLyricToken(\n\t\tshouldOffsetLyricsLine,\n\t\tisFistOfSubBeatGroup\n\t) {\n\t\tlet token = lyricToken;\n\t\tif (startsWithSpace(token)) {\n\t\t\ttoken = symbols.lyricsSpacer.repeat(chordToken.length - 1) + token;\n\t\t} else {\n\t\t\tif (shouldOffsetLyricsLine) {\n\t\t\t\tlet offset = 0;\n\t\t\t\tif (shouldPrintBarSeparators) offset++;\n\t\t\t\tif (shouldPrintSubBeatDelimiters && isFistOfSubBeatGroup)\n\t\t\t\t\toffset++;\n\t\t\t\ttoken = symbols.lyricsSpacer.repeat(offset) + token;\n\t\t\t}\n\t\t\tif (timeSignatureString.length) {\n\t\t\t\ttoken = ' '.repeat(timeSignatureString.length) + token;\n\t\t\t}\n\t\t}\n\n\t\treturn token;\n\t}\n\n\tfunction getChordSpacesAfter(\n\t\tisLastChordOfBar,\n\t\tisLastLyricToken,\n\t\tisFollowedBySubBeatGroup\n\t) {\n\t\tlet spacesAfter = lyricToken.length - chordToken.length;\n\n\t\tconst shouldMakeRoomForBarSep =\n\t\t\tisLastChordOfBar && shouldPrintBarSeparators && !isLastLyricToken;\n\n\t\tconst shouldMakeRoomForSubBeatOpener =\n\t\t\t!isLastChordOfBar &&\n\t\t\tshouldPrintSubBeatDelimiters &&\n\t\t\tisFollowedBySubBeatGroup;\n\n\t\tif (shouldMakeRoomForBarSep || shouldMakeRoomForSubBeatOpener) {\n\t\t\tif (spacesAfter > 1) {\n\t\t\t\tspacesAfter -= 1;\n\t\t\t} else {\n\t\t\t\tlyricToken += symbols.lyricsSpacer; //duh!\n\t\t\t}\n\t\t}\n\t\treturn spacesAfter;\n\t}\n\n\tfunction getLyricSpacesAfter(isLastChordOfBar, isFollowedBySubBeatGroup) {\n\t\tlet lyricsSpaceAfter =\n\t\t\tchordToken.length - lyricToken.length + chordSpaceAfterDefault;\n\n\t\tif (isLastChordOfBar && shouldPrintBarSeparators) {\n\t\t\tlyricsSpaceAfter++;\n\t\t} else if (isFollowedBySubBeatGroup) {\n\t\t\tlyricsSpaceAfter++;\n\t\t}\n\n\t\treturn lyricsSpaceAfter;\n\t}\n}\n\nconst hasNoPositionMarkers = (lyricsLine) =>\n\tlyricsLine.chordPositions.length === 0;\n\nconst shouldOffsetChordLine = (lyricsLine) => lyricsLine.chordPositions[0] > 0;\n\n// source: https://github.com/es-shims/String.prototype.trimEnd/blob/main/implementation.js\nconst trimEnd = (str) => {\n\tconst endWhitespace =\n\t\t// eslint-disable-next-line max-len,no-control-regex\n\t\t/[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]*$/;\n\treturn str.replace(endWhitespace, '');\n};\n\nconst startsWithSpace = (str) => str.indexOf(' ') === 0;\n","import chordSymbolTpl from './tpl/chordSymbol.js';\nimport symbols from '../symbols';\n\n/**\n * @param {ChordLineChord} chord\n * @param {Object} options\n * @param {Boolean} options.shouldPrintChordsDuration\n * @param {Boolean} options.shouldPrintSubBeatOpener\n * @param {Boolean} options.shouldPrintSubBeatCloser\n * @param {('chord'|'roman')} options.symbolType\n * @returns {String} rendered html\n */\nexport default function renderChordSymbol(\n\tchord,\n\t{\n\t\tshouldPrintChordsDuration = false,\n\t\tshouldPrintSubBeatOpener = false,\n\t\tshouldPrintSubBeatCloser = false,\n\t\tsymbolType = 'chord',\n\t}\n) {\n\tconst shouldPrintChordSymbol =\n\t\tsymbolType === 'chord' ||\n\t\tchord.model === symbols.barRepeat ||\n\t\tchord.model === symbols.noChordSymbol;\n\n\tconst chordSymbol = shouldPrintChordSymbol\n\t\t? chord.symbol\n\t\t: chord.model.numeral.symbol;\n\n\treturn chordSymbolTpl({\n\t\tchordSymbol,\n\t\tchordDuration: shouldPrintChordsDuration\n\t\t\t? symbols.chordBeat.repeat(chord.duration)\n\t\t\t: false,\n\t\tsubBeatGroupOpener: shouldPrintSubBeatOpener\n\t\t\t? symbols.subBeatGroupOpener\n\t\t\t: '',\n\t\tsubBeatGroupCloser: shouldPrintSubBeatCloser\n\t\t\t? symbols.subBeatGroupCloser\n\t\t\t: '',\n\t\tnumeralType: !shouldPrintChordSymbol ? chord.model.numeral.type : '',\n\t});\n}\n","import _isFinite from 'lodash/isFinite';\n\nimport symbols from '../symbols';\n\nimport renderChordSymbol from './renderChordSymbol';\nimport renderTimeSignature from './renderTimeSignature';\nimport barContentTpl from './tpl/barContent.js';\n\nconst space = ' ';\n\nconst defaultSpacesWithin = 0;\nconst defaultSpacesAfter = 2;\n\n/**\n * @param {Bar} bar\n * @param {Boolean} isLastBar\n * @param {Boolean} shouldPrintBarSeparators\n * @param {Boolean} shouldPrintSubBeatDelimiters\n * @param {Boolean} shouldPrintTimeSignature\n * @param {('chord'|'roman')} options.symbolType\n * @returns {String} rendered html\n */\nexport default function renderBarContent(\n\tbar,\n\tisLastBar = false,\n\t{\n\t\tshouldPrintBarSeparators = true,\n\t\tshouldPrintSubBeatDelimiters = true,\n\t\tshouldPrintTimeSignature = false,\n\t\tsymbolType = 'chord',\n\t} = {}\n) {\n\tlet spacesWithin = 0;\n\tlet spacesAfter = 0;\n\tlet barContent = '';\n\n\tif (shouldPrintTimeSignature) {\n\t\tbarContent +=\n\t\t\trenderTimeSignature(bar.timeSignature) +\n\t\t\t' '.repeat(symbols.spacesAfterTimeSignature);\n\t}\n\n\tbarContent += bar.allChords.reduce((rendering, chord, i) => {\n\t\tspacesWithin = _isFinite(chord.spacesWithin)\n\t\t\t? chord.spacesWithin\n\t\t\t: defaultSpacesWithin;\n\t\tspacesAfter = _isFinite(chord.spacesAfter)\n\t\t\t? chord.spacesAfter\n\t\t\t: defaultSpacesAfter;\n\n\t\trendering += renderChordSymbol(chord, {\n\t\t\tshouldPrintChordsDuration: chord.isInSubBeatGroup\n\t\t\t\t? false\n\t\t\t\t: bar.shouldPrintChordsDuration,\n\t\t\tshouldPrintSubBeatOpener:\n\t\t\t\tshouldPrintSubBeatDelimiters && chord.isFirstOfSubBeat,\n\t\t\tshouldPrintSubBeatCloser:\n\t\t\t\tshouldPrintSubBeatDelimiters && chord.isLastOfSubBeat,\n\t\t\tsymbolType,\n\t\t});\n\n\t\tif (shouldPrintChordSpaces()) {\n\t\t\trendering += space.repeat(spacesWithin) + space.repeat(spacesAfter);\n\t\t}\n\n\t\tfunction shouldPrintChordSpaces() {\n\t\t\tconst isLastChordOfLine = isLastChordOfBar(bar, i) && isLastBar;\n\t\t\treturn (\n\t\t\t\t!isLastChordOfLine ||\n\t\t\t\t(isLastChordOfLine && shouldPrintBarSeparators)\n\t\t\t);\n\t\t}\n\n\t\treturn rendering;\n\t}, '');\n\n\treturn barContentTpl({ barContent });\n}\n\nfunction isLastChordOfBar(bar, i) {\n\treturn !bar.allChords[i + 1];\n}\n","import chordLineTpl from './tpl/chordLine.js';\n\nimport renderBarContent from './renderBarContent';\nimport barSeparatorTpl from './tpl/barSeparator.js';\n\nimport symbols from '../symbols';\n\n/**\n * @param {ChordLine} chordLineModel\n * @param {Boolean} shouldPrintBarSeparators\n * @param {Boolean} shouldPrintSubBeatDelimiters\n * @param {Boolean} shouldPrintInlineTimeSignatures\n * @param {('chord'|'roman')} options.symbolType\n * @returns {String} rendered html\n */\nexport default function renderChordLine(\n\tchordLineModel,\n\t{\n\t\tshouldPrintBarSeparators = true,\n\t\tshouldPrintSubBeatDelimiters = true,\n\t\tshouldPrintInlineTimeSignatures = true,\n\t\tsymbolType = 'chord',\n\t} = {}\n) {\n\tconst allBarsRendered = chordLineModel.allBars.map((bar, i) => {\n\t\tconst isLastBar = !chordLineModel.allBars[i + 1];\n\t\tconst shouldPrintTimeSignature =\n\t\t\tshouldPrintInlineTimeSignatures && bar.shouldPrintBarTimeSignature;\n\t\treturn renderBarContent(bar, isLastBar, {\n\t\t\tshouldPrintBarSeparators,\n\t\t\tshouldPrintSubBeatDelimiters,\n\t\t\tshouldPrintTimeSignature,\n\t\t\tsymbolType,\n\t\t});\n\t});\n\n\tconst barSeparator = shouldPrintBarSeparators\n\t\t? barSeparatorTpl({\n\t\t\t\tbarSeparator: symbols.barSeparator,\n\t\t\t})\n\t\t: '';\n\n\tconst chordLine =\n\t\tbarSeparator + allBarsRendered.join(barSeparator) + barSeparator;\n\n\tconst chordLineOffset = symbols.chordLineOffsetSpacer.repeat(\n\t\tchordLineModel.offset || 0\n\t);\n\n\treturn chordLineTpl({ chordLineOffset, chordLine, symbolType });\n}\n","import domPurify from 'dompurify';\n\nexport default function htmlToElement(html) {\n\treturn domPurify.sanitize(html, {\n\t\tRETURN_DOM_FRAGMENT: true,\n\t}).firstChild;\n}\n","import chordLyricLineTpl from './tpl/chordLyricLine';\n\nimport _intersection from 'lodash/intersection';\nimport _last from 'lodash/last';\nimport stripTags from '../../core/dom/stripTags';\nimport htmlToElement from '../../core/dom/htmlToElement';\n\nconst breakPointsClasses = [\n\t'cmChordSymbol',\n\t'cmTimeSignature',\n\t//fixme: consider smarter breakpoints rules at some point\n\t// as it would be better not to always break on those symbols\n\t'cmBarSeparator',\n\t'cmSubBeatGroupOpener',\n\t'cmSubBeatGroupCloser',\n];\n\n/**\n * This is by far the most complex renderer.\n * It does not render from the model but from the HTML markup of previously rendered chords and lyrics lines.\n * The existing markup is split and combined into a new markup suitable for small screens,\n * e.g. wrappable chord/lyric lines as a single entity.\n * Although complex, this approach was chosen to avoid:\n * - duplicating the significant rendering business logic of chord lines and/or\n * - refactoring entirely the chord/lyrics line rendering to implement the small screen renderer\n * @param {String} chordLine - html of a rendered chord line\n * @param {String} lyricLine - html of a rendered lyric line\n * @returns {String} rendered html\n */\nexport default function renderChordLyricLine(chordLine, lyricLine) {\n\tconst allChordTokens = getAllChordTokens(chordLine);\n\tconst allLyricTokens = getAllLyricTokens(lyricLine);\n\n\tconst allBreakPoints = getAllBreakpoints(allChordTokens, allLyricTokens);\n\n\tconst chordLyricsPairs = getChordLyricsPairs(\n\t\tallBreakPoints,\n\t\tallChordTokens,\n\t\tallLyricTokens\n\t);\n\n\treturn chordLyricLineTpl({ chordLyricsPairs });\n}\n\nfunction getAllChordTokens(chordLine) {\n\tconst chordLineNodes = htmlToElement(chordLine);\n\n\tconst allChordTokens = [];\n\t// using an object as a counter instead of an integer\n\t// so the counter can be used in a recursive loop\n\tlet textIndex = { i: 0 };\n\n\taddChordTokens(chordLineNodes, allChordTokens, textIndex);\n\n\treturn allChordTokens;\n}\n\n// recursive\nfunction addChordTokens(startNode, allNodes, textIndex) {\n\tstartNode.childNodes.forEach((childNode) => {\n\t\tif (childNode.nodeType === Node.TEXT_NODE) {\n\t\t\tconst textContent = childNode.textContent;\n\t\t\t// if we reach a text node, then it has to be composed of spaces only\n\t\t\tfor (const space of textContent) {\n\t\t\t\tallNodes.push(getToken(space, textIndex.i));\n\t\t\t\ttextIndex.i++;\n\t\t\t}\n\t\t} else {\n\t\t\tif (breakPointsClasses.includes(childNode.classList.value)) {\n\t\t\t\tallNodes.push(\n\t\t\t\t\tgetToken(\n\t\t\t\t\t\tchildNode.textContent,\n\t\t\t\t\t\ttextIndex.i,\n\t\t\t\t\t\tchildNode.outerHTML\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\ttextIndex.i += childNode.textContent.length;\n\t\t\t} else {\n\t\t\t\taddChordTokens(childNode, allNodes, textIndex);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction getToken(text, textIndex, html) {\n\treturn {\n\t\ttext,\n\t\ttextIndex,\n\t\thtml,\n\t};\n}\n\nfunction getAllLyricTokens(lyricLine) {\n\tconst allTextNodes = [];\n\tconst textLyricLine = stripTags(lyricLine);\n\n\tlet textToken = '';\n\n\tArray.from(textLyricLine).forEach((char, charIndex) => {\n\t\tif (char === ' ') {\n\t\t\tif (textToken) {\n\t\t\t\tallTextNodes.push(\n\t\t\t\t\tgetToken(textToken, charIndex - textToken.length)\n\t\t\t\t);\n\t\t\t\ttextToken = '';\n\t\t\t}\n\t\t\tallTextNodes.push(getToken(' ', charIndex));\n\t\t} else {\n\t\t\ttextToken += char;\n\t\t}\n\t});\n\tallTextNodes.push(\n\t\tgetToken(textToken, textLyricLine.length - textToken.length)\n\t);\n\treturn allTextNodes;\n}\n\nfunction getAllBreakpoints(allChordTokens, allLyricTokens) {\n\tconst chordLineBreakPoints = getBreakpointsFromTokens(allChordTokens);\n\tconst lyricLineBreakPoints = getBreakpointsFromTokens(allLyricTokens);\n\n\tconst allBreakpoints = _intersection(\n\t\tchordLineBreakPoints,\n\t\tlyricLineBreakPoints\n\t);\n\n\tlet shortestLineBreakpoints;\n\tlet longestLineBreakpoints;\n\n\tif (_last(chordLineBreakPoints) > _last(lyricLineBreakPoints)) {\n\t\tlongestLineBreakpoints = chordLineBreakPoints;\n\t\tshortestLineBreakpoints = lyricLineBreakPoints;\n\t} else {\n\t\tlongestLineBreakpoints = lyricLineBreakPoints;\n\t\tshortestLineBreakpoints = chordLineBreakPoints;\n\t}\n\n\tconst remainingBreakpoints = longestLineBreakpoints.filter(\n\t\t(bp) => bp > _last(shortestLineBreakpoints)\n\t);\n\n\tif (remainingBreakpoints.length) {\n\t\tallBreakpoints.push(...remainingBreakpoints);\n\t}\n\t// remove the 0-index breakpoint of the first token\n\tallBreakpoints.shift();\n\n\treturn allBreakpoints;\n}\n\nfunction getBreakpointsFromTokens(allTokens) {\n\tconst allBreakPoints = allTokens.map((token) => token.textIndex);\n\tconst lastBreakpoint = allTokens.reduce((originalLine, token) => {\n\t\treturn originalLine + token.text;\n\t}, '').length;\n\tallBreakPoints.push(lastBreakpoint);\n\treturn allBreakPoints;\n}\n\nfunction getChordLyricsPairs(allBreakpoints, allChordTokens, allLyricTokens) {\n\tconst chordLyricsPairs = [];\n\n\tallBreakpoints.forEach((breakpoint) => {\n\t\tlet chordLineFragment = '';\n\t\tlet textLineFragment = '';\n\t\twhile (\n\t\t\tallChordTokens.length &&\n\t\t\tallChordTokens[0].textIndex < breakpoint\n\t\t) {\n\t\t\tconst token = allChordTokens.shift();\n\t\t\tchordLineFragment += token.html || token.text;\n\t\t}\n\n\t\twhile (\n\t\t\tallLyricTokens.length &&\n\t\t\tallLyricTokens[0].textIndex < breakpoint\n\t\t) {\n\t\t\tconst currentNode = allLyricTokens.shift();\n\t\t\ttextLineFragment += currentNode.text;\n\t\t}\n\n\t\tchordLyricsPairs.push({\n\t\t\tchords: chordLineFragment,\n\t\t\tlyrics: textLineFragment,\n\t\t});\n\t});\n\treturn chordLyricsPairs;\n}\n","import keyDeclarationTpl from './tpl/keyDeclaration.js';\nimport symbols from '../symbols';\n\n/**\n * @param {SongKeyDeclarationLine} keyDeclarationLine\n * @returns {String} rendered html\n */\nexport default function renderSectionLabel(keyDeclarationLine) {\n\treturn keyDeclarationTpl({\n\t\tkeyDeclarationPrefix: symbols.keyDeclarationPrefix,\n\t\tkey: keyDeclarationLine.symbol,\n\t});\n}\n","import lineTypes from '../../parser/lineTypes';\n\n// reminder: update converters whenever a new shortcut is added here!\nconst labelsMapping = {\n\ta: 'adlib',\n\tb: 'bridge',\n\tc: 'chorus',\n\ti: 'intro',\n\to: 'outro',\n\tp: 'pre-chorus',\n\ts: 'solo',\n\tu: 'interlude',\n\tv: 'verse',\n};\n\nexport default function renderAllSectionsLabels(\n\tallLines,\n\t{ expandSectionMultiply }\n) {\n\tconst sectionsStats = getSectionsStats(allLines);\n\n\tallLines.forEach((/** SongSectionLabelLine */ line) => {\n\t\tif (line.type === lineTypes.SECTION_LABEL) {\n\t\t\tconst { model, index, indexWithoutMultiply } = line;\n\t\t\tconst labelRaw = labelsMapping[model.label]\n\t\t\t\t? labelsMapping[model.label]\n\t\t\t\t: model.label;\n\n\t\t\tlet rendered = labelRaw[0].toUpperCase() + labelRaw.substring(1);\n\t\t\tlet multiplier;\n\n\t\t\tif (sectionsStats[model.label] > 1) {\n\t\t\t\trendered += ' ';\n\t\t\t\trendered += expandSectionMultiply\n\t\t\t\t\t? index\n\t\t\t\t\t: indexWithoutMultiply;\n\t\t\t}\n\n\t\t\tif (!expandSectionMultiply && model.multiplyTimes) {\n\t\t\t\tmultiplier = 'x' + model.multiplyTimes;\n\t\t\t}\n\n\t\t\tline.model.rendered = {\n\t\t\t\tlabel: rendered,\n\t\t\t\tmultiplier,\n\t\t\t};\n\t\t}\n\t});\n\treturn allLines;\n}\n\n/**\n * Returns the number of usage of each section label\n *\n * @param {SongSectionLabelLine[]} allLines\n * @returns {Object} key = label, value = number of usage\n */\nfunction getSectionsStats(allLines) {\n\tconst stats = {};\n\n\tallLines\n\t\t.filter((line) => line.type === lineTypes.SECTION_LABEL)\n\t\t.forEach((line) => {\n\t\t\tif (!stats[line.model.label]) {\n\t\t\t\tstats[line.model.label] = 1;\n\t\t\t} else {\n\t\t\t\tstats[line.model.label]++;\n\t\t\t}\n\t\t});\n\n\treturn stats;\n}\n","import syntax from '../../parser/syntax';\nimport symbols from '../symbols';\nimport { chordRendererFactory } from 'chord-symbol';\n\nconst defaultRenderChord = chordRendererFactory();\n\n/**\n * @param {Chord|String} model\n * @param {Function} renderChord\n * @returns {string}\n */\nexport default function (model, renderChord = defaultRenderChord) {\n\tswitch (model) {\n\t\tcase syntax.noChord:\n\t\t\treturn symbols.noChordSymbol;\n\t\tcase symbols.barRepeat:\n\t\t\treturn symbols.barRepeat;\n\t\tdefault:\n\t\t\treturn renderChord(model);\n\t}\n}\n","import { chordRendererFactory } from 'chord-symbol';\nimport getChordSymbol from '../helpers/getChordSymbol';\n\nimport lineTypes from '../../parser/lineTypes';\nimport {\n\ttransposeKey,\n\tgetSemitonesBetweenKeys,\n} from '../../parser/helper/keyHelpers';\n\n// eslint-disable-next-line max-lines-per-function\nexport default function renderAllChords(\n\tallLines,\n\tdetectedKey,\n\t{\n\t\ttransposeValue,\n\t\taccidentalsType,\n\t\tchordSymbolRenderer,\n\t\tsimplifyChords,\n\t\tuseShortNamings,\n\t}\n) {\n\tlet currentKey;\n\tlet baseKey;\n\n\tif (detectedKey) {\n\t\tcurrentKey = transposeKey(detectedKey, transposeValue, accidentalsType);\n\t}\n\n\tlet renderChord = getChordSymbolRenderer();\n\n\tfunction renderChords(line) {\n\t\tif (line.type === lineTypes.KEY_DECLARATION) {\n\t\t\tcurrentKey = transposeKey(\n\t\t\t\tline.model,\n\t\t\t\ttransposeValue,\n\t\t\t\taccidentalsType\n\t\t\t);\n\t\t\tline.symbol = currentKey.string;\n\n\t\t\tif (!baseKey) {\n\t\t\t\tbaseKey = currentKey;\n\t\t\t}\n\t\t} else if (line.type === lineTypes.CHORD) {\n\t\t\tlet transposeOffSet = 0;\n\t\t\tif (shouldTransposeRepeatedChords(line)) {\n\t\t\t\ttransposeOffSet = getSemitonesBetweenKeys(\n\t\t\t\t\tbaseKey && baseKey.string,\n\t\t\t\t\tcurrentKey && currentKey.string\n\t\t\t\t);\n\t\t\t}\n\t\t\trenderChord = getChordSymbolRenderer(transposeOffSet);\n\n\t\t\tline.model.allBars.forEach((bar) => {\n\t\t\t\tbar.allChords.forEach((chord) => {\n\t\t\t\t\tchord.symbol = getChordSymbol(chord.model, renderChord);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn line;\n\t}\n\n\tfunction shouldTransposeRepeatedChords(line) {\n\t\tconst currentKeyEqualsOriginalKey =\n\t\t\tcurrentKey &&\n\t\t\tline.model.originalKey &&\n\t\t\tline.model.originalKey.string === currentKey.string;\n\n\t\treturn (\n\t\t\t(line.isFromAutoRepeatChords ||\n\t\t\t\tline.isFromSectionCopy ||\n\t\t\t\tline.isFromChordLineRepeater) &&\n\t\t\t!currentKeyEqualsOriginalKey\n\t\t);\n\t}\n\n\tfunction getChordSymbolRenderer(transposeOffSet) {\n\t\tif (typeof chordSymbolRenderer === 'function') {\n\t\t\treturn chordSymbolRenderer;\n\t\t}\n\t\tconst accidental =\n\t\t\taccidentalsType === 'auto'\n\t\t\t\t? currentKey\n\t\t\t\t\t? currentKey.accidental\n\t\t\t\t\t: 'sharp'\n\t\t\t\t: accidentalsType;\n\n\t\treturn chordRendererFactory({\n\t\t\tsimplify: simplifyChords,\n\t\t\tuseShortNamings,\n\t\t\ttransposeValue: transposeValue + transposeOffSet,\n\t\t\taccidental,\n\t\t});\n\t}\n\n\treturn allLines.map(renderChords);\n}\n","import lineTypes from '../parser/lineTypes';\nimport symbols from './symbols';\n\nconst replaceRepeatedBars = (line, { alignChordsWithLyrics }) => {\n\tif (line.type === lineTypes.CHORD) {\n\t\tline.model.allBars.forEach((bar) => {\n\t\t\tif (shouldReplaceWithBarRepeat(line, bar, alignChordsWithLyrics)) {\n\t\t\t\tbar.allChords = [\n\t\t\t\t\t{\n\t\t\t\t\t\tstring: symbols.barRepeat,\n\t\t\t\t\t\tmodel: symbols.barRepeat,\n\t\t\t\t\t\tsymbol: symbols.barRepeat,\n\t\t\t\t\t\tduration: bar.timeSignature.beatCount,\n\t\t\t\t\t\tbeat: 1,\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t\tbar.shouldPrintChordsDuration = false;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn line;\n};\n\nconst shouldReplaceWithBarRepeat = (line, bar, alignChordsWithLyrics) => {\n\treturn (\n\t\tbar.isRepeated &&\n\t\t!barHasMultiplePositionedChords(line, bar, alignChordsWithLyrics)\n\t);\n};\n\nconst barHasMultiplePositionedChords = (line, bar, alignChordsWithLyrics) => {\n\treturn (\n\t\talignChordsWithLyrics &&\n\t\tline.model.hasPositionedChords &&\n\t\tbar.allChords.length > 1 &&\n\t\tbar.allChords.some((chord) => chord.isPositioned)\n\t);\n};\n\nexport default replaceRepeatedBars;\n","import getMaxBeatsWidth from '../spacers/chord/getMaxBeatsWidth';\n\nimport simpleChordSpacer from '../spacers/chord/simple';\nimport alignedChordSpacer from '../spacers/chord/aligned';\nimport chordLyricsSpacer from '../spacers/chord/chordLyrics';\n\nimport renderChordLineModel from './renderChordLine';\nimport renderChordLyricLine from './renderChordLyricLine';\nimport renderEmptyLine from './renderEmptyLine';\nimport renderKeyDeclaration from './renderKeyDeclaration';\nimport renderLine from './renderLine';\nimport renderLyricLine from './renderLyricLine';\nimport renderSectionLabelLine from './renderSectionLabel';\nimport renderTimeSignature from './renderTimeSignature';\n\nimport songTpl from './tpl/song.js';\nimport renderAllSectionsLabels from '../helpers/renderAllSectionLabels';\nimport renderAllChords from '../helpers/renderAllChords';\n\nimport lineTypes from '../../parser/lineTypes';\nimport replaceRepeatedBars from '../replaceRepeatedBars';\n\nimport { defaultTimeSignature } from '../../parser/syntax';\n\n/**\n * @param {Song} parsedSong\n * @param {Object} options\n * @param {('auto'|'flat'|'sharp')} options.accidentalsType\n * @param {Boolean} options.alignBars\n * @param {Boolean} options.alignChordsWithLyrics\n * @param {Boolean} options.autoRepeatChords\n * @param {('all'|'lyrics'|'chords'|'chordsFirstLyricLine')} options.chartType\n * @param {Function|Boolean} options.chordSymbolRenderer - must be an instance of a ChordSymbol renderer, returned by chordRendererFactory()\n * @param {('chord'|'roman')} options.symbolType\n * @param {Function|Boolean} options.customRenderer\n * @param {Boolean} options.expandSectionCopy\n * @param {Boolean} options.expandSectionMultiply\n * @param {Boolean|('none'|'max'|'core')} options.simplifyChords\n * @param {('never'|'uneven'|'always')} options.printChordsDuration\n * @param {('never'|'grids'|'always')} options.printBarSeparators - mainly useful when converting a ChordMark file to a format that\n * do not allow bar separators to be printed (e.g. Ultimate Guitar)\n * @param {Boolean} options.printSubBeatDelimiters - mainly useful when converting a ChordMark file to a format that\n * do not allow sub-beat groups to be printed (e.g. Ultimate Guitar)\n * @param {Boolean} options.printInlineTimeSignatures - mainly useful when converting a ChordMark file to a format that\n * do not allow inline time signatures to be printed (e.g. Ultimate Guitar)\n * @param {Number} options.transposeValue\n * @param {Boolean} options.useShortNamings\n * @param {Boolean} options.wrapChordLyricLines\n * @returns {String} rendered HTML\n */\n// eslint-disable-next-line max-lines-per-function\nexport default function renderSong(\n\tparsedSong,\n\t{\n\t\taccidentalsType = 'auto',\n\t\talignBars = true,\n\t\talignChordsWithLyrics = true,\n\t\tautoRepeatChords = true,\n\t\tchartType = 'all',\n\t\tchordSymbolRenderer = false,\n\t\tcustomRenderer = false,\n\t\texpandSectionCopy = true,\n\t\texpandSectionMultiply = false,\n\t\tprintChordsDuration = 'uneven',\n\t\tprintBarSeparators = 'always',\n\t\tprintSubBeatDelimiters: shouldPrintSubBeatDelimiters = true,\n\t\tprintInlineTimeSignatures: shouldPrintInlineTimeSignatures = true,\n\t\tsimplifyChords = 'none',\n\t\tsymbolType = 'chord',\n\t\ttransposeValue = 0,\n\t\tuseShortNamings = true,\n\t\twrapChordLyricLines = false,\n\t} = {}\n) {\n\tlet { allLines, allKeys } = parsedSong;\n\n\tlet isFirstLyricLineOfSection = false;\n\tlet contextTimeSignature = defaultTimeSignature.string;\n\tlet previousBarTimeSignature;\n\n\tallLines = renderAllChords(allLines, allKeys.auto, {\n\t\ttransposeValue,\n\t\taccidentalsType,\n\t\tchordSymbolRenderer,\n\t\tsimplifyChords,\n\t\tuseShortNamings,\n\t})\n\t\t.map(addPrintChordsDurationsFlag)\n\t\t.map(addPrintBarTimeSignatureFlag)\n\t\t.filter(shouldRenderLine)\n\t\t.map((line) => {\n\t\t\treturn replaceRepeatedBars(line, { alignChordsWithLyrics });\n\t\t});\n\n\tconst maxBeatsWidth = getMaxBeatsWidth(allLines, {\n\t\tshouldAlignChordsWithLyrics,\n\t\tshouldPrintSubBeatDelimiters,\n\t\tsymbolType,\n\t});\n\n\tallLines = renderAllSectionsLabels(allLines, {\n\t\texpandSectionMultiply,\n\t});\n\tallLines.forEach(spaceChordLine);\n\n\tconst allRenderedLines = renderAllLines();\n\n\tif (customRenderer) {\n\t\treturn customRenderer(allLines, allRenderedLines, {\n\t\t\talignChordsWithLyrics,\n\t\t\talignBars,\n\t\t});\n\t} else {\n\t\treturn songTpl({ song: allRenderedLines.join('') });\n\t}\n\n\tfunction getSectionWrapperClasses(line) {\n\t\treturn [\n\t\t\t'cmSection',\n\t\t\t'cmSection-' + line.model.rendered.label.replace(/[\\d\\s]/gi, ''),\n\t\t];\n\t}\n\n\tfunction addPrintChordsDurationsFlag(line) {\n\t\tif (line.type === lineTypes.CHORD) {\n\t\t\tline.model.allBars.forEach((bar) => {\n\t\t\t\tbar.shouldPrintChordsDuration = shouldPrintChordsDuration(bar);\n\t\t\t});\n\t\t}\n\t\treturn line;\n\t}\n\n\tfunction addPrintBarTimeSignatureFlag(line) {\n\t\tif (line.type === lineTypes.TIME_SIGNATURE) {\n\t\t\tcontextTimeSignature = line.string;\n\t\t} else if (line.type === lineTypes.CHORD) {\n\t\t\tline.model.allBars.forEach((bar, barIndex) => {\n\t\t\t\tbar.shouldPrintBarTimeSignature =\n\t\t\t\t\t(barIndex === 0 &&\n\t\t\t\t\t\tbar.timeSignature.string !== contextTimeSignature) ||\n\t\t\t\t\t(barIndex > 0 &&\n\t\t\t\t\t\tbar.timeSignature.string !== previousBarTimeSignature);\n\t\t\t\tpreviousBarTimeSignature = bar.timeSignature.string;\n\t\t\t});\n\t\t}\n\t\treturn line;\n\t}\n\n\tfunction shouldPrintChordsDuration(bar) {\n\t\treturn (\n\t\t\tbar.allChords.length > 1 &&\n\t\t\t((printChordsDuration === 'uneven' &&\n\t\t\t\tbar.hasUnevenChordsDurations) ||\n\t\t\t\tprintChordsDuration === 'always')\n\t\t);\n\t}\n\n\tfunction shouldRenderLine(line) {\n\t\treturn shouldRepeatLines(line) && !isFiltered(line);\n\t}\n\n\tfunction shouldRepeatLines(line) {\n\t\tconst shouldSkipAutoRepeatChordLine =\n\t\t\t!autoRepeatChords &&\n\t\t\t(line.isFromAutoRepeatChords ||\n\t\t\t\t(line.type === lineTypes.CHORD && line.isFromSectionCopy));\n\n\t\tconst shouldSkipSectionMultiplyLine =\n\t\t\tline.isFromSectionMultiply && !expandSectionMultiply;\n\n\t\tconst shouldSkipSectionCopyLine =\n\t\t\tline.type !== lineTypes.SECTION_LABEL &&\n\t\t\tline.isFromSectionCopy &&\n\t\t\t!expandSectionCopy;\n\n\t\treturn (\n\t\t\t!shouldSkipSectionMultiplyLine &&\n\t\t\t!shouldSkipAutoRepeatChordLine &&\n\t\t\t!shouldSkipSectionCopyLine\n\t\t);\n\t}\n\n\tfunction isLastLine(i) {\n\t\treturn allLines.length - 1 === i;\n\t}\n\n\tfunction isFiltered(line) {\n\t\tif (chartType === 'chordsFirstLyricLine') {\n\t\t\tif (line.type === lineTypes.SECTION_LABEL) {\n\t\t\t\tisFirstLyricLineOfSection = true;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (isFirstLyricLineOfSection && line.type === lineTypes.LYRIC) {\n\t\t\t\tisFirstLyricLineOfSection = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t(['chords', 'chordsFirstLyricLine'].includes(chartType) &&\n\t\t\t\tline.type === lineTypes.LYRIC) ||\n\t\t\t(chartType === 'lyrics' && line.type === lineTypes.CHORD)\n\t\t);\n\t}\n\n\tfunction spaceChordLine(line, lineIndex) {\n\t\tif (line.type === lineTypes.CHORD) {\n\t\t\tlet spaced =\n\t\t\t\talignBars && !shouldAlignChordsWithLyrics(line)\n\t\t\t\t\t? alignedChordSpacer(line.model, maxBeatsWidth, {\n\t\t\t\t\t\t\tshouldPrintBarSeparators: shouldPrintBarSeparators(\n\t\t\t\t\t\t\t\tline.model\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tshouldPrintSubBeatDelimiters,\n\t\t\t\t\t\t\tsymbolType,\n\t\t\t\t\t\t})\n\t\t\t\t\t: simpleChordSpacer(line.model);\n\n\t\t\tconst nextLine = allLines[lineIndex + 1];\n\t\t\tif (shouldAlignChordsWithLyrics(line)) {\n\t\t\t\tconst { chordLine, lyricsLine } = chordLyricsSpacer(\n\t\t\t\t\tspaced,\n\t\t\t\t\tnextLine.model,\n\t\t\t\t\t{\n\t\t\t\t\t\tshouldPrintBarSeparators: shouldPrintBarSeparators(\n\t\t\t\t\t\t\tline.model\n\t\t\t\t\t\t),\n\t\t\t\t\t\tshouldPrintSubBeatDelimiters,\n\t\t\t\t\t\tshouldPrintInlineTimeSignatures,\n\t\t\t\t\t\tsymbolType,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tallLines[lineIndex + 1].model = lyricsLine;\n\t\t\t\tspaced = chordLine;\n\t\t\t}\n\t\t\tallLines[lineIndex].model = spaced;\n\t\t}\n\t}\n\n\t// eslint-disable-next-line max-lines-per-function\n\tfunction renderAllLines() {\n\t\tlet lineIsInASection = false;\n\t\tlet chordLineToMerge;\n\n\t\treturn (\n\t\t\tallLines\n\t\t\t\t// eslint-disable-next-line max-lines-per-function\n\t\t\t\t.map((line, i) => {\n\t\t\t\t\tlet rendered;\n\t\t\t\t\tlet shouldOpenSection = false;\n\t\t\t\t\tlet sectionWrapperClasses = [];\n\t\t\t\t\tlet shouldClosePriorSection;\n\n\t\t\t\t\tif (line.type === lineTypes.CHORD) {\n\t\t\t\t\t\trendered = renderChordLineModel(line.model, {\n\t\t\t\t\t\t\tsymbolType,\n\t\t\t\t\t\t\tshouldPrintBarSeparators: shouldPrintBarSeparators(\n\t\t\t\t\t\t\t\tline.model\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tshouldPrintSubBeatDelimiters,\n\t\t\t\t\t\t\tshouldPrintInlineTimeSignatures,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (shouldMergeChordLine(line, allLines[i + 1])) {\n\t\t\t\t\t\t\tchordLineToMerge = rendered;\n\t\t\t\t\t\t\trendered = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (line.type === lineTypes.EMPTY_LINE) {\n\t\t\t\t\t\trendered = renderEmptyLine();\n\t\t\t\t\t} else if (line.type === lineTypes.SECTION_LABEL) {\n\t\t\t\t\t\tshouldOpenSection = true;\n\t\t\t\t\t\tshouldClosePriorSection = lineIsInASection;\n\t\t\t\t\t\tlineIsInASection = true;\n\n\t\t\t\t\t\tsectionWrapperClasses = getSectionWrapperClasses(line);\n\t\t\t\t\t\trendered = renderSectionLabelLine(line);\n\t\t\t\t\t} else if (line.type === lineTypes.TIME_SIGNATURE) {\n\t\t\t\t\t\trendered = renderTimeSignature(line);\n\t\t\t\t\t} else if (line.type === lineTypes.KEY_DECLARATION) {\n\t\t\t\t\t\trendered = renderKeyDeclaration(line);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trendered = renderLyricLine(line, {\n\t\t\t\t\t\t\talignChordsWithLyrics,\n\t\t\t\t\t\t\tchartType,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (chordLineToMerge) {\n\t\t\t\t\t\t\trendered = renderChordLyricLine(\n\t\t\t\t\t\t\t\tchordLineToMerge,\n\t\t\t\t\t\t\t\trendered\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tchordLineToMerge = '';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\trendered &&\n\t\t\t\t\t\trenderLine(rendered, {\n\t\t\t\t\t\t\tisFromSectionMultiply: line.isFromSectionMultiply,\n\t\t\t\t\t\t\tisFromAutoRepeatChords: line.isFromAutoRepeatChords,\n\t\t\t\t\t\t\tisFromChordLineRepeater:\n\t\t\t\t\t\t\t\tline.isFromChordLineRepeater,\n\t\t\t\t\t\t\tisFromSectionCopy: line.isFromSectionCopy,\n\t\t\t\t\t\t\tshouldOpenSection,\n\t\t\t\t\t\t\tshouldClosePriorSection,\n\t\t\t\t\t\t\tshouldCloseFinalSection:\n\t\t\t\t\t\t\t\tisLastLine(i) && lineIsInASection,\n\t\t\t\t\t\t\tsectionWrapperClasses,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.filter(Boolean)\n\t\t);\n\t}\n\n\tfunction shouldAlignChordsWithLyrics(line) {\n\t\treturn (\n\t\t\tchartType === 'all' &&\n\t\t\talignChordsWithLyrics &&\n\t\t\tline.model.hasPositionedChords\n\t\t);\n\t}\n\n\tfunction shouldMergeChordLine(line, nextLine) {\n\t\treturn (\n\t\t\tnextLine &&\n\t\t\tnextLine.type === lineTypes.LYRIC &&\n\t\t\twrapChordLyricLines &&\n\t\t\tshouldAlignChordsWithLyrics(line)\n\t\t);\n\t}\n\n\t/**\n\t * @param {ChordLine} line\n\t * @returns {boolean}\n\t */\n\tfunction shouldPrintBarSeparators(line) {\n\t\treturn (\n\t\t\tprintBarSeparators === 'always' ||\n\t\t\t(printBarSeparators === 'grids' && !line.hasPositionedChords)\n\t\t);\n\t}\n}\n","import parseSong from './parser/parseSong';\nimport renderSong from './renderer/components/renderSong';\nimport lineTypes from './parser/lineTypes';\n\nexport { parseSong, renderSong, lineTypes };\n","import { lineTypes } from 'chord-mark';\n\nimport trimArray from '../helpers/trimArray';\nimport insertAt from '../helpers/insertAt';\n\nconst chordMark2ChordPro = (options = {}) => {\n\treturn convert2ChordPro.bind(null, options);\n};\n\nconst convert2ChordPro = (\n\t{ showBarSeparators = true },\n\tallLines,\n\tallRenderedLines,\n\t{ alignBars, alignChordsWithLyrics }\n) => {\n\tconst chordProLines = [];\n\tlet chordLine;\n\n\tgetAllSections(allLines).forEach((section, i) => {\n\t\tif (section.sectionLine) {\n\t\t\tif (section.allLines.length > 0) {\n\t\t\t\tif (i > 0) chordProLines.push('');\n\t\t\t\tchordProLines.push(\n\t\t\t\t\tgetOpenSectionDirective(section.sectionLine)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tchordProLines.push(\n\t\t\t\t\tgetCommentLine(\n\t\t\t\t\t\tgetSectionTitle(section.sectionLine.model.rendered)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tsection.allLines.forEach((line, j, allSectionLines) => {\n\t\t\tswitch (line.type) {\n\t\t\t\tcase lineTypes.CHORD:\n\t\t\t\t\tif (!isFollowedByLyricLine(allSectionLines, j)) {\n\t\t\t\t\t\tchordProLines.push(getChordLine(line));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchordLine = line;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase lineTypes.LYRIC:\n\t\t\t\t\tchordProLines.push(\n\t\t\t\t\t\tgetLyricLine(line, chordLine, {\n\t\t\t\t\t\t\tshowBarSeparators,\n\t\t\t\t\t\t\talignChordsWithLyrics,\n\t\t\t\t\t\t\talignBars,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tchordLine = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\tcase lineTypes.EMPTY_LINE:\n\t\t\t\t\tchordProLines.push('');\n\t\t\t\t\tchordLine = undefined;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\tif (section.sectionLine && section.allLines.length > 0) {\n\t\t\tchordProLines.push(getEndSectionDirective(section.sectionLine));\n\t\t}\n\t});\n\n\treturn chordProLines.join('\\n');\n};\n\nconst getAllSections = (allLines) => {\n\tconst allSections = [];\n\tlet currentSection;\n\n\tconst commitCurrentSection = () => {\n\t\tif (currentSection) {\n\t\t\tallSections.push(currentSection);\n\t\t\tcurrentSection = undefined;\n\t\t}\n\t};\n\n\tconst initCurrentSection = (line) => {\n\t\tcurrentSection = {\n\t\t\tsectionLine: line,\n\t\t\tallLines: [],\n\t\t};\n\t};\n\n\tallLines.forEach((line) => {\n\t\tif (line.type === lineTypes.SECTION_LABEL) {\n\t\t\tcommitCurrentSection();\n\t\t\tinitCurrentSection(line);\n\t\t} else {\n\t\t\tif (!currentSection) {\n\t\t\t\tinitCurrentSection();\n\t\t\t}\n\t\t\tcurrentSection.allLines.push(line);\n\t\t}\n\t});\n\tcommitCurrentSection();\n\n\treturn allSections.map((section) => {\n\t\tsection.allLines = trimArray(\n\t\t\tsection.allLines,\n\t\t\t(el) => el.type === lineTypes.EMPTY_LINE\n\t\t);\n\t\treturn section;\n\t});\n};\n\n/**\n * @param {SongSectionLabelLine} line\n */\nfunction getOpenSectionDirective(line) {\n\treturn `{start_of_${getEnvironmentType(\n\t\tline.model.label\n\t)}: ${getSectionTitle(line.model.rendered)}}`;\n}\n\n/**\n * @param {SongSectionLabelLine} line\n */\nfunction getEndSectionDirective(line) {\n\treturn `{end_of_${getEnvironmentType(line.model.label)}}`;\n}\n\nfunction getEnvironmentType(label) {\n\tswitch (label) {\n\t\tcase 'b':\n\t\tcase 'bridge':\n\t\t\treturn 'bridge';\n\t\tcase 'c':\n\t\tcase 'chorus':\n\t\t\treturn 'chorus';\n\t\tdefault:\n\t\tcase 'v':\n\t\tcase 'verse':\n\t\t\treturn 'verse';\n\t}\n}\n\nfunction getSectionTitle({ label, multiplier }) {\n\treturn multiplier ? `${label} ${multiplier}` : label;\n}\n\nfunction getCommentLine(comment) {\n\treturn `{c:${comment}}`;\n}\n\nfunction isFollowedByLyricLine(allSectionLines, i) {\n\tconst nextLine = allSectionLines[i + 1];\n\treturn nextLine && nextLine.type === lineTypes.LYRIC;\n}\n\n/**\n * @param {SongChordLine} line\n */\nfunction getChordLine(line) {\n\tlet chordLine = '';\n\n\tline.model.allBars.map((bar) => {\n\t\tchordLine += '|';\n\t\tbar.allChords.map((chord) => {\n\t\t\tchordLine +=\n\t\t\t\tchord.symbol +\n\t\t\t\t' '.repeat(chord.spacesWithin + chord.spacesAfter);\n\t\t});\n\t});\n\tchordLine += '|';\n\n\treturn getCommentLine(chordLine.trim());\n}\n\n/**\n * @param {SongLyricLine} line\n * @param {SongChordLine} chordLine\n * @param {Boolean} alignChordsWithLyrics\n * @param {Boolean} alignBars\n * @param {Boolean} showBarSeparators\n */\nfunction getLyricLine(\n\tline,\n\tchordLine,\n\t{ alignChordsWithLyrics, alignBars, showBarSeparators }\n) {\n\tlet lyrics = line.string.trim(); // fixme: keep trim()?\n\n\tif (chordLine && chordLine.type === lineTypes.CHORD) {\n\t\tif (chordLine.model.hasPositionedChords && alignChordsWithLyrics) {\n\t\t\tlyrics = getLyricLineWithPositionedChords(lyrics, chordLine, {\n\t\t\t\tshowBarSeparators,\n\t\t\t});\n\t\t} else {\n\t\t\tlyrics = getLyricLineWithNonPositionedChords(lyrics, chordLine, {\n\t\t\t\tshowBarSeparators,\n\t\t\t\talignBars,\n\t\t\t});\n\t\t}\n\t}\n\treturn lyrics;\n}\n\nconst getLyricLineWithPositionedChords = (\n\tsrcLyrics,\n\tchordLine,\n\t{ showBarSeparators }\n) => {\n\tlet lyrics = srcLyrics;\n\n\tchordLine.model.allBars.map((bar) => {\n\t\tbar.allChords.map((chord, i) => {\n\t\t\tlet [chordProSymbol] = getChordSymbol(bar, chord);\n\n\t\t\tif (i === 0 && showBarSeparators) {\n\t\t\t\tconst nextPositionMarker = lyrics.indexOf('_');\n\t\t\t\tif (nextPositionMarker > -1) {\n\t\t\t\t\tlyrics = insertAt(lyrics, '[|] ', nextPositionMarker);\n\t\t\t\t} else {\n\t\t\t\t\tlyrics = insertAt(lyrics, '[|]', lyrics.length + 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lyrics.indexOf('_') > -1) {\n\t\t\t\tlyrics = lyrics.replace('_', chordProSymbol);\n\t\t\t} else {\n\t\t\t\tlyrics = insertAt(lyrics, chordProSymbol, lyrics.length + 1);\n\t\t\t}\n\t\t});\n\t});\n\tlyrics = lyrics.replace(/_/g, '').trim();\n\tif (showBarSeparators) {\n\t\tlyrics += ' [|]';\n\t}\n\treturn lyrics;\n};\n\nconst getLyricLineWithNonPositionedChords = (\n\tsrcLyrics,\n\tchordLine,\n\t{ showBarSeparators, alignBars }\n) => {\n\tlet lyrics = srcLyrics.replace(/_/g, '');\n\tlet chordOffset = 0;\n\n\tchordLine.model.allBars.map((bar) => {\n\t\tbar.allChords.map((chord, i) => {\n\t\t\tlet [chordProSymbol, rawSymbol] = getChordSymbol(bar, chord);\n\n\t\t\tif (i === 0 && showBarSeparators) {\n\t\t\t\tlyrics = insertAt(lyrics, '[|]', chordOffset);\n\t\t\t\tchordOffset += '[|]'.length + '| '.length;\n\t\t\t}\n\n\t\t\tlyrics = insertAt(lyrics, chordProSymbol, chordOffset);\n\n\t\t\tconst extraSpaceOnLastChord =\n\t\t\t\talignBars && !bar.allChords[i + 1] ? 1 : 0;\n\n\t\t\tchordOffset +=\n\t\t\t\tchordProSymbol.length +\n\t\t\t\trawSymbol.length +\n\t\t\t\tchord.spacesAfter +\n\t\t\t\tchord.spacesWithin +\n\t\t\t\textraSpaceOnLastChord; // compensate for the fact that most chordpro programs add a space between\n\t\t});\n\t});\n\tif (showBarSeparators) {\n\t\tlyrics = insertAt(lyrics, '[|]', chordOffset);\n\t}\n\treturn lyrics;\n};\n\nconst getChordSymbol = (bar, chord) => {\n\tconst symbol = bar.shouldPrintChordsDuration\n\t\t? chord.symbol + '.'.repeat(chord.duration)\n\t\t: chord.symbol;\n\n\treturn [`[${symbol}]`, symbol];\n};\n\nexport default chordMark2ChordPro;\n","import stripTags from '../helpers/stripTags';\nimport { lineTypes } from 'chord-mark';\n\nconst chordMark2UltimateGuitar = () => {\n\treturn convert2UltimateGuitar.bind(null);\n};\n\nconst convert2UltimateGuitar = (allLines, allRenderedLines) => {\n\treturn allRenderedLines\n\t\t.map((line, i) => {\n\t\t\tconst srcLine = allLines[i];\n\t\t\tconst renderedLine = stripTags(line);\n\n\t\t\tif (srcLine.type === lineTypes.SECTION_LABEL) {\n\t\t\t\treturn `[${renderedLine}]`;\n\t\t\t} else if (srcLine.type === lineTypes.CHORD) {\n\t\t\t\treturn getChordLine(srcLine, renderedLine);\n\t\t\t}\n\t\t\treturn renderedLine.replace('&nbsp;', '');\n\t\t})\n\t\t.join('\\n');\n};\n\nconst getChordLine = (srcLine, renderedLine) => {\n\tconst chordSymbolRe = /([^\\s.|]+)/g;\n\tconst chordSymbolReplaceWith = '[ch]$1[/ch]';\n\n\treturn renderedLine.replace(chordSymbolRe, chordSymbolReplaceWith);\n};\n\nexport default chordMark2UltimateGuitar;\n","import convert2ChordMark from './convert2ChordMark';\nimport chordMark2ChordPro from './converters/chordMark2ChordPro';\nimport chordMark2UltimateGuitar from './converters/chordMark2UltimateGuitar';\n\nexport { convert2ChordMark, chordMark2ChordPro, chordMark2UltimateGuitar };\n"],"names":["domPurify","stripTags","html","sanitize","ALLOWED_TAGS","KEEP_CONTENT","chordParserFactory","chordLineRe","chordsLyricsRe","isChordLine","line","allChords","trim","match","every","isChord","isChordsLyricsLine","map","potentialChord","replace","parsed","error","trimArray","array","fn","length","shift","pop","longLabelToShort","_longLabelToShort","adlib","_defineProperty","getSectionLabel","input","chordMarkLabel","rawLabelRe","sectionIndexRe","multiplierRe","sectionLabelRe","RegExp","concat","_input$trim$match","_input$trim$match2","_slicedToArray","rawLabel","multiplier","labelKey","toLowerCase","lineTypes","EMPTY","DIRECTIVE","COMMENT","LYRICS","CHORDS_LYRICS","SECTION_START","SECTION_CLOSE","SECTION_REPEAT","repeatSectionDirectives","startSectionDirectives","endSectionDirectives","directivesToSectionLabel","chorus","verse","bridge","start_of_chorus","start_of_verse","start_of_bridge","start_of_part","soc","sov","sob","sop","c","ci","cb","comment","comment_italic","comment_bold","chordPro2ChordMark","allLines","cmOutput","allLinesModel","getLineModel","filter","lineModel","isSupportedLine","allSections","getAllSections","forEach","section","i","push","label","join","content","isCommentLine","type","isEmtpyLine","isDirective","_getDirectiveKV","getDirectiveKV","_getDirectiveKV2","key","value","includes","_getChordsLyrics","getChordsLyrics","_getChordsLyrics2","chords","lyrics","commentLineRe","found","directiveRe","directive","undefined","chordsLyrics","chord","unSupportedLineTypes","currentSection","commitCurrentSection","initCurrentSection","extractSectionLabel","el","getSpaceLength","TAB_WIDTH","offset","withoutTabs","_","idx","max","repeat","insertAt","insertInto","toInsert","at","slice","chordsOverLyrics2ChordMark","chordPositions","getAllChordsInLine","getChordsPositions","isSectionLabel","getLineWithPositionMarkers","lastPosition","allSpaces","startWithSpace","unshift","endWithSpace","spaces","chordPosition","isSpace","charAt","char","marker","withMarkers","markersLength","position","Math","min","allInputFormats","AUTO","CP","COL","convert2ChordMark","_ref","arguments","_ref$inputFormat","inputFormat","checkInputFormat","getAllLines","finalInputFormat","looksLikeChordPro","converter","Object","values","Error","inputRaw","split","chordsLyricsLines","chordLines","escapeHTML","unescaped","CHORD","EMPTY_LINE","KEY_DECLARATION","LYRIC","SECTION_LABEL","TIME_SIGNATURE","allowedTimeSignatures","isTimeSignatureString","string","parseTimeSignature","TypeError","count","Number","parseInt","beatCount","barRepeat","chordBeatCount","chordLineRepeat","chordPositionMarker","lyricLine","keyDeclarationPrefix","noChord","sectionLabel","subBeatOpener","subBeatCloser","defaultTimeSignature","parseChord","_escapeRegExp","clearSpaces","syntax","chordBeatCountSymbols","barRepeatSymbols","getParseableChordLine","potentialChordToken","index","allTokens","clean","cleanToken","chordLine","replaceAll","token","removeSubBeatDelimiters","removeBeatCount","startsWith","substring","endsWith","isChordLineRepeater","candidate","sectionLabelRegexp","parseChordWrapper","chordString","_isString","_isFinite","InvalidBeatCountException","_Error","_inherits","_this","duration","currentBeatCount","_classCallCheck","_callSuper","name","_createClass","_wrapNativeSuper","default","InvalidChordRepetitionException","InvalidSubBeatGroupException","symbol","InvalidBarRepeatException","_isEqual","_cloneDeep","parseChordLine","_ref$timeSignature","timeSignature","_ref$originalKey","originalKey","_timeSignature","allBars","emptyBar","subBeatGroupsChordCount","bar","cleanedToken","previousBar","isInSubBeatGroup","subBeatGroupIndex","lineHadTimeSignatureChange","checkSubBeatConsistency","tokenIndex","repeatPreviousBars","changeTimeSignature","parseChordToken","shouldChangeBar","changeBar","checkInvalidBeatCount","setSubBeatInfo","repeatedBar","isRepeated","checkSubBeatGroupToken","updateSubBeatGroupsChordCount","getChordDuration","model","isNoChordSymbol","beat","checkInvalidChordRepetition","checkSubBeatGroupChordCount","hasUnevenChordsDurations","barClone","hasBeatCount","indexOf","currentChord","previousChord","isChordRepetitionAllowed","isLast","hasInvalidBeatCount","barBeatCount","hasTooManyBeats","hasTooFewBeats","firstChordDuration","some","subBeatChordIndex","previousChordBeatId","barIndex","chordBeatId","durationString","toPrecision","parseFloat","isFirstOfSubBeat","isLastOfSubBeat","errorParameters","inSubBeat","regexp","exec","lastIndex","_findIndex","_invert","allNotesSharp","allFlats","allNotes","_toConsumableArray","allKeys","note","flatsToSharps","Ab","Bb","Db","Eb","Gb","sharpsToFlats","isKey","keyString","getKeyAccidental","sharpKeys","transposeKey","keyModel","transposeValue","accidentalsType","theoreticalKeys","Dbm","Gbm","keyTemp","accidental","doTranspose","transposedKey","isMinor","noteSharp","noteIndex","transposedIndex","transposedSharp","transposed","guessKey","inferKeyFromChords","mostUsedChords","getMostUsedChordKeys","lastSongChord","find","firstSongChord","isFirst","maxFoundDuration","mostUsedChordKeys","allChordsKey","chord2Key","o","chordModel","majorQualities","formatted","rootNote","normalized","quality","getSemitonesBetweenKeys","key1","key2","getSemitonesBetweenNotes","note1","note2","noteSharp1","noteSharp2","indexNote1","indexNote2","semitones","keyDeclarationRegexp","isKeyDeclaration","parseKeyDeclaration","parseLyricLine","stringWithoutForceLyricSymbol","stringWithoutPositionMarkers","tmpString","parseSectionLabel","copyIndex","multiplyTimes","_last","forEachBarInSong","newLines","forEachChordInSong","forEachChordInChordLine","newChordLine","chordIndex","getNthOfLabel","n","selected","typesCount","enableSelect","currentLabel","id","isEmptyLine","isTimeSignature","songLinesFactory","sectionsStats","currentTimeSignature","currentSectionStats","currentKey","MAX_PREVIOUS_CHORD_LINES","previousChordLines","previousSectionLabelLine","blueprint","blueprintIndex","shouldMultiplySection","shouldCopySection","getTimeSignatureLine","getKeyDeclarationLine","getSectionLabelLine","lineIndex","allSrcLines","increaseSectionStats","getSectionCount","indexWithoutMultiply","withoutMultiply","isCurrentSectionEmpty","isFromSectionCopy","getEmptyLine","getChordLine","addPreviousChordLine","e","getLyricLine","getRepeatedChordLine","repeatString","sliceStart","sliceEnd","_objectSpread","apply","isFromChordLineRepeater","isMultiplied","repeatLinesFromBlueprint","blueprintLine","repeatedLine","shouldRepeatLineFromBlueprint","isFromAutoRepeatChords","currentLine","nonRepeatableLinesTypes","copySection","toCopy","endsWithEmptyLine","remainingLines","nextSectionIndex","findIndex","currentSectionContent","multiplySection","isLastLineOfSection","toMultiply","isFromSectionMultiply","sectionLabelLine","addLine","lineSrc","asArray","flagPositionedChords","nextLine","lineChordCount","shouldPositionChords","hasPositionedChords","isPositioned","lastLine","_omit","getAllChordsInSong","occurrences","getAllKeysInSong","auto","explicit","autoDetectedKey","_isArray","parseSong","songSrc","songArray","songLines","barSeparator","chordBeat","chordLineOffsetSpacer","emptyBeatSpaces","lyricsSpacer","noChordSymbol","spacesAfterDefault","spacesAfterSubBeatDefault","spacesAfterTimeSignature","subBeatGroupOpener","subBeatGroupCloser","symbols","getBeatString","beatIndex","_ref$shouldPrintSubBe","shouldPrintSubBeatDelimiters","_ref$symbolType","symbolType","beatChords","getChordString","reduce","spacesBefore","_ref2","_ref2$symbolType","shouldPrintChordSymbol","numeral","chordDuration","shouldPrintChordsDuration","getMaxBeatsWidth","shouldAlignChordsWithLyrics","maxBeatsWidth","beatString","space","chordLineInput","spaceBar","spacesAfter","spacesWithin","_ref$shouldPrintBarSe","shouldPrintBarSeparators","shouldFillEmptyBeats","getEmptyBeatsWidth","shouldSpaceLastBeat","isLastBeatOfBar","maxBeatsWidthForBar","beatMaxWidth","chordSpaceAfterDefault","lyricsLineInput","_ref$shouldPrintInlin","shouldPrintInlineTimeSignatures","hasNoPositionMarkers","lyricsLine","tokenizedLyrics","allPositions","timeSignatureString","spacedLyricsLine","chordToken","lyricToken","shouldPrintBarTimeSignature","shouldOffsetLyricsLine","getChordToken","getAdjustedLyricToken","isLastChordOfBar","isFollowedBySubBeatGroup","isLastLyricToken","getChordSpacesAfter","getLyricSpacesAfter","shouldOffsetChordLine","chordLineOffset","trimEnd","isFistOfSubBeatGroup","startsWithSpace","shouldMakeRoomForBarSep","shouldMakeRoomForSubBeatOpener","lyricsSpaceAfter","str","endWhitespace","chordSymbolTpl","renderChordSymbol","_ref$shouldPrintChord","shouldPrintSubBeatOpener","_ref$shouldPrintSubBe2","shouldPrintSubBeatCloser","chordSymbol","numeralType","renderTimeSignature","barContentTpl","defaultSpacesWithin","defaultSpacesAfter","renderBarContent","isLastBar","_ref$shouldPrintTimeS","shouldPrintTimeSignature","barContent","rendering","shouldPrintChordSpaces","isLastChordOfLine","chordLineTpl","barSeparatorTpl","renderChordLine","chordLineModel","allBarsRendered","htmlToElement","RETURN_DOM_FRAGMENT","firstChild","chordLyricLineTpl","_intersection","breakPointsClasses","renderChordLyricLine","allChordTokens","getAllChordTokens","allLyricTokens","getAllLyricTokens","allBreakPoints","getAllBreakpoints","chordLyricsPairs","getChordLyricsPairs","chordLineNodes","textIndex","addChordTokens","startNode","allNodes","childNodes","childNode","nodeType","Node","TEXT_NODE","textContent","_iterator","_createForOfIteratorHelper","_step","s","done","getToken","err","f","classList","outerHTML","text","allTextNodes","textLyricLine","textToken","Array","from","charIndex","chordLineBreakPoints","getBreakpointsFromTokens","lyricLineBreakPoints","allBreakpoints","shortestLineBreakpoints","longestLineBreakpoints","remainingBreakpoints","bp","lastBreakpoint","originalLine","breakpoint","chordLineFragment","textLineFragment","currentNode","keyDeclarationTpl","renderSectionLabel","keyDeclarationLine","labelsMapping","a","b","p","u","v","renderAllSectionsLabels","expandSectionMultiply","getSectionsStats","labelRaw","rendered","toUpperCase","stats","chordRendererFactory","defaultRenderChord","renderChord","getChordSymbol","renderAllChords","detectedKey","chordSymbolRenderer","simplifyChords","useShortNamings","baseKey","getChordSymbolRenderer","renderChords","transposeOffSet","shouldTransposeRepeatedChords","currentKeyEqualsOriginalKey","simplify","replaceRepeatedBars","alignChordsWithLyrics","shouldReplaceWithBarRepeat","barHasMultiplePositionedChords","simpleChordSpacer","alignedChordSpacer","chordLyricsSpacer","renderChordLineModel","renderEmptyLine","renderKeyDeclaration","renderLine","renderLyricLine","renderSectionLabelLine","songTpl","renderSong","parsedSong","_ref$accidentalsType","_ref$alignBars","alignBars","_ref$alignChordsWithL","_ref$autoRepeatChords","autoRepeatChords","_ref$chartType","chartType","_ref$chordSymbolRende","_ref$customRenderer","customRenderer","_ref$expandSectionCop","expandSectionCopy","_ref$expandSectionMul","_ref$printChordsDurat","printChordsDuration","_ref$printBarSeparato","printBarSeparators","_ref$printSubBeatDeli","printSubBeatDelimiters","_ref$printInlineTimeS","printInlineTimeSignatures","_ref$simplifyChords","_ref$transposeValue","_ref$useShortNamings","_ref$wrapChordLyricLi","wrapChordLyricLines","isFirstLyricLineOfSection","contextTimeSignature","previousBarTimeSignature","addPrintChordsDurationsFlag","addPrintBarTimeSignatureFlag","shouldRenderLine","spaceChordLine","allRenderedLines","renderAllLines","song","getSectionWrapperClasses","shouldRepeatLines","isFiltered","shouldSkipAutoRepeatChordLine","shouldSkipSectionMultiplyLine","shouldSkipSectionCopyLine","isLastLine","spaced","_chordLyricsSpacer","lineIsInASection","chordLineToMerge","shouldOpenSection","sectionWrapperClasses","shouldClosePriorSection","shouldMergeChordLine","shouldCloseFinalSection","Boolean","chordMark2ChordPro","options","convert2ChordPro","bind","_ref$showBarSeparator","showBarSeparators","chordProLines","sectionLine","getOpenSectionDirective","getCommentLine","getSectionTitle","j","allSectionLines","isFollowedByLyricLine","getEndSectionDirective","getEnvironmentType","_ref3","_ref4","getLyricLineWithPositionedChords","getLyricLineWithNonPositionedChords","srcLyrics","_ref5","_getChordSymbol","_getChordSymbol2","chordProSymbol","nextPositionMarker","_ref6","chordOffset","_getChordSymbol3","_getChordSymbol4","rawSymbol","extraSpaceOnLastChord","chordMark2UltimateGuitar","convert2UltimateGuitar","srcLine","renderedLine","chordSymbolRe","chordSymbolReplaceWith"],"sourceRoot":""}